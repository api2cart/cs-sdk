/*
 * API2Cart OpenAPI
 *
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test.Model
{
    /// <summary>
    ///  Class for testing CartStoreInfo
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class CartStoreInfoTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for CartStoreInfo
        //private CartStoreInfo instance;

        public CartStoreInfoTests()
        {
            // TODO uncomment below to create an instance of CartStoreInfo
            //instance = new CartStoreInfo();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of CartStoreInfo
        /// </summary>
        [Fact]
        public void CartStoreInfoInstanceTest()
        {
            // TODO uncomment below to test "IsType" CartStoreInfo
            //Assert.IsType<CartStoreInfo>(instance);
        }

        /// <summary>
        /// Test the property 'StoreId'
        /// </summary>
        [Fact]
        public void StoreIdTest()
        {
            // TODO unit test for the property 'StoreId'
        }

        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }

        /// <summary>
        /// Test the property 'Language'
        /// </summary>
        [Fact]
        public void LanguageTest()
        {
            // TODO unit test for the property 'Language'
        }

        /// <summary>
        /// Test the property 'StoreLanguages'
        /// </summary>
        [Fact]
        public void StoreLanguagesTest()
        {
            // TODO unit test for the property 'StoreLanguages'
        }

        /// <summary>
        /// Test the property 'Currency'
        /// </summary>
        [Fact]
        public void CurrencyTest()
        {
            // TODO unit test for the property 'Currency'
        }

        /// <summary>
        /// Test the property 'StoreCurrencies'
        /// </summary>
        [Fact]
        public void StoreCurrenciesTest()
        {
            // TODO unit test for the property 'StoreCurrencies'
        }

        /// <summary>
        /// Test the property 'Timezone'
        /// </summary>
        [Fact]
        public void TimezoneTest()
        {
            // TODO unit test for the property 'Timezone'
        }

        /// <summary>
        /// Test the property 'Country'
        /// </summary>
        [Fact]
        public void CountryTest()
        {
            // TODO unit test for the property 'Country'
        }

        /// <summary>
        /// Test the property 'RootCategoryId'
        /// </summary>
        [Fact]
        public void RootCategoryIdTest()
        {
            // TODO unit test for the property 'RootCategoryId'
        }

        /// <summary>
        /// Test the property 'MultiStoreUrl'
        /// </summary>
        [Fact]
        public void MultiStoreUrlTest()
        {
            // TODO unit test for the property 'MultiStoreUrl'
        }

        /// <summary>
        /// Test the property 'Active'
        /// </summary>
        [Fact]
        public void ActiveTest()
        {
            // TODO unit test for the property 'Active'
        }

        /// <summary>
        /// Test the property 'WeightUnit'
        /// </summary>
        [Fact]
        public void WeightUnitTest()
        {
            // TODO unit test for the property 'WeightUnit'
        }

        /// <summary>
        /// Test the property 'DimensionUnit'
        /// </summary>
        [Fact]
        public void DimensionUnitTest()
        {
            // TODO unit test for the property 'DimensionUnit'
        }

        /// <summary>
        /// Test the property 'PricesIncludeTax'
        /// </summary>
        [Fact]
        public void PricesIncludeTaxTest()
        {
            // TODO unit test for the property 'PricesIncludeTax'
        }

        /// <summary>
        /// Test the property 'CarrierInfo'
        /// </summary>
        [Fact]
        public void CarrierInfoTest()
        {
            // TODO unit test for the property 'CarrierInfo'
        }

        /// <summary>
        /// Test the property 'StoreOwnerInfo'
        /// </summary>
        [Fact]
        public void StoreOwnerInfoTest()
        {
            // TODO unit test for the property 'StoreOwnerInfo'
        }

        /// <summary>
        /// Test the property 'DefaultWarehouseId'
        /// </summary>
        [Fact]
        public void DefaultWarehouseIdTest()
        {
            // TODO unit test for the property 'DefaultWarehouseId'
        }

        /// <summary>
        /// Test the property 'Channels'
        /// </summary>
        [Fact]
        public void ChannelsTest()
        {
            // TODO unit test for the property 'Channels'
        }

        /// <summary>
        /// Test the property 'AdditionalFields'
        /// </summary>
        [Fact]
        public void AdditionalFieldsTest()
        {
            // TODO unit test for the property 'AdditionalFields'
        }

        /// <summary>
        /// Test the property 'CustomFields'
        /// </summary>
        [Fact]
        public void CustomFieldsTest()
        {
            // TODO unit test for the property 'CustomFields'
        }
    }
}
