/*
 * API2Cart OpenAPI
 *
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing BridgeApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class BridgeApiTests : IDisposable
    {
        private BridgeApi instance;

        public BridgeApiTests()
        {
            instance = new BridgeApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of BridgeApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' BridgeApi
            //Assert.IsType<BridgeApi>(instance);
        }

        /// <summary>
        /// Test BridgeDelete
        /// </summary>
        [Fact]
        public void BridgeDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.BridgeDelete();
            //Assert.IsType<AttributeValueDelete200Response>(response);
        }

        /// <summary>
        /// Test BridgeDownload
        /// </summary>
        [Fact]
        public void BridgeDownloadTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? whitelabel = null;
            //var response = instance.BridgeDownload(whitelabel);
            //Assert.IsType<System.IO.Stream>(response);
        }

        /// <summary>
        /// Test BridgeUpdate
        /// </summary>
        [Fact]
        public void BridgeUpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.BridgeUpdate();
            //Assert.IsType<AttributeUpdate200Response>(response);
        }
    }
}
