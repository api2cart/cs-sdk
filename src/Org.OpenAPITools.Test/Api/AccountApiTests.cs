/*
 * API2Cart OpenAPI
 *
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing AccountApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class AccountApiTests : IDisposable
    {
        private AccountApi instance;

        public AccountApiTests()
        {
            instance = new AccountApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of AccountApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' AccountApi
            //Assert.IsType<AccountApi>(instance);
        }

        /// <summary>
        /// Test AccountCartAdd
        /// </summary>
        [Fact]
        public void AccountCartAddTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AccountCartAdd accountCartAdd = null;
            //var response = instance.AccountCartAdd(accountCartAdd);
            //Assert.IsType<AccountCartAdd200Response>(response);
        }

        /// <summary>
        /// Test AccountCartList
        /// </summary>
        [Fact]
        public void AccountCartListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? storeUrl = null;
            //string? storeKey = null;
            //string? requestFromDate = null;
            //string? requestToDate = null;
            //string? varParams = null;
            //string? exclude = null;
            //var response = instance.AccountCartList(storeUrl, storeKey, requestFromDate, requestToDate, varParams, exclude);
            //Assert.IsType<AccountCartList200Response>(response);
        }

        /// <summary>
        /// Test AccountConfigUpdate
        /// </summary>
        [Fact]
        public void AccountConfigUpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? replaceParameters = null;
            //string? newStoreUrl = null;
            //string? newStoreKey = null;
            //string? bridgeUrl = null;
            //string? storeRoot = null;
            //string? dbTablesPrefix = null;
            //string? userAgent = null;
            //string? var3dcartPrivateKey = null;
            //string? var3dcartAccessToken = null;
            //string? var3dcartapiApiKey = null;
            //string? amazonSpClientId = null;
            //string? amazonSpClientSecret = null;
            //string? amazonSpRefreshToken = null;
            //string? amazonSpAwsRegion = null;
            //string? amazonSpApiEnvironment = null;
            //string? amazonSellerId = null;
            //string? aspdotnetstorefrontApiUser = null;
            //string? aspdotnetstorefrontApiPass = null;
            //string? bigcommerceapiAdminAccount = null;
            //string? bigcommerceapiApiPath = null;
            //string? bigcommerceapiApiKey = null;
            //string? bigcommerceapiClientId = null;
            //string? bigcommerceapiAccessToken = null;
            //string? bigcommerceapiContext = null;
            //string? bolApiKey = null;
            //string? bolApiSecret = null;
            //int? bolRetailerId = null;
            //string? demandwareClientId = null;
            //string? demandwareApiPassword = null;
            //string? demandwareUserName = null;
            //string? demandwareUserPassword = null;
            //string? ebayClientId = null;
            //string? ebayClientSecret = null;
            //string? ebayRuname = null;
            //string? ebayAccessToken = null;
            //string? ebayRefreshToken = null;
            //string? ebayEnvironment = null;
            //int? ebaySiteId = null;
            //string? ecwidAcessToken = null;
            //string? ecwidStoreId = null;
            //string? lazadaAppId = null;
            //string? lazadaAppSecret = null;
            //string? lazadaRefreshToken = null;
            //string? lazadaRegion = null;
            //string? etsyKeystring = null;
            //string? etsySharedSecret = null;
            //string? etsyAccessToken = null;
            //string? etsyTokenSecret = null;
            //string? etsyClientId = null;
            //string? etsyRefreshToken = null;
            //string? facebookAppId = null;
            //string? facebookAppSecret = null;
            //string? facebookAccessToken = null;
            //string? facebookBusinessId = null;
            //string? netoApiKey = null;
            //string? netoApiUsername = null;
            //string? shoplineAccessToken = null;
            //string? shoplineAppKey = null;
            //string? shoplineAppSecret = null;
            //string? shoplineSharedSecret = null;
            //string? shopifyAccessToken = null;
            //string? shopifyApiKey = null;
            //string? shopifyApiPassword = null;
            //string? shopifySharedSecret = null;
            //string? shoplazzaAccessToken = null;
            //string? shoplazzaSharedSecret = null;
            //string? mivaAccessToken = null;
            //string? mivaSignature = null;
            //string? shopwareAccessKey = null;
            //string? shopwareApiKey = null;
            //string? shopwareApiSecret = null;
            //string? bigcartelUserName = null;
            //string? bigcartelPassword = null;
            //string? volusionLogin = null;
            //string? volusionPassword = null;
            //string? walmartClientId = null;
            //string? walmartClientSecret = null;
            //string? walmartEnvironment = null;
            //string? walmartChannelType = null;
            //string? walmartRegion = null;
            //string? squareClientId = null;
            //string? squareClientSecret = null;
            //string? squareRefreshToken = null;
            //string? squarespaceApiKey = null;
            //string? squarespaceClientId = null;
            //string? squarespaceClientSecret = null;
            //string? squarespaceAccessToken = null;
            //string? squarespaceRefreshToken = null;
            //string? hybrisClientId = null;
            //string? hybrisClientSecret = null;
            //string? hybrisUsername = null;
            //string? hybrisPassword = null;
            //List<string>? hybrisWebsites = null;
            //string? lightspeedApiKey = null;
            //string? lightspeedApiSecret = null;
            //string? commercehqApiKey = null;
            //string? commercehqApiPassword = null;
            //string? wcConsumerKey = null;
            //string? wcConsumerSecret = null;
            //string? magentoConsumerKey = null;
            //string? magentoConsumerSecret = null;
            //string? magentoAccessToken = null;
            //string? magentoTokenSecret = null;
            //string? prestashopWebserviceKey = null;
            //string? wixAppId = null;
            //string? wixAppSecretKey = null;
            //string? wixInstanceId = null;
            //string? wixRefreshToken = null;
            //string? mercadoLibreAppId = null;
            //string? mercadoLibreAppSecretKey = null;
            //string? mercadoLibreRefreshToken = null;
            //int? zidClientId = null;
            //string? zidClientSecret = null;
            //string? zidAccessToken = null;
            //string? zidAuthorization = null;
            //string? zidRefreshToken = null;
            //string? flipkartClientId = null;
            //string? flipkartClientSecret = null;
            //string? allegroClientId = null;
            //string? allegroClientSecret = null;
            //string? allegroAccessToken = null;
            //string? allegroRefreshToken = null;
            //string? allegroEnvironment = null;
            //string? zohoClientId = null;
            //string? zohoClientSecret = null;
            //string? zohoRefreshToken = null;
            //string? zohoRegion = null;
            //int? tiendanubeUserId = null;
            //string? tiendanubeAccessToken = null;
            //string? tiendanubeClientSecret = null;
            //string? ottoClientId = null;
            //string? ottoClientSecret = null;
            //string? ottoAppId = null;
            //string? ottoRefreshToken = null;
            //string? ottoEnvironment = null;
            //string? ottoAccessToken = null;
            //string? tiktokshopAppKey = null;
            //string? tiktokshopAppSecret = null;
            //string? tiktokshopRefreshToken = null;
            //string? tiktokshopAccessToken = null;
            //string? sallaClientId = null;
            //string? sallaClientSecret = null;
            //string? sallaRefreshToken = null;
            //string? sallaAccessToken = null;
            //var response = instance.AccountConfigUpdate(replaceParameters, newStoreUrl, newStoreKey, bridgeUrl, storeRoot, dbTablesPrefix, userAgent, var3dcartPrivateKey, var3dcartAccessToken, var3dcartapiApiKey, amazonSpClientId, amazonSpClientSecret, amazonSpRefreshToken, amazonSpAwsRegion, amazonSpApiEnvironment, amazonSellerId, aspdotnetstorefrontApiUser, aspdotnetstorefrontApiPass, bigcommerceapiAdminAccount, bigcommerceapiApiPath, bigcommerceapiApiKey, bigcommerceapiClientId, bigcommerceapiAccessToken, bigcommerceapiContext, bolApiKey, bolApiSecret, bolRetailerId, demandwareClientId, demandwareApiPassword, demandwareUserName, demandwareUserPassword, ebayClientId, ebayClientSecret, ebayRuname, ebayAccessToken, ebayRefreshToken, ebayEnvironment, ebaySiteId, ecwidAcessToken, ecwidStoreId, lazadaAppId, lazadaAppSecret, lazadaRefreshToken, lazadaRegion, etsyKeystring, etsySharedSecret, etsyAccessToken, etsyTokenSecret, etsyClientId, etsyRefreshToken, facebookAppId, facebookAppSecret, facebookAccessToken, facebookBusinessId, netoApiKey, netoApiUsername, shoplineAccessToken, shoplineAppKey, shoplineAppSecret, shoplineSharedSecret, shopifyAccessToken, shopifyApiKey, shopifyApiPassword, shopifySharedSecret, shoplazzaAccessToken, shoplazzaSharedSecret, mivaAccessToken, mivaSignature, shopwareAccessKey, shopwareApiKey, shopwareApiSecret, bigcartelUserName, bigcartelPassword, volusionLogin, volusionPassword, walmartClientId, walmartClientSecret, walmartEnvironment, walmartChannelType, walmartRegion, squareClientId, squareClientSecret, squareRefreshToken, squarespaceApiKey, squarespaceClientId, squarespaceClientSecret, squarespaceAccessToken, squarespaceRefreshToken, hybrisClientId, hybrisClientSecret, hybrisUsername, hybrisPassword, hybrisWebsites, lightspeedApiKey, lightspeedApiSecret, commercehqApiKey, commercehqApiPassword, wcConsumerKey, wcConsumerSecret, magentoConsumerKey, magentoConsumerSecret, magentoAccessToken, magentoTokenSecret, prestashopWebserviceKey, wixAppId, wixAppSecretKey, wixInstanceId, wixRefreshToken, mercadoLibreAppId, mercadoLibreAppSecretKey, mercadoLibreRefreshToken, zidClientId, zidClientSecret, zidAccessToken, zidAuthorization, zidRefreshToken, flipkartClientId, flipkartClientSecret, allegroClientId, allegroClientSecret, allegroAccessToken, allegroRefreshToken, allegroEnvironment, zohoClientId, zohoClientSecret, zohoRefreshToken, zohoRegion, tiendanubeUserId, tiendanubeAccessToken, tiendanubeClientSecret, ottoClientId, ottoClientSecret, ottoAppId, ottoRefreshToken, ottoEnvironment, ottoAccessToken, tiktokshopAppKey, tiktokshopAppSecret, tiktokshopRefreshToken, tiktokshopAccessToken, sallaClientId, sallaClientSecret, sallaRefreshToken, sallaAccessToken);
            //Assert.IsType<AccountConfigUpdate200Response>(response);
        }

        /// <summary>
        /// Test AccountFailedWebhooks
        /// </summary>
        [Fact]
        public void AccountFailedWebhooksTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? start = null;
            //int? count = null;
            //string? ids = null;
            //var response = instance.AccountFailedWebhooks(start, count, ids);
            //Assert.IsType<AccountFailedWebhooks200Response>(response);
        }

        /// <summary>
        /// Test AccountSupportedPlatforms
        /// </summary>
        [Fact]
        public void AccountSupportedPlatformsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.AccountSupportedPlatforms();
            //Assert.IsType<AccountSupportedPlatforms200Response>(response);
        }
    }
}
