/*
 * API2Cart OpenAPI
 *
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// OrderStatusRefund
    /// </summary>
    [DataContract(Name = "Order_Status_Refund")]
    public partial class OrderStatusRefund : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="OrderStatusRefund" /> class.
        /// </summary>
        /// <param name="shipping">shipping.</param>
        /// <param name="fee">fee.</param>
        /// <param name="tax">tax.</param>
        /// <param name="totalRefunded">totalRefunded.</param>
        /// <param name="time">time.</param>
        /// <param name="comment">comment.</param>
        /// <param name="refundedItems">refundedItems.</param>
        /// <param name="additionalFields">additionalFields.</param>
        /// <param name="customFields">customFields.</param>
        public OrderStatusRefund(decimal? shipping = default(decimal?), decimal? fee = default(decimal?), decimal? tax = default(decimal?), decimal? totalRefunded = default(decimal?), A2CDateTime time = default(A2CDateTime), string comment = default(string), List<OrderStatusRefundItem> refundedItems = default(List<OrderStatusRefundItem>), Object additionalFields = default(Object), Object customFields = default(Object))
        {
            this.Shipping = shipping;
            this.Fee = fee;
            this.Tax = tax;
            this.TotalRefunded = totalRefunded;
            this.Time = time;
            this.Comment = comment;
            this.RefundedItems = refundedItems;
            this.AdditionalFields = additionalFields;
            this.CustomFields = customFields;
        }

        /// <summary>
        /// Gets or Sets Shipping
        /// </summary>
        [DataMember(Name = "shipping", EmitDefaultValue = true)]
        public decimal? Shipping { get; set; }

        /// <summary>
        /// Gets or Sets Fee
        /// </summary>
        [DataMember(Name = "fee", EmitDefaultValue = true)]
        public decimal? Fee { get; set; }

        /// <summary>
        /// Gets or Sets Tax
        /// </summary>
        [DataMember(Name = "tax", EmitDefaultValue = true)]
        public decimal? Tax { get; set; }

        /// <summary>
        /// Gets or Sets TotalRefunded
        /// </summary>
        [DataMember(Name = "total_refunded", EmitDefaultValue = true)]
        public decimal? TotalRefunded { get; set; }

        /// <summary>
        /// Gets or Sets Time
        /// </summary>
        [DataMember(Name = "time", EmitDefaultValue = true)]
        public A2CDateTime Time { get; set; }

        /// <summary>
        /// Gets or Sets Comment
        /// </summary>
        [DataMember(Name = "comment", EmitDefaultValue = true)]
        public string Comment { get; set; }

        /// <summary>
        /// Gets or Sets RefundedItems
        /// </summary>
        [DataMember(Name = "refunded_items", EmitDefaultValue = false)]
        public List<OrderStatusRefundItem> RefundedItems { get; set; }

        /// <summary>
        /// Gets or Sets AdditionalFields
        /// </summary>
        [DataMember(Name = "additional_fields", EmitDefaultValue = true)]
        public Object AdditionalFields { get; set; }

        /// <summary>
        /// Gets or Sets CustomFields
        /// </summary>
        [DataMember(Name = "custom_fields", EmitDefaultValue = true)]
        public Object CustomFields { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class OrderStatusRefund {\n");
            sb.Append("  Shipping: ").Append(Shipping).Append("\n");
            sb.Append("  Fee: ").Append(Fee).Append("\n");
            sb.Append("  Tax: ").Append(Tax).Append("\n");
            sb.Append("  TotalRefunded: ").Append(TotalRefunded).Append("\n");
            sb.Append("  Time: ").Append(Time).Append("\n");
            sb.Append("  Comment: ").Append(Comment).Append("\n");
            sb.Append("  RefundedItems: ").Append(RefundedItems).Append("\n");
            sb.Append("  AdditionalFields: ").Append(AdditionalFields).Append("\n");
            sb.Append("  CustomFields: ").Append(CustomFields).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
