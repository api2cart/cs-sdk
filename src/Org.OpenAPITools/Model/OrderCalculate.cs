/*
 * API2Cart OpenAPI
 *
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// OrderCalculate
    /// </summary>
    [DataContract(Name = "OrderCalculate")]
    public partial class OrderCalculate : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="OrderCalculate" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected OrderCalculate() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="OrderCalculate" /> class.
        /// </summary>
        /// <param name="customerEmail">Defines the customer specified by email for whom the order needs to be calculated (required).</param>
        /// <param name="currencyId">Currency Id.</param>
        /// <param name="storeId">Store Id.</param>
        /// <param name="coupons">Coupons that will be applied to order. If the order isn&#39;t eligible for any given discount code or there is no discount with such a code it will be skipped during calculation.</param>
        /// <param name="shippFirstName">Specifies shipping first name (required).</param>
        /// <param name="shippLastName">Specifies shipping last name (required).</param>
        /// <param name="shippAddress1">Specifies first shipping address (required).</param>
        /// <param name="shippAddress2">Specifies second address line of a shipping street address.</param>
        /// <param name="shippCity">Specifies shipping city (required).</param>
        /// <param name="shippPostcode">Specifies shipping postcode (required).</param>
        /// <param name="shippState">Specifies shipping state code.</param>
        /// <param name="shippCountry">Specifies shipping country code (required).</param>
        /// <param name="shippCompany">Specifies shipping company.</param>
        /// <param name="shippPhone">Specifies shipping phone.</param>
        /// <param name="billFirstName">Specifies billing first name.</param>
        /// <param name="billLastName">Specifies billing last name.</param>
        /// <param name="billAddress1">Specifies first billing address.</param>
        /// <param name="billAddress2">Specifies second billing address.</param>
        /// <param name="billCity">Specifies billing city.</param>
        /// <param name="billPostcode">Specifies billing postcode.</param>
        /// <param name="billState">Specifies billing state code.</param>
        /// <param name="billCountry">Specifies billing country code.</param>
        /// <param name="billCompany">Specifies billing company.</param>
        /// <param name="billPhone">Specifies billing phone.</param>
        /// <param name="responseFields">Set this parameter in order to choose which entity fields you want to retrieve.</param>
        /// <param name="orderItem">orderItem (required).</param>
        public OrderCalculate(string customerEmail = default(string), string currencyId = default(string), string storeId = default(string), List<string> coupons = default(List<string>), string shippFirstName = default(string), string shippLastName = default(string), string shippAddress1 = default(string), string shippAddress2 = default(string), string shippCity = default(string), string shippPostcode = default(string), string shippState = default(string), string shippCountry = default(string), string shippCompany = default(string), string shippPhone = default(string), string billFirstName = default(string), string billLastName = default(string), string billAddress1 = default(string), string billAddress2 = default(string), string billCity = default(string), string billPostcode = default(string), string billState = default(string), string billCountry = default(string), string billCompany = default(string), string billPhone = default(string), string responseFields = default(string), List<OrderCalculateOrderItemInner> orderItem = default(List<OrderCalculateOrderItemInner>))
        {
            // to ensure "customerEmail" is required (not null)
            if (customerEmail == null)
            {
                throw new ArgumentNullException("customerEmail is a required property for OrderCalculate and cannot be null");
            }
            this.CustomerEmail = customerEmail;
            // to ensure "shippFirstName" is required (not null)
            if (shippFirstName == null)
            {
                throw new ArgumentNullException("shippFirstName is a required property for OrderCalculate and cannot be null");
            }
            this.ShippFirstName = shippFirstName;
            // to ensure "shippLastName" is required (not null)
            if (shippLastName == null)
            {
                throw new ArgumentNullException("shippLastName is a required property for OrderCalculate and cannot be null");
            }
            this.ShippLastName = shippLastName;
            // to ensure "shippAddress1" is required (not null)
            if (shippAddress1 == null)
            {
                throw new ArgumentNullException("shippAddress1 is a required property for OrderCalculate and cannot be null");
            }
            this.ShippAddress1 = shippAddress1;
            // to ensure "shippCity" is required (not null)
            if (shippCity == null)
            {
                throw new ArgumentNullException("shippCity is a required property for OrderCalculate and cannot be null");
            }
            this.ShippCity = shippCity;
            // to ensure "shippPostcode" is required (not null)
            if (shippPostcode == null)
            {
                throw new ArgumentNullException("shippPostcode is a required property for OrderCalculate and cannot be null");
            }
            this.ShippPostcode = shippPostcode;
            // to ensure "shippCountry" is required (not null)
            if (shippCountry == null)
            {
                throw new ArgumentNullException("shippCountry is a required property for OrderCalculate and cannot be null");
            }
            this.ShippCountry = shippCountry;
            // to ensure "orderItem" is required (not null)
            if (orderItem == null)
            {
                throw new ArgumentNullException("orderItem is a required property for OrderCalculate and cannot be null");
            }
            this.OrderItem = orderItem;
            this.CurrencyId = currencyId;
            this.StoreId = storeId;
            this.Coupons = coupons;
            this.ShippAddress2 = shippAddress2;
            this.ShippState = shippState;
            this.ShippCompany = shippCompany;
            this.ShippPhone = shippPhone;
            this.BillFirstName = billFirstName;
            this.BillLastName = billLastName;
            this.BillAddress1 = billAddress1;
            this.BillAddress2 = billAddress2;
            this.BillCity = billCity;
            this.BillPostcode = billPostcode;
            this.BillState = billState;
            this.BillCountry = billCountry;
            this.BillCompany = billCompany;
            this.BillPhone = billPhone;
            this.ResponseFields = responseFields;
        }

        /// <summary>
        /// Defines the customer specified by email for whom the order needs to be calculated
        /// </summary>
        /// <value>Defines the customer specified by email for whom the order needs to be calculated</value>
        /*
        <example>jubari@hannsgroup.com</example>
        */
        [DataMember(Name = "customer_email", IsRequired = true, EmitDefaultValue = true)]
        public string CustomerEmail { get; set; }

        /// <summary>
        /// Currency Id
        /// </summary>
        /// <value>Currency Id</value>
        /*
        <example>usd</example>
        */
        [DataMember(Name = "currency_id", EmitDefaultValue = false)]
        public string CurrencyId { get; set; }

        /// <summary>
        /// Store Id
        /// </summary>
        /// <value>Store Id</value>
        /*
        <example>1</example>
        */
        [DataMember(Name = "store_id", EmitDefaultValue = false)]
        public string StoreId { get; set; }

        /// <summary>
        /// Coupons that will be applied to order. If the order isn&#39;t eligible for any given discount code or there is no discount with such a code it will be skipped during calculation
        /// </summary>
        /// <value>Coupons that will be applied to order. If the order isn&#39;t eligible for any given discount code or there is no discount with such a code it will be skipped during calculation</value>
        [DataMember(Name = "coupons", EmitDefaultValue = false)]
        public List<string> Coupons { get; set; }

        /// <summary>
        /// Specifies shipping first name
        /// </summary>
        /// <value>Specifies shipping first name</value>
        /*
        <example>John</example>
        */
        [DataMember(Name = "shipp_first_name", IsRequired = true, EmitDefaultValue = true)]
        public string ShippFirstName { get; set; }

        /// <summary>
        /// Specifies shipping last name
        /// </summary>
        /// <value>Specifies shipping last name</value>
        /*
        <example>Smith</example>
        */
        [DataMember(Name = "shipp_last_name", IsRequired = true, EmitDefaultValue = true)]
        public string ShippLastName { get; set; }

        /// <summary>
        /// Specifies first shipping address
        /// </summary>
        /// <value>Specifies first shipping address</value>
        /*
        <example>Green str. 35</example>
        */
        [DataMember(Name = "shipp_address_1", IsRequired = true, EmitDefaultValue = true)]
        public string ShippAddress1 { get; set; }

        /// <summary>
        /// Specifies second address line of a shipping street address
        /// </summary>
        /// <value>Specifies second address line of a shipping street address</value>
        /*
        <example>Green str. 35</example>
        */
        [DataMember(Name = "shipp_address_2", EmitDefaultValue = false)]
        public string ShippAddress2 { get; set; }

        /// <summary>
        /// Specifies shipping city
        /// </summary>
        /// <value>Specifies shipping city</value>
        /*
        <example>Chicago</example>
        */
        [DataMember(Name = "shipp_city", IsRequired = true, EmitDefaultValue = true)]
        public string ShippCity { get; set; }

        /// <summary>
        /// Specifies shipping postcode
        /// </summary>
        /// <value>Specifies shipping postcode</value>
        /*
        <example>24545</example>
        */
        [DataMember(Name = "shipp_postcode", IsRequired = true, EmitDefaultValue = true)]
        public string ShippPostcode { get; set; }

        /// <summary>
        /// Specifies shipping state code
        /// </summary>
        /// <value>Specifies shipping state code</value>
        /*
        <example>IL</example>
        */
        [DataMember(Name = "shipp_state", EmitDefaultValue = false)]
        public string ShippState { get; set; }

        /// <summary>
        /// Specifies shipping country code
        /// </summary>
        /// <value>Specifies shipping country code</value>
        /*
        <example>US</example>
        */
        [DataMember(Name = "shipp_country", IsRequired = true, EmitDefaultValue = true)]
        public string ShippCountry { get; set; }

        /// <summary>
        /// Specifies shipping company
        /// </summary>
        /// <value>Specifies shipping company</value>
        /*
        <example>Apple</example>
        */
        [DataMember(Name = "shipp_company", EmitDefaultValue = false)]
        public string ShippCompany { get; set; }

        /// <summary>
        /// Specifies shipping phone
        /// </summary>
        /// <value>Specifies shipping phone</value>
        /*
        <example>880086544564</example>
        */
        [DataMember(Name = "shipp_phone", EmitDefaultValue = false)]
        public string ShippPhone { get; set; }

        /// <summary>
        /// Specifies billing first name
        /// </summary>
        /// <value>Specifies billing first name</value>
        /*
        <example>Adam</example>
        */
        [DataMember(Name = "bill_first_name", EmitDefaultValue = false)]
        public string BillFirstName { get; set; }

        /// <summary>
        /// Specifies billing last name
        /// </summary>
        /// <value>Specifies billing last name</value>
        /*
        <example>Smith</example>
        */
        [DataMember(Name = "bill_last_name", EmitDefaultValue = false)]
        public string BillLastName { get; set; }

        /// <summary>
        /// Specifies first billing address
        /// </summary>
        /// <value>Specifies first billing address</value>
        /*
        <example>Green str. 35</example>
        */
        [DataMember(Name = "bill_address_1", EmitDefaultValue = false)]
        public string BillAddress1 { get; set; }

        /// <summary>
        /// Specifies second billing address
        /// </summary>
        /// <value>Specifies second billing address</value>
        /*
        <example>Red str, 2</example>
        */
        [DataMember(Name = "bill_address_2", EmitDefaultValue = false)]
        public string BillAddress2 { get; set; }

        /// <summary>
        /// Specifies billing city
        /// </summary>
        /// <value>Specifies billing city</value>
        /*
        <example>Chicago</example>
        */
        [DataMember(Name = "bill_city", EmitDefaultValue = false)]
        public string BillCity { get; set; }

        /// <summary>
        /// Specifies billing postcode
        /// </summary>
        /// <value>Specifies billing postcode</value>
        /*
        <example>12345</example>
        */
        [DataMember(Name = "bill_postcode", EmitDefaultValue = false)]
        public string BillPostcode { get; set; }

        /// <summary>
        /// Specifies billing state code
        /// </summary>
        /// <value>Specifies billing state code</value>
        /*
        <example>IL</example>
        */
        [DataMember(Name = "bill_state", EmitDefaultValue = false)]
        public string BillState { get; set; }

        /// <summary>
        /// Specifies billing country code
        /// </summary>
        /// <value>Specifies billing country code</value>
        /*
        <example>US</example>
        */
        [DataMember(Name = "bill_country", EmitDefaultValue = false)]
        public string BillCountry { get; set; }

        /// <summary>
        /// Specifies billing company
        /// </summary>
        /// <value>Specifies billing company</value>
        /*
        <example>Apple</example>
        */
        [DataMember(Name = "bill_company", EmitDefaultValue = false)]
        public string BillCompany { get; set; }

        /// <summary>
        /// Specifies billing phone
        /// </summary>
        /// <value>Specifies billing phone</value>
        /*
        <example>8 800 5659 6896</example>
        */
        [DataMember(Name = "bill_phone", EmitDefaultValue = false)]
        public string BillPhone { get; set; }

        /// <summary>
        /// Set this parameter in order to choose which entity fields you want to retrieve
        /// </summary>
        /// <value>Set this parameter in order to choose which entity fields you want to retrieve</value>
        /*
        <example>{result}</example>
        */
        [DataMember(Name = "response_fields", EmitDefaultValue = false)]
        public string ResponseFields { get; set; }

        /// <summary>
        /// Gets or Sets OrderItem
        /// </summary>
        [DataMember(Name = "order_item", IsRequired = true, EmitDefaultValue = true)]
        public List<OrderCalculateOrderItemInner> OrderItem { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class OrderCalculate {\n");
            sb.Append("  CustomerEmail: ").Append(CustomerEmail).Append("\n");
            sb.Append("  CurrencyId: ").Append(CurrencyId).Append("\n");
            sb.Append("  StoreId: ").Append(StoreId).Append("\n");
            sb.Append("  Coupons: ").Append(Coupons).Append("\n");
            sb.Append("  ShippFirstName: ").Append(ShippFirstName).Append("\n");
            sb.Append("  ShippLastName: ").Append(ShippLastName).Append("\n");
            sb.Append("  ShippAddress1: ").Append(ShippAddress1).Append("\n");
            sb.Append("  ShippAddress2: ").Append(ShippAddress2).Append("\n");
            sb.Append("  ShippCity: ").Append(ShippCity).Append("\n");
            sb.Append("  ShippPostcode: ").Append(ShippPostcode).Append("\n");
            sb.Append("  ShippState: ").Append(ShippState).Append("\n");
            sb.Append("  ShippCountry: ").Append(ShippCountry).Append("\n");
            sb.Append("  ShippCompany: ").Append(ShippCompany).Append("\n");
            sb.Append("  ShippPhone: ").Append(ShippPhone).Append("\n");
            sb.Append("  BillFirstName: ").Append(BillFirstName).Append("\n");
            sb.Append("  BillLastName: ").Append(BillLastName).Append("\n");
            sb.Append("  BillAddress1: ").Append(BillAddress1).Append("\n");
            sb.Append("  BillAddress2: ").Append(BillAddress2).Append("\n");
            sb.Append("  BillCity: ").Append(BillCity).Append("\n");
            sb.Append("  BillPostcode: ").Append(BillPostcode).Append("\n");
            sb.Append("  BillState: ").Append(BillState).Append("\n");
            sb.Append("  BillCountry: ").Append(BillCountry).Append("\n");
            sb.Append("  BillCompany: ").Append(BillCompany).Append("\n");
            sb.Append("  BillPhone: ").Append(BillPhone).Append("\n");
            sb.Append("  ResponseFields: ").Append(ResponseFields).Append("\n");
            sb.Append("  OrderItem: ").Append(OrderItem).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
