/*
 * API2Cart OpenAPI
 *
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// ProductAdvancedPrice
    /// </summary>
    [DataContract(Name = "Product_AdvancedPrice")]
    public partial class ProductAdvancedPrice : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ProductAdvancedPrice" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="value">value.</param>
        /// <param name="avail">avail.</param>
        /// <param name="groupId">groupId.</param>
        /// <param name="quantityFrom">quantityFrom.</param>
        /// <param name="startTime">startTime.</param>
        /// <param name="expireTime">expireTime.</param>
        /// <param name="additionalFields">additionalFields.</param>
        /// <param name="customFields">customFields.</param>
        public ProductAdvancedPrice(string id = default(string), decimal value = default(decimal), bool? avail = default(bool?), string groupId = default(string), decimal? quantityFrom = default(decimal?), A2CDateTime startTime = default(A2CDateTime), A2CDateTime expireTime = default(A2CDateTime), Object additionalFields = default(Object), Object customFields = default(Object))
        {
            this.Id = id;
            this.Value = value;
            this.Avail = avail;
            this.GroupId = groupId;
            this.QuantityFrom = quantityFrom;
            this.StartTime = startTime;
            this.ExpireTime = expireTime;
            this.AdditionalFields = additionalFields;
            this.CustomFields = customFields;
        }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets Value
        /// </summary>
        [DataMember(Name = "value", EmitDefaultValue = false)]
        public decimal Value { get; set; }

        /// <summary>
        /// Gets or Sets Avail
        /// </summary>
        [DataMember(Name = "avail", EmitDefaultValue = true)]
        public bool? Avail { get; set; }

        /// <summary>
        /// Gets or Sets GroupId
        /// </summary>
        [DataMember(Name = "group_id", EmitDefaultValue = true)]
        public string GroupId { get; set; }

        /// <summary>
        /// Gets or Sets QuantityFrom
        /// </summary>
        [DataMember(Name = "quantity_from", EmitDefaultValue = true)]
        public decimal? QuantityFrom { get; set; }

        /// <summary>
        /// Gets or Sets StartTime
        /// </summary>
        [DataMember(Name = "start_time", EmitDefaultValue = true)]
        public A2CDateTime StartTime { get; set; }

        /// <summary>
        /// Gets or Sets ExpireTime
        /// </summary>
        [DataMember(Name = "expire_time", EmitDefaultValue = true)]
        public A2CDateTime ExpireTime { get; set; }

        /// <summary>
        /// Gets or Sets AdditionalFields
        /// </summary>
        [DataMember(Name = "additional_fields", EmitDefaultValue = true)]
        public Object AdditionalFields { get; set; }

        /// <summary>
        /// Gets or Sets CustomFields
        /// </summary>
        [DataMember(Name = "custom_fields", EmitDefaultValue = true)]
        public Object CustomFields { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ProductAdvancedPrice {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Value: ").Append(Value).Append("\n");
            sb.Append("  Avail: ").Append(Avail).Append("\n");
            sb.Append("  GroupId: ").Append(GroupId).Append("\n");
            sb.Append("  QuantityFrom: ").Append(QuantityFrom).Append("\n");
            sb.Append("  StartTime: ").Append(StartTime).Append("\n");
            sb.Append("  ExpireTime: ").Append(ExpireTime).Append("\n");
            sb.Append("  AdditionalFields: ").Append(AdditionalFields).Append("\n");
            sb.Append("  CustomFields: ").Append(CustomFields).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
