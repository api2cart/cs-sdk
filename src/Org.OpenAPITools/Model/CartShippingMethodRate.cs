/*
 * API2Cart OpenAPI
 *
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// CartShippingMethodRate
    /// </summary>
    [DataContract(Name = "Cart_ShippingMethod_Rate")]
    public partial class CartShippingMethodRate : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CartShippingMethodRate" /> class.
        /// </summary>
        /// <param name="minWeight">minWeight.</param>
        /// <param name="maxWeight">maxWeight.</param>
        /// <param name="minOrderAmount">minOrderAmount.</param>
        /// <param name="maxOrderAmount">maxOrderAmount.</param>
        /// <param name="minItemsCount">minItemsCount.</param>
        /// <param name="maxItemsCount">maxItemsCount.</param>
        /// <param name="price">price.</param>
        /// <param name="additionalFields">additionalFields.</param>
        /// <param name="customFields">customFields.</param>
        public CartShippingMethodRate(string minWeight = default(string), string maxWeight = default(string), string minOrderAmount = default(string), string maxOrderAmount = default(string), string minItemsCount = default(string), string maxItemsCount = default(string), string price = default(string), Object additionalFields = default(Object), Object customFields = default(Object))
        {
            this.MinWeight = minWeight;
            this.MaxWeight = maxWeight;
            this.MinOrderAmount = minOrderAmount;
            this.MaxOrderAmount = maxOrderAmount;
            this.MinItemsCount = minItemsCount;
            this.MaxItemsCount = maxItemsCount;
            this.Price = price;
            this.AdditionalFields = additionalFields;
            this.CustomFields = customFields;
        }

        /// <summary>
        /// Gets or Sets MinWeight
        /// </summary>
        [DataMember(Name = "min_weight", EmitDefaultValue = true)]
        public string MinWeight { get; set; }

        /// <summary>
        /// Gets or Sets MaxWeight
        /// </summary>
        [DataMember(Name = "max_weight", EmitDefaultValue = true)]
        public string MaxWeight { get; set; }

        /// <summary>
        /// Gets or Sets MinOrderAmount
        /// </summary>
        [DataMember(Name = "min_order_amount", EmitDefaultValue = true)]
        public string MinOrderAmount { get; set; }

        /// <summary>
        /// Gets or Sets MaxOrderAmount
        /// </summary>
        [DataMember(Name = "max_order_amount", EmitDefaultValue = true)]
        public string MaxOrderAmount { get; set; }

        /// <summary>
        /// Gets or Sets MinItemsCount
        /// </summary>
        [DataMember(Name = "min_items_count", EmitDefaultValue = true)]
        public string MinItemsCount { get; set; }

        /// <summary>
        /// Gets or Sets MaxItemsCount
        /// </summary>
        [DataMember(Name = "max_items_count", EmitDefaultValue = true)]
        public string MaxItemsCount { get; set; }

        /// <summary>
        /// Gets or Sets Price
        /// </summary>
        [DataMember(Name = "price", EmitDefaultValue = true)]
        public string Price { get; set; }

        /// <summary>
        /// Gets or Sets AdditionalFields
        /// </summary>
        [DataMember(Name = "additional_fields", EmitDefaultValue = true)]
        public Object AdditionalFields { get; set; }

        /// <summary>
        /// Gets or Sets CustomFields
        /// </summary>
        [DataMember(Name = "custom_fields", EmitDefaultValue = true)]
        public Object CustomFields { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CartShippingMethodRate {\n");
            sb.Append("  MinWeight: ").Append(MinWeight).Append("\n");
            sb.Append("  MaxWeight: ").Append(MaxWeight).Append("\n");
            sb.Append("  MinOrderAmount: ").Append(MinOrderAmount).Append("\n");
            sb.Append("  MaxOrderAmount: ").Append(MaxOrderAmount).Append("\n");
            sb.Append("  MinItemsCount: ").Append(MinItemsCount).Append("\n");
            sb.Append("  MaxItemsCount: ").Append(MaxItemsCount).Append("\n");
            sb.Append("  Price: ").Append(Price).Append("\n");
            sb.Append("  AdditionalFields: ").Append(AdditionalFields).Append("\n");
            sb.Append("  CustomFields: ").Append(CustomFields).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
