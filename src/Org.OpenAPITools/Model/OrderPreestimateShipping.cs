/*
 * API2Cart OpenAPI
 *
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// OrderPreestimateShipping
    /// </summary>
    [DataContract(Name = "Order_PreestimateShipping")]
    public partial class OrderPreestimateShipping : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="OrderPreestimateShipping" /> class.
        /// </summary>
        /// <param name="methodCode">methodCode.</param>
        /// <param name="methodName">methodName.</param>
        /// <param name="carrierCode">carrierCode.</param>
        /// <param name="carrierName">carrierName.</param>
        /// <param name="description">description.</param>
        /// <param name="price">price.</param>
        /// <param name="priceIncTax">priceIncTax.</param>
        /// <param name="deliveryTime">deliveryTime.</param>
        /// <param name="additionalFields">additionalFields.</param>
        /// <param name="customFields">customFields.</param>
        public OrderPreestimateShipping(string methodCode = default(string), string methodName = default(string), string carrierCode = default(string), string carrierName = default(string), string description = default(string), decimal? price = default(decimal?), decimal? priceIncTax = default(decimal?), string deliveryTime = default(string), Object additionalFields = default(Object), Object customFields = default(Object))
        {
            this.MethodCode = methodCode;
            this.MethodName = methodName;
            this.CarrierCode = carrierCode;
            this.CarrierName = carrierName;
            this.Description = description;
            this.Price = price;
            this.PriceIncTax = priceIncTax;
            this.DeliveryTime = deliveryTime;
            this.AdditionalFields = additionalFields;
            this.CustomFields = customFields;
        }

        /// <summary>
        /// Gets or Sets MethodCode
        /// </summary>
        [DataMember(Name = "method_code", EmitDefaultValue = false)]
        public string MethodCode { get; set; }

        /// <summary>
        /// Gets or Sets MethodName
        /// </summary>
        [DataMember(Name = "method_name", EmitDefaultValue = true)]
        public string MethodName { get; set; }

        /// <summary>
        /// Gets or Sets CarrierCode
        /// </summary>
        [DataMember(Name = "carrier_code", EmitDefaultValue = true)]
        public string CarrierCode { get; set; }

        /// <summary>
        /// Gets or Sets CarrierName
        /// </summary>
        [DataMember(Name = "carrier_name", EmitDefaultValue = true)]
        public string CarrierName { get; set; }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name = "description", EmitDefaultValue = true)]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets Price
        /// </summary>
        [DataMember(Name = "price", EmitDefaultValue = true)]
        public decimal? Price { get; set; }

        /// <summary>
        /// Gets or Sets PriceIncTax
        /// </summary>
        [DataMember(Name = "price_inc_tax", EmitDefaultValue = true)]
        public decimal? PriceIncTax { get; set; }

        /// <summary>
        /// Gets or Sets DeliveryTime
        /// </summary>
        [DataMember(Name = "delivery_time", EmitDefaultValue = true)]
        public string DeliveryTime { get; set; }

        /// <summary>
        /// Gets or Sets AdditionalFields
        /// </summary>
        [DataMember(Name = "additional_fields", EmitDefaultValue = true)]
        public Object AdditionalFields { get; set; }

        /// <summary>
        /// Gets or Sets CustomFields
        /// </summary>
        [DataMember(Name = "custom_fields", EmitDefaultValue = true)]
        public Object CustomFields { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class OrderPreestimateShipping {\n");
            sb.Append("  MethodCode: ").Append(MethodCode).Append("\n");
            sb.Append("  MethodName: ").Append(MethodName).Append("\n");
            sb.Append("  CarrierCode: ").Append(CarrierCode).Append("\n");
            sb.Append("  CarrierName: ").Append(CarrierName).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  Price: ").Append(Price).Append("\n");
            sb.Append("  PriceIncTax: ").Append(PriceIncTax).Append("\n");
            sb.Append("  DeliveryTime: ").Append(DeliveryTime).Append("\n");
            sb.Append("  AdditionalFields: ").Append(AdditionalFields).Append("\n");
            sb.Append("  CustomFields: ").Append(CustomFields).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
