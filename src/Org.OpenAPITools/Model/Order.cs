/*
 * API2Cart OpenAPI
 *
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// Order
    /// </summary>
    [DataContract(Name = "Order")]
    public partial class Order : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Order" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="orderId">orderId.</param>
        /// <param name="basketId">basketId.</param>
        /// <param name="channelId">channelId.</param>
        /// <param name="customer">customer.</param>
        /// <param name="createAt">createAt.</param>
        /// <param name="currency">currency.</param>
        /// <param name="shippingAddress">shippingAddress.</param>
        /// <param name="billingAddress">billingAddress.</param>
        /// <param name="paymentMethod">paymentMethod.</param>
        /// <param name="shippingMethod">shippingMethod.</param>
        /// <param name="shippingMethods">shippingMethods.</param>
        /// <param name="status">status.</param>
        /// <param name="totals">totals.</param>
        /// <param name="total">total.</param>
        /// <param name="discounts">discounts.</param>
        /// <param name="orderProducts">orderProducts.</param>
        /// <param name="bundles">bundles.</param>
        /// <param name="modifiedAt">modifiedAt.</param>
        /// <param name="finishedTime">finishedTime.</param>
        /// <param name="comment">comment.</param>
        /// <param name="storeId">storeId.</param>
        /// <param name="warehousesIds">warehousesIds.</param>
        /// <param name="refunds">refunds.</param>
        /// <param name="giftMessage">giftMessage.</param>
        /// <param name="orderDetailsUrl">orderDetailsUrl.</param>
        /// <param name="additionalFields">additionalFields.</param>
        /// <param name="customFields">customFields.</param>
        public Order(string id = default(string), string orderId = default(string), string basketId = default(string), string channelId = default(string), BaseCustomer customer = default(BaseCustomer), A2CDateTime createAt = default(A2CDateTime), Currency currency = default(Currency), CustomerAddress shippingAddress = default(CustomerAddress), CustomerAddress billingAddress = default(CustomerAddress), OrderPaymentMethod paymentMethod = default(OrderPaymentMethod), OrderShippingMethod shippingMethod = default(OrderShippingMethod), List<OrderShippingMethod> shippingMethods = default(List<OrderShippingMethod>), OrderStatus status = default(OrderStatus), OrderTotals totals = default(OrderTotals), OrderTotal total = default(OrderTotal), List<OrderTotalsNewDiscount> discounts = default(List<OrderTotalsNewDiscount>), List<OrderItem> orderProducts = default(List<OrderItem>), List<OrderItem> bundles = default(List<OrderItem>), A2CDateTime modifiedAt = default(A2CDateTime), A2CDateTime finishedTime = default(A2CDateTime), string comment = default(string), string storeId = default(string), List<string> warehousesIds = default(List<string>), List<OrderRefund> refunds = default(List<OrderRefund>), string giftMessage = default(string), string orderDetailsUrl = default(string), Object additionalFields = default(Object), Object customFields = default(Object))
        {
            this.Id = id;
            this.OrderId = orderId;
            this.BasketId = basketId;
            this.ChannelId = channelId;
            this.Customer = customer;
            this.CreateAt = createAt;
            this.Currency = currency;
            this.ShippingAddress = shippingAddress;
            this.BillingAddress = billingAddress;
            this.PaymentMethod = paymentMethod;
            this.ShippingMethod = shippingMethod;
            this.ShippingMethods = shippingMethods;
            this.Status = status;
            this.Totals = totals;
            this.Total = total;
            this.Discounts = discounts;
            this.OrderProducts = orderProducts;
            this.Bundles = bundles;
            this.ModifiedAt = modifiedAt;
            this.FinishedTime = finishedTime;
            this.Comment = comment;
            this.StoreId = storeId;
            this.WarehousesIds = warehousesIds;
            this.Refunds = refunds;
            this.GiftMessage = giftMessage;
            this.OrderDetailsUrl = orderDetailsUrl;
            this.AdditionalFields = additionalFields;
            this.CustomFields = customFields;
        }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets OrderId
        /// </summary>
        [DataMember(Name = "order_id", EmitDefaultValue = false)]
        public string OrderId { get; set; }

        /// <summary>
        /// Gets or Sets BasketId
        /// </summary>
        [DataMember(Name = "basket_id", EmitDefaultValue = true)]
        public string BasketId { get; set; }

        /// <summary>
        /// Gets or Sets ChannelId
        /// </summary>
        [DataMember(Name = "channel_id", EmitDefaultValue = true)]
        public string ChannelId { get; set; }

        /// <summary>
        /// Gets or Sets Customer
        /// </summary>
        [DataMember(Name = "customer", EmitDefaultValue = false)]
        public BaseCustomer Customer { get; set; }

        /// <summary>
        /// Gets or Sets CreateAt
        /// </summary>
        [DataMember(Name = "create_at", EmitDefaultValue = false)]
        public A2CDateTime CreateAt { get; set; }

        /// <summary>
        /// Gets or Sets Currency
        /// </summary>
        [DataMember(Name = "currency", EmitDefaultValue = true)]
        public Currency Currency { get; set; }

        /// <summary>
        /// Gets or Sets ShippingAddress
        /// </summary>
        [DataMember(Name = "shipping_address", EmitDefaultValue = true)]
        public CustomerAddress ShippingAddress { get; set; }

        /// <summary>
        /// Gets or Sets BillingAddress
        /// </summary>
        [DataMember(Name = "billing_address", EmitDefaultValue = true)]
        public CustomerAddress BillingAddress { get; set; }

        /// <summary>
        /// Gets or Sets PaymentMethod
        /// </summary>
        [DataMember(Name = "payment_method", EmitDefaultValue = true)]
        public OrderPaymentMethod PaymentMethod { get; set; }

        /// <summary>
        /// Gets or Sets ShippingMethod
        /// </summary>
        [DataMember(Name = "shipping_method", EmitDefaultValue = true)]
        public OrderShippingMethod ShippingMethod { get; set; }

        /// <summary>
        /// Gets or Sets ShippingMethods
        /// </summary>
        [DataMember(Name = "shipping_methods", EmitDefaultValue = false)]
        public List<OrderShippingMethod> ShippingMethods { get; set; }

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name = "status", EmitDefaultValue = false)]
        public OrderStatus Status { get; set; }

        /// <summary>
        /// Gets or Sets Totals
        /// </summary>
        [DataMember(Name = "totals", EmitDefaultValue = true)]
        public OrderTotals Totals { get; set; }

        /// <summary>
        /// Gets or Sets Total
        /// </summary>
        [DataMember(Name = "total", EmitDefaultValue = true)]
        public OrderTotal Total { get; set; }

        /// <summary>
        /// Gets or Sets Discounts
        /// </summary>
        [DataMember(Name = "discounts", EmitDefaultValue = false)]
        public List<OrderTotalsNewDiscount> Discounts { get; set; }

        /// <summary>
        /// Gets or Sets OrderProducts
        /// </summary>
        [DataMember(Name = "order_products", EmitDefaultValue = false)]
        public List<OrderItem> OrderProducts { get; set; }

        /// <summary>
        /// Gets or Sets Bundles
        /// </summary>
        [DataMember(Name = "bundles", EmitDefaultValue = false)]
        public List<OrderItem> Bundles { get; set; }

        /// <summary>
        /// Gets or Sets ModifiedAt
        /// </summary>
        [DataMember(Name = "modified_at", EmitDefaultValue = true)]
        public A2CDateTime ModifiedAt { get; set; }

        /// <summary>
        /// Gets or Sets FinishedTime
        /// </summary>
        [DataMember(Name = "finished_time", EmitDefaultValue = true)]
        public A2CDateTime FinishedTime { get; set; }

        /// <summary>
        /// Gets or Sets Comment
        /// </summary>
        [DataMember(Name = "comment", EmitDefaultValue = true)]
        public string Comment { get; set; }

        /// <summary>
        /// Gets or Sets StoreId
        /// </summary>
        [DataMember(Name = "store_id", EmitDefaultValue = true)]
        public string StoreId { get; set; }

        /// <summary>
        /// Gets or Sets WarehousesIds
        /// </summary>
        [DataMember(Name = "warehouses_ids", EmitDefaultValue = false)]
        public List<string> WarehousesIds { get; set; }

        /// <summary>
        /// Gets or Sets Refunds
        /// </summary>
        [DataMember(Name = "refunds", EmitDefaultValue = false)]
        public List<OrderRefund> Refunds { get; set; }

        /// <summary>
        /// Gets or Sets GiftMessage
        /// </summary>
        [DataMember(Name = "gift_message", EmitDefaultValue = true)]
        public string GiftMessage { get; set; }

        /// <summary>
        /// Gets or Sets OrderDetailsUrl
        /// </summary>
        [DataMember(Name = "order_details_url", EmitDefaultValue = true)]
        public string OrderDetailsUrl { get; set; }

        /// <summary>
        /// Gets or Sets AdditionalFields
        /// </summary>
        [DataMember(Name = "additional_fields", EmitDefaultValue = true)]
        public Object AdditionalFields { get; set; }

        /// <summary>
        /// Gets or Sets CustomFields
        /// </summary>
        [DataMember(Name = "custom_fields", EmitDefaultValue = true)]
        public Object CustomFields { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Order {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  OrderId: ").Append(OrderId).Append("\n");
            sb.Append("  BasketId: ").Append(BasketId).Append("\n");
            sb.Append("  ChannelId: ").Append(ChannelId).Append("\n");
            sb.Append("  Customer: ").Append(Customer).Append("\n");
            sb.Append("  CreateAt: ").Append(CreateAt).Append("\n");
            sb.Append("  Currency: ").Append(Currency).Append("\n");
            sb.Append("  ShippingAddress: ").Append(ShippingAddress).Append("\n");
            sb.Append("  BillingAddress: ").Append(BillingAddress).Append("\n");
            sb.Append("  PaymentMethod: ").Append(PaymentMethod).Append("\n");
            sb.Append("  ShippingMethod: ").Append(ShippingMethod).Append("\n");
            sb.Append("  ShippingMethods: ").Append(ShippingMethods).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  Totals: ").Append(Totals).Append("\n");
            sb.Append("  Total: ").Append(Total).Append("\n");
            sb.Append("  Discounts: ").Append(Discounts).Append("\n");
            sb.Append("  OrderProducts: ").Append(OrderProducts).Append("\n");
            sb.Append("  Bundles: ").Append(Bundles).Append("\n");
            sb.Append("  ModifiedAt: ").Append(ModifiedAt).Append("\n");
            sb.Append("  FinishedTime: ").Append(FinishedTime).Append("\n");
            sb.Append("  Comment: ").Append(Comment).Append("\n");
            sb.Append("  StoreId: ").Append(StoreId).Append("\n");
            sb.Append("  WarehousesIds: ").Append(WarehousesIds).Append("\n");
            sb.Append("  Refunds: ").Append(Refunds).Append("\n");
            sb.Append("  GiftMessage: ").Append(GiftMessage).Append("\n");
            sb.Append("  OrderDetailsUrl: ").Append(OrderDetailsUrl).Append("\n");
            sb.Append("  AdditionalFields: ").Append(AdditionalFields).Append("\n");
            sb.Append("  CustomFields: ").Append(CustomFields).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
