/*
 * API2Cart OpenAPI
 *
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// OrderRefundAdd
    /// </summary>
    [DataContract(Name = "OrderRefundAdd")]
    public partial class OrderRefundAdd : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="OrderRefundAdd" /> class.
        /// </summary>
        /// <param name="orderId">Defines the order for which the refund will be created..</param>
        /// <param name="items">Defines items in the order that will be refunded.</param>
        /// <param name="totalPrice">Defines order refund amount..</param>
        /// <param name="shippingPrice">Defines refund shipping amount..</param>
        /// <param name="feePrice">Specifies refund&#39;s fee price.</param>
        /// <param name="message">Refund reason, or some else message which assigned to refund..</param>
        /// <param name="itemRestock">Boolean, whether or not to add the line items back to the store inventory. (default to false).</param>
        /// <param name="sendNotifications">Send notifications to customer after refund was created (default to false).</param>
        /// <param name="date">Specifies an order creation date in format Y-m-d H:i:s.</param>
        /// <param name="isOnline">Indicates whether refund type is online (default to false).</param>
        public OrderRefundAdd(string orderId = default(string), List<OrderRefundAddItemsInner> items = default(List<OrderRefundAddItemsInner>), decimal totalPrice = default(decimal), decimal shippingPrice = default(decimal), decimal feePrice = default(decimal), string message = default(string), bool itemRestock = false, bool sendNotifications = false, string date = default(string), bool isOnline = false)
        {
            this.OrderId = orderId;
            this.Items = items;
            this.TotalPrice = totalPrice;
            this.ShippingPrice = shippingPrice;
            this.FeePrice = feePrice;
            this.Message = message;
            this.ItemRestock = itemRestock;
            this.SendNotifications = sendNotifications;
            this.Date = date;
            this.IsOnline = isOnline;
        }

        /// <summary>
        /// Defines the order for which the refund will be created.
        /// </summary>
        /// <value>Defines the order for which the refund will be created.</value>
        /*
        <example>25</example>
        */
        [DataMember(Name = "order_id", EmitDefaultValue = false)]
        public string OrderId { get; set; }

        /// <summary>
        /// Defines items in the order that will be refunded
        /// </summary>
        /// <value>Defines items in the order that will be refunded</value>
        [DataMember(Name = "items", EmitDefaultValue = false)]
        public List<OrderRefundAddItemsInner> Items { get; set; }

        /// <summary>
        /// Defines order refund amount.
        /// </summary>
        /// <value>Defines order refund amount.</value>
        /*
        <example>23.56</example>
        */
        [DataMember(Name = "total_price", EmitDefaultValue = false)]
        public decimal TotalPrice { get; set; }

        /// <summary>
        /// Defines refund shipping amount.
        /// </summary>
        /// <value>Defines refund shipping amount.</value>
        /*
        <example>5.5</example>
        */
        [DataMember(Name = "shipping_price", EmitDefaultValue = false)]
        public decimal ShippingPrice { get; set; }

        /// <summary>
        /// Specifies refund&#39;s fee price
        /// </summary>
        /// <value>Specifies refund&#39;s fee price</value>
        /*
        <example>5.5</example>
        */
        [DataMember(Name = "fee_price", EmitDefaultValue = false)]
        public decimal FeePrice { get; set; }

        /// <summary>
        /// Refund reason, or some else message which assigned to refund.
        /// </summary>
        /// <value>Refund reason, or some else message which assigned to refund.</value>
        /*
        <example>Received item is not like in the photo, get my money back.</example>
        */
        [DataMember(Name = "message", EmitDefaultValue = false)]
        public string Message { get; set; }

        /// <summary>
        /// Boolean, whether or not to add the line items back to the store inventory.
        /// </summary>
        /// <value>Boolean, whether or not to add the line items back to the store inventory.</value>
        /*
        <example>true</example>
        */
        [DataMember(Name = "item_restock", EmitDefaultValue = true)]
        public bool ItemRestock { get; set; }

        /// <summary>
        /// Send notifications to customer after refund was created
        /// </summary>
        /// <value>Send notifications to customer after refund was created</value>
        /*
        <example>true</example>
        */
        [DataMember(Name = "send_notifications", EmitDefaultValue = true)]
        public bool SendNotifications { get; set; }

        /// <summary>
        /// Specifies an order creation date in format Y-m-d H:i:s
        /// </summary>
        /// <value>Specifies an order creation date in format Y-m-d H:i:s</value>
        /*
        <example>2012-09-25 19:40:00</example>
        */
        [DataMember(Name = "date", EmitDefaultValue = false)]
        public string Date { get; set; }

        /// <summary>
        /// Indicates whether refund type is online
        /// </summary>
        /// <value>Indicates whether refund type is online</value>
        /*
        <example>false</example>
        */
        [DataMember(Name = "is_online", EmitDefaultValue = true)]
        public bool IsOnline { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class OrderRefundAdd {\n");
            sb.Append("  OrderId: ").Append(OrderId).Append("\n");
            sb.Append("  Items: ").Append(Items).Append("\n");
            sb.Append("  TotalPrice: ").Append(TotalPrice).Append("\n");
            sb.Append("  ShippingPrice: ").Append(ShippingPrice).Append("\n");
            sb.Append("  FeePrice: ").Append(FeePrice).Append("\n");
            sb.Append("  Message: ").Append(Message).Append("\n");
            sb.Append("  ItemRestock: ").Append(ItemRestock).Append("\n");
            sb.Append("  SendNotifications: ").Append(SendNotifications).Append("\n");
            sb.Append("  Date: ").Append(Date).Append("\n");
            sb.Append("  IsOnline: ").Append(IsOnline).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
