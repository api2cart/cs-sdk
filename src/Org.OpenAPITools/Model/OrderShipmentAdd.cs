/*
 * API2Cart OpenAPI
 *
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// OrderShipmentAdd
    /// </summary>
    [DataContract(Name = "OrderShipmentAdd")]
    public partial class OrderShipmentAdd : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="OrderShipmentAdd" /> class.
        /// </summary>
        /// <param name="orderId">Defines the order for which the shipment will be created.</param>
        /// <param name="warehouseId">This parameter is used for selecting a warehouse where you need to set/modify a product quantity..</param>
        /// <param name="storeId">Store Id.</param>
        /// <param name="shipmentProvider">Defines company name that provide tracking of shipment.</param>
        /// <param name="shippingMethod">Define shipping method.</param>
        /// <param name="items">Defines items in the order that will be shipped.</param>
        /// <param name="trackingNumbers">Defines shipment&#39;s tracking numbers that have to be added&lt;/br&gt; How set tracking numbers to appropriate carrier:&lt;ul&gt;&lt;li&gt;tracking_numbers[]&#x3D;a2c.demo1,a2c.demo2 - set default carrier&lt;/li&gt;&lt;li&gt;tracking_numbers[&lt;b&gt;carrier_id&lt;/b&gt;]&#x3D;a2c.demo - set appropriate carrier&lt;/li&gt;&lt;/ul&gt;To get the list of carriers IDs that are available in your store, use the &lt;a href &#x3D; \&quot;https://api2cart.com/docs/#/cart/CartInfo\&quot;&gt;cart.info&lt;/a &gt; method.</param>
        /// <param name="trackingLink">Defines custom tracking link.</param>
        /// <param name="isShipped">Defines shipment&#39;s status (default to true).</param>
        /// <param name="sendNotifications">Send notifications to customer after shipment was created (default to false).</param>
        /// <param name="adjustStock">This parameter is used for adjust stock. (default to false).</param>
        /// <param name="enableCache">If the value is &#39;true&#39; and order exist in our cache, we will use order.info from cache to prepare shipment items. (default to false).</param>
        /// <param name="checkProcessStatus">Disable or enable check process status. Please note that the response will be slower due to additional requests to the store. (default to false).</param>
        /// <param name="trackingProvider">Defines name of the company which provides shipment tracking.</param>
        /// <param name="useLatestApiVersion">Use the latest platform API version (default to false).</param>
        public OrderShipmentAdd(string orderId = default(string), string warehouseId = default(string), string storeId = default(string), string shipmentProvider = default(string), string shippingMethod = default(string), List<OrderShipmentAddItemsInner> items = default(List<OrderShipmentAddItemsInner>), List<OrderShipmentAddTrackingNumbersInner> trackingNumbers = default(List<OrderShipmentAddTrackingNumbersInner>), string trackingLink = default(string), bool isShipped = true, bool sendNotifications = false, bool adjustStock = false, bool enableCache = false, bool checkProcessStatus = false, string trackingProvider = default(string), bool useLatestApiVersion = false)
        {
            this.OrderId = orderId;
            this.WarehouseId = warehouseId;
            this.StoreId = storeId;
            this.ShipmentProvider = shipmentProvider;
            this.ShippingMethod = shippingMethod;
            this.Items = items;
            this.TrackingNumbers = trackingNumbers;
            this.TrackingLink = trackingLink;
            this.IsShipped = isShipped;
            this.SendNotifications = sendNotifications;
            this.AdjustStock = adjustStock;
            this.EnableCache = enableCache;
            this.CheckProcessStatus = checkProcessStatus;
            this.TrackingProvider = trackingProvider;
            this.UseLatestApiVersion = useLatestApiVersion;
        }

        /// <summary>
        /// Defines the order for which the shipment will be created
        /// </summary>
        /// <value>Defines the order for which the shipment will be created</value>
        /*
        <example>25</example>
        */
        [DataMember(Name = "order_id", EmitDefaultValue = false)]
        public string OrderId { get; set; }

        /// <summary>
        /// This parameter is used for selecting a warehouse where you need to set/modify a product quantity.
        /// </summary>
        /// <value>This parameter is used for selecting a warehouse where you need to set/modify a product quantity.</value>
        /*
        <example>1</example>
        */
        [DataMember(Name = "warehouse_id", EmitDefaultValue = false)]
        public string WarehouseId { get; set; }

        /// <summary>
        /// Store Id
        /// </summary>
        /// <value>Store Id</value>
        /*
        <example>1</example>
        */
        [DataMember(Name = "store_id", EmitDefaultValue = false)]
        public string StoreId { get; set; }

        /// <summary>
        /// Defines company name that provide tracking of shipment
        /// </summary>
        /// <value>Defines company name that provide tracking of shipment</value>
        /*
        <example>UPS</example>
        */
        [DataMember(Name = "shipment_provider", EmitDefaultValue = false)]
        public string ShipmentProvider { get; set; }

        /// <summary>
        /// Define shipping method
        /// </summary>
        /// <value>Define shipping method</value>
        /*
        <example>flatrate_flatrate</example>
        */
        [DataMember(Name = "shipping_method", EmitDefaultValue = false)]
        public string ShippingMethod { get; set; }

        /// <summary>
        /// Defines items in the order that will be shipped
        /// </summary>
        /// <value>Defines items in the order that will be shipped</value>
        [DataMember(Name = "items", EmitDefaultValue = false)]
        public List<OrderShipmentAddItemsInner> Items { get; set; }

        /// <summary>
        /// Defines shipment&#39;s tracking numbers that have to be added&lt;/br&gt; How set tracking numbers to appropriate carrier:&lt;ul&gt;&lt;li&gt;tracking_numbers[]&#x3D;a2c.demo1,a2c.demo2 - set default carrier&lt;/li&gt;&lt;li&gt;tracking_numbers[&lt;b&gt;carrier_id&lt;/b&gt;]&#x3D;a2c.demo - set appropriate carrier&lt;/li&gt;&lt;/ul&gt;To get the list of carriers IDs that are available in your store, use the &lt;a href &#x3D; \&quot;https://api2cart.com/docs/#/cart/CartInfo\&quot;&gt;cart.info&lt;/a &gt; method
        /// </summary>
        /// <value>Defines shipment&#39;s tracking numbers that have to be added&lt;/br&gt; How set tracking numbers to appropriate carrier:&lt;ul&gt;&lt;li&gt;tracking_numbers[]&#x3D;a2c.demo1,a2c.demo2 - set default carrier&lt;/li&gt;&lt;li&gt;tracking_numbers[&lt;b&gt;carrier_id&lt;/b&gt;]&#x3D;a2c.demo - set appropriate carrier&lt;/li&gt;&lt;/ul&gt;To get the list of carriers IDs that are available in your store, use the &lt;a href &#x3D; \&quot;https://api2cart.com/docs/#/cart/CartInfo\&quot;&gt;cart.info&lt;/a &gt; method</value>
        [DataMember(Name = "tracking_numbers", EmitDefaultValue = false)]
        public List<OrderShipmentAddTrackingNumbersInner> TrackingNumbers { get; set; }

        /// <summary>
        /// Defines custom tracking link
        /// </summary>
        /// <value>Defines custom tracking link</value>
        /*
        <example>http://example.com?someParam&#x3D;value</example>
        */
        [DataMember(Name = "tracking_link", EmitDefaultValue = false)]
        public string TrackingLink { get; set; }

        /// <summary>
        /// Defines shipment&#39;s status
        /// </summary>
        /// <value>Defines shipment&#39;s status</value>
        /*
        <example>true</example>
        */
        [DataMember(Name = "is_shipped", EmitDefaultValue = true)]
        public bool IsShipped { get; set; }

        /// <summary>
        /// Send notifications to customer after shipment was created
        /// </summary>
        /// <value>Send notifications to customer after shipment was created</value>
        /*
        <example>true</example>
        */
        [DataMember(Name = "send_notifications", EmitDefaultValue = true)]
        public bool SendNotifications { get; set; }

        /// <summary>
        /// This parameter is used for adjust stock.
        /// </summary>
        /// <value>This parameter is used for adjust stock.</value>
        /*
        <example>true</example>
        */
        [DataMember(Name = "adjust_stock", EmitDefaultValue = true)]
        public bool AdjustStock { get; set; }

        /// <summary>
        /// If the value is &#39;true&#39; and order exist in our cache, we will use order.info from cache to prepare shipment items.
        /// </summary>
        /// <value>If the value is &#39;true&#39; and order exist in our cache, we will use order.info from cache to prepare shipment items.</value>
        /*
        <example>true</example>
        */
        [DataMember(Name = "enable_cache", EmitDefaultValue = true)]
        public bool EnableCache { get; set; }

        /// <summary>
        /// Disable or enable check process status. Please note that the response will be slower due to additional requests to the store.
        /// </summary>
        /// <value>Disable or enable check process status. Please note that the response will be slower due to additional requests to the store.</value>
        /*
        <example>false</example>
        */
        [DataMember(Name = "check_process_status", EmitDefaultValue = true)]
        public bool CheckProcessStatus { get; set; }

        /// <summary>
        /// Defines name of the company which provides shipment tracking
        /// </summary>
        /// <value>Defines name of the company which provides shipment tracking</value>
        /*
        <example>Custom tracker</example>
        */
        [DataMember(Name = "tracking_provider", EmitDefaultValue = false)]
        public string TrackingProvider { get; set; }

        /// <summary>
        /// Use the latest platform API version
        /// </summary>
        /// <value>Use the latest platform API version</value>
        /*
        <example>true</example>
        */
        [DataMember(Name = "use_latest_api_version", EmitDefaultValue = true)]
        public bool UseLatestApiVersion { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class OrderShipmentAdd {\n");
            sb.Append("  OrderId: ").Append(OrderId).Append("\n");
            sb.Append("  WarehouseId: ").Append(WarehouseId).Append("\n");
            sb.Append("  StoreId: ").Append(StoreId).Append("\n");
            sb.Append("  ShipmentProvider: ").Append(ShipmentProvider).Append("\n");
            sb.Append("  ShippingMethod: ").Append(ShippingMethod).Append("\n");
            sb.Append("  Items: ").Append(Items).Append("\n");
            sb.Append("  TrackingNumbers: ").Append(TrackingNumbers).Append("\n");
            sb.Append("  TrackingLink: ").Append(TrackingLink).Append("\n");
            sb.Append("  IsShipped: ").Append(IsShipped).Append("\n");
            sb.Append("  SendNotifications: ").Append(SendNotifications).Append("\n");
            sb.Append("  AdjustStock: ").Append(AdjustStock).Append("\n");
            sb.Append("  EnableCache: ").Append(EnableCache).Append("\n");
            sb.Append("  CheckProcessStatus: ").Append(CheckProcessStatus).Append("\n");
            sb.Append("  TrackingProvider: ").Append(TrackingProvider).Append("\n");
            sb.Append("  UseLatestApiVersion: ").Append(UseLatestApiVersion).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
