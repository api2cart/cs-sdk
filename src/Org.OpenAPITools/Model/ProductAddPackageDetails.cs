/*
 * API2Cart OpenAPI
 *
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// If the seller is subscribed to \&quot;Business Policies\&quot;, use the seller_profiles instead of the shipping_details, payment_methods and return_accepted params.&lt;hr&gt;&lt;div style&#x3D;\&quot;font-style:normal\&quot;&gt;Param structure:&lt;div style&#x3D;\&quot;margin-left: 2%;\&quot;&gt;&lt;code style&#x3D;\&quot;padding:0; background-color:#ffffff;font-size:85%;font-family:monospace;\&quot;&gt;package_details[&lt;b&gt;measure_unit&lt;/b&gt;] &#x3D; string&lt;/br&gt; Allowed measure_unit values: [English or Metric] &lt;/br&gt; Default: Metric&lt;/br&gt;package_details[&lt;b&gt;weigh_unit&lt;/b&gt;] &#x3D; string&lt;/br&gt; Allowed weigh_unit values: [kg, g, lbs, oz]&lt;/br&gt;package_details[&lt;b&gt;package_depth&lt;/b&gt;] &#x3D; decimal&lt;/br&gt;package_details[&lt;b&gt;package_length&lt;/b&gt;] &#x3D; decimal&lt;/br&gt;package_details[&lt;b&gt;package_width&lt;/b&gt;] &#x3D; decimal&lt;/br&gt;package_details[&lt;b&gt;weight_major&lt;/b&gt;] &#x3D; decimal&lt;/br&gt;package_details[&lt;b&gt;weight_minor&lt;/b&gt;] &#x3D; decimal&lt;/br&gt;package_details[&lt;b&gt;shipping_package&lt;/b&gt;] &#x3D; string&lt;/br&gt; See cart.info method, param &#x60;eBay_shipping_package_details&#x60;&lt;/code&gt;&lt;/div&gt;&lt;/div&gt;
    /// </summary>
    [DataContract(Name = "ProductAdd_package_details")]
    public partial class ProductAddPackageDetails : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ProductAddPackageDetails" /> class.
        /// </summary>
        /// <param name="measureUnit">measureUnit.</param>
        /// <param name="weighUnit">weighUnit.</param>
        /// <param name="packageDepth">packageDepth.</param>
        /// <param name="packageLength">packageLength.</param>
        /// <param name="packageWidth">packageWidth.</param>
        /// <param name="weightMajor">weightMajor.</param>
        /// <param name="weightMinor">weightMinor.</param>
        /// <param name="shippingPackage">shippingPackage.</param>
        public ProductAddPackageDetails(string measureUnit = default(string), string weighUnit = default(string), decimal packageDepth = default(decimal), decimal packageLength = default(decimal), decimal packageWidth = default(decimal), decimal weightMajor = default(decimal), decimal weightMinor = default(decimal), string shippingPackage = default(string))
        {
            this.MeasureUnit = measureUnit;
            this.WeighUnit = weighUnit;
            this.PackageDepth = packageDepth;
            this.PackageLength = packageLength;
            this.PackageWidth = packageWidth;
            this.WeightMajor = weightMajor;
            this.WeightMinor = weightMinor;
            this.ShippingPackage = shippingPackage;
        }

        /// <summary>
        /// Gets or Sets MeasureUnit
        /// </summary>
        [DataMember(Name = "measure_unit", EmitDefaultValue = false)]
        public string MeasureUnit { get; set; }

        /// <summary>
        /// Gets or Sets WeighUnit
        /// </summary>
        [DataMember(Name = "weigh_unit", EmitDefaultValue = false)]
        public string WeighUnit { get; set; }

        /// <summary>
        /// Gets or Sets PackageDepth
        /// </summary>
        [DataMember(Name = "package_depth", EmitDefaultValue = false)]
        public decimal PackageDepth { get; set; }

        /// <summary>
        /// Gets or Sets PackageLength
        /// </summary>
        [DataMember(Name = "package_length", EmitDefaultValue = false)]
        public decimal PackageLength { get; set; }

        /// <summary>
        /// Gets or Sets PackageWidth
        /// </summary>
        [DataMember(Name = "package_width", EmitDefaultValue = false)]
        public decimal PackageWidth { get; set; }

        /// <summary>
        /// Gets or Sets WeightMajor
        /// </summary>
        [DataMember(Name = "weight_major", EmitDefaultValue = false)]
        public decimal WeightMajor { get; set; }

        /// <summary>
        /// Gets or Sets WeightMinor
        /// </summary>
        [DataMember(Name = "weight_minor", EmitDefaultValue = false)]
        public decimal WeightMinor { get; set; }

        /// <summary>
        /// Gets or Sets ShippingPackage
        /// </summary>
        [DataMember(Name = "shipping_package", EmitDefaultValue = false)]
        public string ShippingPackage { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ProductAddPackageDetails {\n");
            sb.Append("  MeasureUnit: ").Append(MeasureUnit).Append("\n");
            sb.Append("  WeighUnit: ").Append(WeighUnit).Append("\n");
            sb.Append("  PackageDepth: ").Append(PackageDepth).Append("\n");
            sb.Append("  PackageLength: ").Append(PackageLength).Append("\n");
            sb.Append("  PackageWidth: ").Append(PackageWidth).Append("\n");
            sb.Append("  WeightMajor: ").Append(WeightMajor).Append("\n");
            sb.Append("  WeightMinor: ").Append(WeightMinor).Append("\n");
            sb.Append("  ShippingPackage: ").Append(ShippingPackage).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
