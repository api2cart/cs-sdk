/*
 * API2Cart OpenAPI
 *
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// ProductAddBatchPayloadInner
    /// </summary>
    [DataContract(Name = "ProductAddBatch_payload_inner")]
    public partial class ProductAddBatchPayloadInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ProductAddBatchPayloadInner" /> class.
        /// </summary>
        /// <param name="name">name.</param>
        /// <param name="description">description.</param>
        /// <param name="shortDescription">shortDescription.</param>
        /// <param name="sku">sku.</param>
        /// <param name="model">model.</param>
        /// <param name="asin">asin.</param>
        /// <param name="upc">upc.</param>
        /// <param name="ean">ean.</param>
        /// <param name="gtin">gtin.</param>
        /// <param name="mpn">mpn.</param>
        /// <param name="barcode">barcode.</param>
        /// <param name="price">price.</param>
        /// <param name="oldPrice">oldPrice.</param>
        /// <param name="costPrice">costPrice.</param>
        /// <param name="specialPrice">specialPrice.</param>
        /// <param name="spriceCreate">spriceCreate.</param>
        /// <param name="spriceExpire">spriceExpire.</param>
        /// <param name="advancedPrices">advancedPrices.</param>
        /// <param name="fixedCostShippingPrice">fixedCostShippingPrice.</param>
        /// <param name="quantity">quantity.</param>
        /// <param name="manageStock">manageStock.</param>
        /// <param name="productType">productType.</param>
        /// <param name="marketplaceItemProperties">marketplaceItemProperties.</param>
        /// <param name="specifics">specifics.</param>
        /// <param name="isFreeShipping">isFreeShipping.</param>
        /// <param name="taxable">taxable.</param>
        /// <param name="status">status.</param>
        /// <param name="condition">condition.</param>
        /// <param name="visible">visible.</param>
        /// <param name="availableForView">availableForView.</param>
        /// <param name="availableForSale">availableForSale.</param>
        /// <param name="isVirtual">isVirtual.</param>
        /// <param name="inStock">inStock.</param>
        /// <param name="type">type.</param>
        /// <param name="downloadable">downloadable.</param>
        /// <param name="weight">weight.</param>
        /// <param name="length">length.</param>
        /// <param name="width">width.</param>
        /// <param name="height">height.</param>
        /// <param name="weightUnit">weightUnit.</param>
        /// <param name="dimensionsUnit">dimensionsUnit.</param>
        /// <param name="storeId">storeId.</param>
        /// <param name="langId">langId.</param>
        /// <param name="categoryId">categoryId.</param>
        /// <param name="warehouseId">warehouseId.</param>
        /// <param name="categoriesIds">categoriesIds.</param>
        /// <param name="relatedProductsIds">relatedProductsIds.</param>
        /// <param name="upSellProductsIds">upSellProductsIds.</param>
        /// <param name="crossSellProductsIds">crossSellProductsIds.</param>
        /// <param name="storesIds">storesIds.</param>
        /// <param name="taxClassId">taxClassId.</param>
        /// <param name="metaTitle">metaTitle.</param>
        /// <param name="metaDescription">metaDescription.</param>
        /// <param name="metaKeywords">metaKeywords.</param>
        /// <param name="searchKeywords">searchKeywords.</param>
        /// <param name="harmonizedSystemCode">harmonizedSystemCode.</param>
        /// <param name="url">url.</param>
        /// <param name="seoUrl">seoUrl.</param>
        /// <param name="externalProductLink">externalProductLink.</param>
        /// <param name="manufacturer">manufacturer.</param>
        /// <param name="manufacturerId">manufacturerId.</param>
        /// <param name="backorderStatus">backorderStatus.</param>
        /// <param name="images">images.</param>
        /// <param name="tags">tags.</param>
        /// <param name="files">files.</param>
        public ProductAddBatchPayloadInner(string name = default(string), string description = default(string), string shortDescription = default(string), string sku = default(string), string model = default(string), string asin = default(string), string upc = default(string), string ean = default(string), string gtin = default(string), string mpn = default(string), string barcode = default(string), decimal price = default(decimal), decimal oldPrice = default(decimal), decimal costPrice = default(decimal), decimal specialPrice = default(decimal), string spriceCreate = default(string), string spriceExpire = default(string), List<ProductAddBatchPayloadInnerAdvancedPricesInner> advancedPrices = default(List<ProductAddBatchPayloadInnerAdvancedPricesInner>), decimal fixedCostShippingPrice = default(decimal), decimal quantity = default(decimal), bool manageStock = default(bool), string productType = default(string), Object marketplaceItemProperties = default(Object), Object specifics = default(Object), bool isFreeShipping = default(bool), bool taxable = default(bool), string status = default(string), string condition = default(string), string visible = default(string), bool availableForView = default(bool), bool availableForSale = default(bool), bool isVirtual = default(bool), bool inStock = default(bool), string type = default(string), bool downloadable = default(bool), decimal weight = default(decimal), decimal length = default(decimal), decimal width = default(decimal), decimal height = default(decimal), string weightUnit = default(string), string dimensionsUnit = default(string), string storeId = default(string), string langId = default(string), string categoryId = default(string), string warehouseId = default(string), List<string> categoriesIds = default(List<string>), List<string> relatedProductsIds = default(List<string>), List<string> upSellProductsIds = default(List<string>), List<string> crossSellProductsIds = default(List<string>), List<string> storesIds = default(List<string>), string taxClassId = default(string), string metaTitle = default(string), string metaDescription = default(string), List<string> metaKeywords = default(List<string>), List<string> searchKeywords = default(List<string>), string harmonizedSystemCode = default(string), string url = default(string), string seoUrl = default(string), string externalProductLink = default(string), string manufacturer = default(string), string manufacturerId = default(string), string backorderStatus = default(string), List<ProductAddBatchPayloadInnerImagesInner> images = default(List<ProductAddBatchPayloadInnerImagesInner>), List<string> tags = default(List<string>), List<ProductAddFilesInner> files = default(List<ProductAddFilesInner>))
        {
            this.Name = name;
            this.Description = description;
            this.ShortDescription = shortDescription;
            this.Sku = sku;
            this.Model = model;
            this.Asin = asin;
            this.Upc = upc;
            this.Ean = ean;
            this.Gtin = gtin;
            this.Mpn = mpn;
            this.Barcode = barcode;
            this.Price = price;
            this.OldPrice = oldPrice;
            this.CostPrice = costPrice;
            this.SpecialPrice = specialPrice;
            this.SpriceCreate = spriceCreate;
            this.SpriceExpire = spriceExpire;
            this.AdvancedPrices = advancedPrices;
            this.FixedCostShippingPrice = fixedCostShippingPrice;
            this.Quantity = quantity;
            this.ManageStock = manageStock;
            this.ProductType = productType;
            this.MarketplaceItemProperties = marketplaceItemProperties;
            this.Specifics = specifics;
            this.IsFreeShipping = isFreeShipping;
            this.Taxable = taxable;
            this.Status = status;
            this.Condition = condition;
            this.Visible = visible;
            this.AvailableForView = availableForView;
            this.AvailableForSale = availableForSale;
            this.IsVirtual = isVirtual;
            this.InStock = inStock;
            this.Type = type;
            this.Downloadable = downloadable;
            this.Weight = weight;
            this.Length = length;
            this.Width = width;
            this.Height = height;
            this.WeightUnit = weightUnit;
            this.DimensionsUnit = dimensionsUnit;
            this.StoreId = storeId;
            this.LangId = langId;
            this.CategoryId = categoryId;
            this.WarehouseId = warehouseId;
            this.CategoriesIds = categoriesIds;
            this.RelatedProductsIds = relatedProductsIds;
            this.UpSellProductsIds = upSellProductsIds;
            this.CrossSellProductsIds = crossSellProductsIds;
            this.StoresIds = storesIds;
            this.TaxClassId = taxClassId;
            this.MetaTitle = metaTitle;
            this.MetaDescription = metaDescription;
            this.MetaKeywords = metaKeywords;
            this.SearchKeywords = searchKeywords;
            this.HarmonizedSystemCode = harmonizedSystemCode;
            this.Url = url;
            this.SeoUrl = seoUrl;
            this.ExternalProductLink = externalProductLink;
            this.Manufacturer = manufacturer;
            this.ManufacturerId = manufacturerId;
            this.BackorderStatus = backorderStatus;
            this.Images = images;
            this.Tags = tags;
            this.Files = files;
        }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name = "description", EmitDefaultValue = false)]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets ShortDescription
        /// </summary>
        [DataMember(Name = "short_description", EmitDefaultValue = false)]
        public string ShortDescription { get; set; }

        /// <summary>
        /// Gets or Sets Sku
        /// </summary>
        [DataMember(Name = "sku", EmitDefaultValue = false)]
        public string Sku { get; set; }

        /// <summary>
        /// Gets or Sets Model
        /// </summary>
        [DataMember(Name = "model", EmitDefaultValue = false)]
        public string Model { get; set; }

        /// <summary>
        /// Gets or Sets Asin
        /// </summary>
        [DataMember(Name = "asin", EmitDefaultValue = false)]
        public string Asin { get; set; }

        /// <summary>
        /// Gets or Sets Upc
        /// </summary>
        [DataMember(Name = "upc", EmitDefaultValue = false)]
        public string Upc { get; set; }

        /// <summary>
        /// Gets or Sets Ean
        /// </summary>
        [DataMember(Name = "ean", EmitDefaultValue = false)]
        public string Ean { get; set; }

        /// <summary>
        /// Gets or Sets Gtin
        /// </summary>
        [DataMember(Name = "gtin", EmitDefaultValue = false)]
        public string Gtin { get; set; }

        /// <summary>
        /// Gets or Sets Mpn
        /// </summary>
        [DataMember(Name = "mpn", EmitDefaultValue = false)]
        public string Mpn { get; set; }

        /// <summary>
        /// Gets or Sets Barcode
        /// </summary>
        [DataMember(Name = "barcode", EmitDefaultValue = false)]
        public string Barcode { get; set; }

        /// <summary>
        /// Gets or Sets Price
        /// </summary>
        [DataMember(Name = "price", EmitDefaultValue = false)]
        public decimal Price { get; set; }

        /// <summary>
        /// Gets or Sets OldPrice
        /// </summary>
        [DataMember(Name = "old_price", EmitDefaultValue = false)]
        public decimal OldPrice { get; set; }

        /// <summary>
        /// Gets or Sets CostPrice
        /// </summary>
        [DataMember(Name = "cost_price", EmitDefaultValue = false)]
        public decimal CostPrice { get; set; }

        /// <summary>
        /// Gets or Sets SpecialPrice
        /// </summary>
        [DataMember(Name = "special_price", EmitDefaultValue = false)]
        public decimal SpecialPrice { get; set; }

        /// <summary>
        /// Gets or Sets SpriceCreate
        /// </summary>
        [DataMember(Name = "sprice_create", EmitDefaultValue = false)]
        public string SpriceCreate { get; set; }

        /// <summary>
        /// Gets or Sets SpriceExpire
        /// </summary>
        [DataMember(Name = "sprice_expire", EmitDefaultValue = false)]
        public string SpriceExpire { get; set; }

        /// <summary>
        /// Gets or Sets AdvancedPrices
        /// </summary>
        [DataMember(Name = "advanced_prices", EmitDefaultValue = false)]
        public List<ProductAddBatchPayloadInnerAdvancedPricesInner> AdvancedPrices { get; set; }

        /// <summary>
        /// Gets or Sets FixedCostShippingPrice
        /// </summary>
        [DataMember(Name = "fixed_cost_shipping_price", EmitDefaultValue = false)]
        public decimal FixedCostShippingPrice { get; set; }

        /// <summary>
        /// Gets or Sets Quantity
        /// </summary>
        [DataMember(Name = "quantity", EmitDefaultValue = false)]
        public decimal Quantity { get; set; }

        /// <summary>
        /// Gets or Sets ManageStock
        /// </summary>
        [DataMember(Name = "manage_stock", EmitDefaultValue = true)]
        public bool ManageStock { get; set; }

        /// <summary>
        /// Gets or Sets ProductType
        /// </summary>
        [DataMember(Name = "product_type", EmitDefaultValue = false)]
        public string ProductType { get; set; }

        /// <summary>
        /// Gets or Sets MarketplaceItemProperties
        /// </summary>
        [DataMember(Name = "marketplace_item_properties", EmitDefaultValue = false)]
        public Object MarketplaceItemProperties { get; set; }

        /// <summary>
        /// Gets or Sets Specifics
        /// </summary>
        [DataMember(Name = "specifics", EmitDefaultValue = false)]
        public Object Specifics { get; set; }

        /// <summary>
        /// Gets or Sets IsFreeShipping
        /// </summary>
        [DataMember(Name = "is_free_shipping", EmitDefaultValue = true)]
        public bool IsFreeShipping { get; set; }

        /// <summary>
        /// Gets or Sets Taxable
        /// </summary>
        [DataMember(Name = "taxable", EmitDefaultValue = true)]
        public bool Taxable { get; set; }

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name = "status", EmitDefaultValue = false)]
        public string Status { get; set; }

        /// <summary>
        /// Gets or Sets Condition
        /// </summary>
        [DataMember(Name = "condition", EmitDefaultValue = false)]
        public string Condition { get; set; }

        /// <summary>
        /// Gets or Sets Visible
        /// </summary>
        [DataMember(Name = "visible", EmitDefaultValue = false)]
        public string Visible { get; set; }

        /// <summary>
        /// Gets or Sets AvailableForView
        /// </summary>
        [DataMember(Name = "available_for_view", EmitDefaultValue = true)]
        public bool AvailableForView { get; set; }

        /// <summary>
        /// Gets or Sets AvailableForSale
        /// </summary>
        [DataMember(Name = "available_for_sale", EmitDefaultValue = true)]
        public bool AvailableForSale { get; set; }

        /// <summary>
        /// Gets or Sets IsVirtual
        /// </summary>
        [DataMember(Name = "is_virtual", EmitDefaultValue = true)]
        public bool IsVirtual { get; set; }

        /// <summary>
        /// Gets or Sets InStock
        /// </summary>
        [DataMember(Name = "in_stock", EmitDefaultValue = true)]
        public bool InStock { get; set; }

        /// <summary>
        /// Gets or Sets Type
        /// </summary>
        [DataMember(Name = "type", EmitDefaultValue = false)]
        public string Type { get; set; }

        /// <summary>
        /// Gets or Sets Downloadable
        /// </summary>
        [DataMember(Name = "downloadable", EmitDefaultValue = true)]
        public bool Downloadable { get; set; }

        /// <summary>
        /// Gets or Sets Weight
        /// </summary>
        [DataMember(Name = "weight", EmitDefaultValue = false)]
        public decimal Weight { get; set; }

        /// <summary>
        /// Gets or Sets Length
        /// </summary>
        [DataMember(Name = "length", EmitDefaultValue = false)]
        public decimal Length { get; set; }

        /// <summary>
        /// Gets or Sets Width
        /// </summary>
        [DataMember(Name = "width", EmitDefaultValue = false)]
        public decimal Width { get; set; }

        /// <summary>
        /// Gets or Sets Height
        /// </summary>
        [DataMember(Name = "height", EmitDefaultValue = false)]
        public decimal Height { get; set; }

        /// <summary>
        /// Gets or Sets WeightUnit
        /// </summary>
        [DataMember(Name = "weight_unit", EmitDefaultValue = false)]
        public string WeightUnit { get; set; }

        /// <summary>
        /// Gets or Sets DimensionsUnit
        /// </summary>
        [DataMember(Name = "dimensions_unit", EmitDefaultValue = false)]
        public string DimensionsUnit { get; set; }

        /// <summary>
        /// Gets or Sets StoreId
        /// </summary>
        [DataMember(Name = "store_id", EmitDefaultValue = false)]
        public string StoreId { get; set; }

        /// <summary>
        /// Gets or Sets LangId
        /// </summary>
        [DataMember(Name = "lang_id", EmitDefaultValue = false)]
        public string LangId { get; set; }

        /// <summary>
        /// Gets or Sets CategoryId
        /// </summary>
        [DataMember(Name = "category_id", EmitDefaultValue = false)]
        public string CategoryId { get; set; }

        /// <summary>
        /// Gets or Sets WarehouseId
        /// </summary>
        [DataMember(Name = "warehouse_id", EmitDefaultValue = false)]
        public string WarehouseId { get; set; }

        /// <summary>
        /// Gets or Sets CategoriesIds
        /// </summary>
        [DataMember(Name = "categories_ids", EmitDefaultValue = false)]
        public List<string> CategoriesIds { get; set; }

        /// <summary>
        /// Gets or Sets RelatedProductsIds
        /// </summary>
        [DataMember(Name = "related_products_ids", EmitDefaultValue = false)]
        public List<string> RelatedProductsIds { get; set; }

        /// <summary>
        /// Gets or Sets UpSellProductsIds
        /// </summary>
        [DataMember(Name = "up_sell_products_ids", EmitDefaultValue = false)]
        public List<string> UpSellProductsIds { get; set; }

        /// <summary>
        /// Gets or Sets CrossSellProductsIds
        /// </summary>
        [DataMember(Name = "cross_sell_products_ids", EmitDefaultValue = false)]
        public List<string> CrossSellProductsIds { get; set; }

        /// <summary>
        /// Gets or Sets StoresIds
        /// </summary>
        [DataMember(Name = "stores_ids", EmitDefaultValue = false)]
        public List<string> StoresIds { get; set; }

        /// <summary>
        /// Gets or Sets TaxClassId
        /// </summary>
        [DataMember(Name = "tax_class_id", EmitDefaultValue = false)]
        public string TaxClassId { get; set; }

        /// <summary>
        /// Gets or Sets MetaTitle
        /// </summary>
        [DataMember(Name = "meta_title", EmitDefaultValue = false)]
        public string MetaTitle { get; set; }

        /// <summary>
        /// Gets or Sets MetaDescription
        /// </summary>
        [DataMember(Name = "meta_description", EmitDefaultValue = false)]
        public string MetaDescription { get; set; }

        /// <summary>
        /// Gets or Sets MetaKeywords
        /// </summary>
        [DataMember(Name = "meta_keywords", EmitDefaultValue = false)]
        public List<string> MetaKeywords { get; set; }

        /// <summary>
        /// Gets or Sets SearchKeywords
        /// </summary>
        [DataMember(Name = "search_keywords", EmitDefaultValue = false)]
        public List<string> SearchKeywords { get; set; }

        /// <summary>
        /// Gets or Sets HarmonizedSystemCode
        /// </summary>
        [DataMember(Name = "harmonized_system_code", EmitDefaultValue = false)]
        public string HarmonizedSystemCode { get; set; }

        /// <summary>
        /// Gets or Sets Url
        /// </summary>
        [DataMember(Name = "url", EmitDefaultValue = false)]
        public string Url { get; set; }

        /// <summary>
        /// Gets or Sets SeoUrl
        /// </summary>
        [DataMember(Name = "seo_url", EmitDefaultValue = false)]
        public string SeoUrl { get; set; }

        /// <summary>
        /// Gets or Sets ExternalProductLink
        /// </summary>
        [DataMember(Name = "external_product_link", EmitDefaultValue = false)]
        public string ExternalProductLink { get; set; }

        /// <summary>
        /// Gets or Sets Manufacturer
        /// </summary>
        [DataMember(Name = "manufacturer", EmitDefaultValue = false)]
        public string Manufacturer { get; set; }

        /// <summary>
        /// Gets or Sets ManufacturerId
        /// </summary>
        [DataMember(Name = "manufacturer_id", EmitDefaultValue = false)]
        public string ManufacturerId { get; set; }

        /// <summary>
        /// Gets or Sets BackorderStatus
        /// </summary>
        [DataMember(Name = "backorder_status", EmitDefaultValue = false)]
        public string BackorderStatus { get; set; }

        /// <summary>
        /// Gets or Sets Images
        /// </summary>
        [DataMember(Name = "images", EmitDefaultValue = false)]
        public List<ProductAddBatchPayloadInnerImagesInner> Images { get; set; }

        /// <summary>
        /// Gets or Sets Tags
        /// </summary>
        [DataMember(Name = "tags", EmitDefaultValue = false)]
        public List<string> Tags { get; set; }

        /// <summary>
        /// Gets or Sets Files
        /// </summary>
        [DataMember(Name = "files", EmitDefaultValue = false)]
        public List<ProductAddFilesInner> Files { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ProductAddBatchPayloadInner {\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  ShortDescription: ").Append(ShortDescription).Append("\n");
            sb.Append("  Sku: ").Append(Sku).Append("\n");
            sb.Append("  Model: ").Append(Model).Append("\n");
            sb.Append("  Asin: ").Append(Asin).Append("\n");
            sb.Append("  Upc: ").Append(Upc).Append("\n");
            sb.Append("  Ean: ").Append(Ean).Append("\n");
            sb.Append("  Gtin: ").Append(Gtin).Append("\n");
            sb.Append("  Mpn: ").Append(Mpn).Append("\n");
            sb.Append("  Barcode: ").Append(Barcode).Append("\n");
            sb.Append("  Price: ").Append(Price).Append("\n");
            sb.Append("  OldPrice: ").Append(OldPrice).Append("\n");
            sb.Append("  CostPrice: ").Append(CostPrice).Append("\n");
            sb.Append("  SpecialPrice: ").Append(SpecialPrice).Append("\n");
            sb.Append("  SpriceCreate: ").Append(SpriceCreate).Append("\n");
            sb.Append("  SpriceExpire: ").Append(SpriceExpire).Append("\n");
            sb.Append("  AdvancedPrices: ").Append(AdvancedPrices).Append("\n");
            sb.Append("  FixedCostShippingPrice: ").Append(FixedCostShippingPrice).Append("\n");
            sb.Append("  Quantity: ").Append(Quantity).Append("\n");
            sb.Append("  ManageStock: ").Append(ManageStock).Append("\n");
            sb.Append("  ProductType: ").Append(ProductType).Append("\n");
            sb.Append("  MarketplaceItemProperties: ").Append(MarketplaceItemProperties).Append("\n");
            sb.Append("  Specifics: ").Append(Specifics).Append("\n");
            sb.Append("  IsFreeShipping: ").Append(IsFreeShipping).Append("\n");
            sb.Append("  Taxable: ").Append(Taxable).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  Condition: ").Append(Condition).Append("\n");
            sb.Append("  Visible: ").Append(Visible).Append("\n");
            sb.Append("  AvailableForView: ").Append(AvailableForView).Append("\n");
            sb.Append("  AvailableForSale: ").Append(AvailableForSale).Append("\n");
            sb.Append("  IsVirtual: ").Append(IsVirtual).Append("\n");
            sb.Append("  InStock: ").Append(InStock).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  Downloadable: ").Append(Downloadable).Append("\n");
            sb.Append("  Weight: ").Append(Weight).Append("\n");
            sb.Append("  Length: ").Append(Length).Append("\n");
            sb.Append("  Width: ").Append(Width).Append("\n");
            sb.Append("  Height: ").Append(Height).Append("\n");
            sb.Append("  WeightUnit: ").Append(WeightUnit).Append("\n");
            sb.Append("  DimensionsUnit: ").Append(DimensionsUnit).Append("\n");
            sb.Append("  StoreId: ").Append(StoreId).Append("\n");
            sb.Append("  LangId: ").Append(LangId).Append("\n");
            sb.Append("  CategoryId: ").Append(CategoryId).Append("\n");
            sb.Append("  WarehouseId: ").Append(WarehouseId).Append("\n");
            sb.Append("  CategoriesIds: ").Append(CategoriesIds).Append("\n");
            sb.Append("  RelatedProductsIds: ").Append(RelatedProductsIds).Append("\n");
            sb.Append("  UpSellProductsIds: ").Append(UpSellProductsIds).Append("\n");
            sb.Append("  CrossSellProductsIds: ").Append(CrossSellProductsIds).Append("\n");
            sb.Append("  StoresIds: ").Append(StoresIds).Append("\n");
            sb.Append("  TaxClassId: ").Append(TaxClassId).Append("\n");
            sb.Append("  MetaTitle: ").Append(MetaTitle).Append("\n");
            sb.Append("  MetaDescription: ").Append(MetaDescription).Append("\n");
            sb.Append("  MetaKeywords: ").Append(MetaKeywords).Append("\n");
            sb.Append("  SearchKeywords: ").Append(SearchKeywords).Append("\n");
            sb.Append("  HarmonizedSystemCode: ").Append(HarmonizedSystemCode).Append("\n");
            sb.Append("  Url: ").Append(Url).Append("\n");
            sb.Append("  SeoUrl: ").Append(SeoUrl).Append("\n");
            sb.Append("  ExternalProductLink: ").Append(ExternalProductLink).Append("\n");
            sb.Append("  Manufacturer: ").Append(Manufacturer).Append("\n");
            sb.Append("  ManufacturerId: ").Append(ManufacturerId).Append("\n");
            sb.Append("  BackorderStatus: ").Append(BackorderStatus).Append("\n");
            sb.Append("  Images: ").Append(Images).Append("\n");
            sb.Append("  Tags: ").Append(Tags).Append("\n");
            sb.Append("  Files: ").Append(Files).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
