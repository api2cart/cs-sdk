/*
 * API2Cart OpenAPI
 *
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// Product
    /// </summary>
    [DataContract(Name = "Product")]
    public partial class Product : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Product" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="type">type.</param>
        /// <param name="uModel">uModel.</param>
        /// <param name="uSku">uSku.</param>
        /// <param name="name">name.</param>
        /// <param name="description">description.</param>
        /// <param name="shortDescription">shortDescription.</param>
        /// <param name="price">price.</param>
        /// <param name="advancedPrice">advancedPrice.</param>
        /// <param name="costPrice">costPrice.</param>
        /// <param name="quantity">quantity.</param>
        /// <param name="inventory">inventory.</param>
        /// <param name="groupItems">groupItems.</param>
        /// <param name="uBrandId">uBrandId.</param>
        /// <param name="uBrand">uBrand.</param>
        /// <param name="categoriesIds">categoriesIds.</param>
        /// <param name="storesIds">storesIds.</param>
        /// <param name="url">url.</param>
        /// <param name="seoUrl">seoUrl.</param>
        /// <param name="metaTitle">metaTitle.</param>
        /// <param name="metaKeywords">metaKeywords.</param>
        /// <param name="metaDescription">metaDescription.</param>
        /// <param name="availSale">availSale.</param>
        /// <param name="availView">availView.</param>
        /// <param name="isVirtual">isVirtual.</param>
        /// <param name="isDownloadable">isDownloadable.</param>
        /// <param name="weight">weight.</param>
        /// <param name="weightUnit">weightUnit.</param>
        /// <param name="sortOrder">sortOrder.</param>
        /// <param name="inStock">inStock.</param>
        /// <param name="onSale">onSale.</param>
        /// <param name="backorders">backorders.</param>
        /// <param name="manageStock">manageStock.</param>
        /// <param name="isStockManaged">isStockManaged.</param>
        /// <param name="createAt">createAt.</param>
        /// <param name="modifiedAt">modifiedAt.</param>
        /// <param name="taxClassId">taxClassId.</param>
        /// <param name="specialPrice">specialPrice.</param>
        /// <param name="tierPrice">tierPrice.</param>
        /// <param name="groupPrice">groupPrice.</param>
        /// <param name="images">images.</param>
        /// <param name="productOptions">productOptions.</param>
        /// <param name="uUpc">uUpc.</param>
        /// <param name="uMpn">uMpn.</param>
        /// <param name="uGtin">uGtin.</param>
        /// <param name="uIsbn">uIsbn.</param>
        /// <param name="uEan">uEan.</param>
        /// <param name="relatedProductsIds">relatedProductsIds.</param>
        /// <param name="upSellProductsIds">upSellProductsIds.</param>
        /// <param name="crossSellProductsIds">crossSellProductsIds.</param>
        /// <param name="dimensionsUnit">dimensionsUnit.</param>
        /// <param name="width">width.</param>
        /// <param name="height">height.</param>
        /// <param name="length">length.</param>
        /// <param name="discounts">discounts.</param>
        /// <param name="additionalFields">additionalFields.</param>
        /// <param name="customFields">customFields.</param>
        public Product(string id = default(string), string type = default(string), string uModel = default(string), string uSku = default(string), string name = default(string), string description = default(string), string shortDescription = default(string), decimal? price = default(decimal?), List<ProductAdvancedPrice> advancedPrice = default(List<ProductAdvancedPrice>), decimal? costPrice = default(decimal?), decimal? quantity = default(decimal?), List<ProductInventory> inventory = default(List<ProductInventory>), List<ProductGroupItem> groupItems = default(List<ProductGroupItem>), string uBrandId = default(string), string uBrand = default(string), List<string> categoriesIds = default(List<string>), List<string> storesIds = default(List<string>), string url = default(string), string seoUrl = default(string), string metaTitle = default(string), string metaKeywords = default(string), string metaDescription = default(string), bool? availSale = default(bool?), bool? availView = default(bool?), bool? isVirtual = default(bool?), bool? isDownloadable = default(bool?), decimal? weight = default(decimal?), string weightUnit = default(string), int? sortOrder = default(int?), bool? inStock = default(bool?), bool? onSale = default(bool?), string backorders = default(string), string manageStock = default(string), bool? isStockManaged = default(bool?), A2CDateTime createAt = default(A2CDateTime), A2CDateTime modifiedAt = default(A2CDateTime), string taxClassId = default(string), SpecialPrice specialPrice = default(SpecialPrice), List<ProductTierPrice> tierPrice = default(List<ProductTierPrice>), List<ProductGroupPrice> groupPrice = default(List<ProductGroupPrice>), List<Image> images = default(List<Image>), List<ProductOption> productOptions = default(List<ProductOption>), string uUpc = default(string), string uMpn = default(string), string uGtin = default(string), string uIsbn = default(string), string uEan = default(string), List<string> relatedProductsIds = default(List<string>), List<string> upSellProductsIds = default(List<string>), List<string> crossSellProductsIds = default(List<string>), string dimensionsUnit = default(string), decimal? width = default(decimal?), decimal? height = default(decimal?), decimal? length = default(decimal?), List<Discount> discounts = default(List<Discount>), Object additionalFields = default(Object), Object customFields = default(Object))
        {
            this.Id = id;
            this.Type = type;
            this.UModel = uModel;
            this.USku = uSku;
            this.Name = name;
            this.Description = description;
            this.ShortDescription = shortDescription;
            this.Price = price;
            this.AdvancedPrice = advancedPrice;
            this.CostPrice = costPrice;
            this.Quantity = quantity;
            this.Inventory = inventory;
            this.GroupItems = groupItems;
            this.UBrandId = uBrandId;
            this.UBrand = uBrand;
            this.CategoriesIds = categoriesIds;
            this.StoresIds = storesIds;
            this.Url = url;
            this.SeoUrl = seoUrl;
            this.MetaTitle = metaTitle;
            this.MetaKeywords = metaKeywords;
            this.MetaDescription = metaDescription;
            this.AvailSale = availSale;
            this.AvailView = availView;
            this.IsVirtual = isVirtual;
            this.IsDownloadable = isDownloadable;
            this.Weight = weight;
            this.WeightUnit = weightUnit;
            this.SortOrder = sortOrder;
            this.InStock = inStock;
            this.OnSale = onSale;
            this.Backorders = backorders;
            this.ManageStock = manageStock;
            this.IsStockManaged = isStockManaged;
            this.CreateAt = createAt;
            this.ModifiedAt = modifiedAt;
            this.TaxClassId = taxClassId;
            this.SpecialPrice = specialPrice;
            this.TierPrice = tierPrice;
            this.GroupPrice = groupPrice;
            this.Images = images;
            this.ProductOptions = productOptions;
            this.UUpc = uUpc;
            this.UMpn = uMpn;
            this.UGtin = uGtin;
            this.UIsbn = uIsbn;
            this.UEan = uEan;
            this.RelatedProductsIds = relatedProductsIds;
            this.UpSellProductsIds = upSellProductsIds;
            this.CrossSellProductsIds = crossSellProductsIds;
            this.DimensionsUnit = dimensionsUnit;
            this.Width = width;
            this.Height = height;
            this.Length = length;
            this.Discounts = discounts;
            this.AdditionalFields = additionalFields;
            this.CustomFields = customFields;
        }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets Type
        /// </summary>
        [DataMember(Name = "type", EmitDefaultValue = true)]
        public string Type { get; set; }

        /// <summary>
        /// Gets or Sets UModel
        /// </summary>
        [DataMember(Name = "u_model", EmitDefaultValue = true)]
        public string UModel { get; set; }

        /// <summary>
        /// Gets or Sets USku
        /// </summary>
        [DataMember(Name = "u_sku", EmitDefaultValue = true)]
        public string USku { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name = "name", EmitDefaultValue = true)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name = "description", EmitDefaultValue = true)]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets ShortDescription
        /// </summary>
        [DataMember(Name = "short_description", EmitDefaultValue = true)]
        public string ShortDescription { get; set; }

        /// <summary>
        /// Gets or Sets Price
        /// </summary>
        [DataMember(Name = "price", EmitDefaultValue = true)]
        public decimal? Price { get; set; }

        /// <summary>
        /// Gets or Sets AdvancedPrice
        /// </summary>
        [DataMember(Name = "advanced_price", EmitDefaultValue = false)]
        public List<ProductAdvancedPrice> AdvancedPrice { get; set; }

        /// <summary>
        /// Gets or Sets CostPrice
        /// </summary>
        [DataMember(Name = "cost_price", EmitDefaultValue = true)]
        public decimal? CostPrice { get; set; }

        /// <summary>
        /// Gets or Sets Quantity
        /// </summary>
        [DataMember(Name = "quantity", EmitDefaultValue = true)]
        public decimal? Quantity { get; set; }

        /// <summary>
        /// Gets or Sets Inventory
        /// </summary>
        [DataMember(Name = "inventory", EmitDefaultValue = false)]
        public List<ProductInventory> Inventory { get; set; }

        /// <summary>
        /// Gets or Sets GroupItems
        /// </summary>
        [DataMember(Name = "group_items", EmitDefaultValue = false)]
        public List<ProductGroupItem> GroupItems { get; set; }

        /// <summary>
        /// Gets or Sets UBrandId
        /// </summary>
        [DataMember(Name = "u_brand_id", EmitDefaultValue = true)]
        public string UBrandId { get; set; }

        /// <summary>
        /// Gets or Sets UBrand
        /// </summary>
        [DataMember(Name = "u_brand", EmitDefaultValue = true)]
        public string UBrand { get; set; }

        /// <summary>
        /// Gets or Sets CategoriesIds
        /// </summary>
        [DataMember(Name = "categories_ids", EmitDefaultValue = false)]
        public List<string> CategoriesIds { get; set; }

        /// <summary>
        /// Gets or Sets StoresIds
        /// </summary>
        [DataMember(Name = "stores_ids", EmitDefaultValue = false)]
        public List<string> StoresIds { get; set; }

        /// <summary>
        /// Gets or Sets Url
        /// </summary>
        [DataMember(Name = "url", EmitDefaultValue = true)]
        public string Url { get; set; }

        /// <summary>
        /// Gets or Sets SeoUrl
        /// </summary>
        [DataMember(Name = "seo_url", EmitDefaultValue = true)]
        public string SeoUrl { get; set; }

        /// <summary>
        /// Gets or Sets MetaTitle
        /// </summary>
        [DataMember(Name = "meta_title", EmitDefaultValue = true)]
        public string MetaTitle { get; set; }

        /// <summary>
        /// Gets or Sets MetaKeywords
        /// </summary>
        [DataMember(Name = "meta_keywords", EmitDefaultValue = true)]
        public string MetaKeywords { get; set; }

        /// <summary>
        /// Gets or Sets MetaDescription
        /// </summary>
        [DataMember(Name = "meta_description", EmitDefaultValue = true)]
        public string MetaDescription { get; set; }

        /// <summary>
        /// Gets or Sets AvailSale
        /// </summary>
        [DataMember(Name = "avail_sale", EmitDefaultValue = true)]
        public bool? AvailSale { get; set; }

        /// <summary>
        /// Gets or Sets AvailView
        /// </summary>
        [DataMember(Name = "avail_view", EmitDefaultValue = true)]
        public bool? AvailView { get; set; }

        /// <summary>
        /// Gets or Sets IsVirtual
        /// </summary>
        [DataMember(Name = "is_virtual", EmitDefaultValue = true)]
        public bool? IsVirtual { get; set; }

        /// <summary>
        /// Gets or Sets IsDownloadable
        /// </summary>
        [DataMember(Name = "is_downloadable", EmitDefaultValue = true)]
        public bool? IsDownloadable { get; set; }

        /// <summary>
        /// Gets or Sets Weight
        /// </summary>
        [DataMember(Name = "weight", EmitDefaultValue = true)]
        public decimal? Weight { get; set; }

        /// <summary>
        /// Gets or Sets WeightUnit
        /// </summary>
        [DataMember(Name = "weight_unit", EmitDefaultValue = true)]
        public string WeightUnit { get; set; }

        /// <summary>
        /// Gets or Sets SortOrder
        /// </summary>
        [DataMember(Name = "sort_order", EmitDefaultValue = true)]
        public int? SortOrder { get; set; }

        /// <summary>
        /// Gets or Sets InStock
        /// </summary>
        [DataMember(Name = "in_stock", EmitDefaultValue = true)]
        public bool? InStock { get; set; }

        /// <summary>
        /// Gets or Sets OnSale
        /// </summary>
        [DataMember(Name = "on_sale", EmitDefaultValue = true)]
        public bool? OnSale { get; set; }

        /// <summary>
        /// Gets or Sets Backorders
        /// </summary>
        [DataMember(Name = "backorders", EmitDefaultValue = true)]
        public string Backorders { get; set; }

        /// <summary>
        /// Gets or Sets ManageStock
        /// </summary>
        [DataMember(Name = "manage_stock", EmitDefaultValue = true)]
        public string ManageStock { get; set; }

        /// <summary>
        /// Gets or Sets IsStockManaged
        /// </summary>
        [DataMember(Name = "is_stock_managed", EmitDefaultValue = true)]
        public bool? IsStockManaged { get; set; }

        /// <summary>
        /// Gets or Sets CreateAt
        /// </summary>
        [DataMember(Name = "create_at", EmitDefaultValue = true)]
        public A2CDateTime CreateAt { get; set; }

        /// <summary>
        /// Gets or Sets ModifiedAt
        /// </summary>
        [DataMember(Name = "modified_at", EmitDefaultValue = true)]
        public A2CDateTime ModifiedAt { get; set; }

        /// <summary>
        /// Gets or Sets TaxClassId
        /// </summary>
        [DataMember(Name = "tax_class_id", EmitDefaultValue = true)]
        public string TaxClassId { get; set; }

        /// <summary>
        /// Gets or Sets SpecialPrice
        /// </summary>
        [DataMember(Name = "special_price", EmitDefaultValue = true)]
        public SpecialPrice SpecialPrice { get; set; }

        /// <summary>
        /// Gets or Sets TierPrice
        /// </summary>
        [DataMember(Name = "tier_price", EmitDefaultValue = false)]
        public List<ProductTierPrice> TierPrice { get; set; }

        /// <summary>
        /// Gets or Sets GroupPrice
        /// </summary>
        [DataMember(Name = "group_price", EmitDefaultValue = false)]
        public List<ProductGroupPrice> GroupPrice { get; set; }

        /// <summary>
        /// Gets or Sets Images
        /// </summary>
        [DataMember(Name = "images", EmitDefaultValue = false)]
        public List<Image> Images { get; set; }

        /// <summary>
        /// Gets or Sets ProductOptions
        /// </summary>
        [DataMember(Name = "product_options", EmitDefaultValue = false)]
        public List<ProductOption> ProductOptions { get; set; }

        /// <summary>
        /// Gets or Sets UUpc
        /// </summary>
        [DataMember(Name = "u_upc", EmitDefaultValue = true)]
        public string UUpc { get; set; }

        /// <summary>
        /// Gets or Sets UMpn
        /// </summary>
        [DataMember(Name = "u_mpn", EmitDefaultValue = true)]
        public string UMpn { get; set; }

        /// <summary>
        /// Gets or Sets UGtin
        /// </summary>
        [DataMember(Name = "u_gtin", EmitDefaultValue = true)]
        public string UGtin { get; set; }

        /// <summary>
        /// Gets or Sets UIsbn
        /// </summary>
        [DataMember(Name = "u_isbn", EmitDefaultValue = true)]
        public string UIsbn { get; set; }

        /// <summary>
        /// Gets or Sets UEan
        /// </summary>
        [DataMember(Name = "u_ean", EmitDefaultValue = true)]
        public string UEan { get; set; }

        /// <summary>
        /// Gets or Sets RelatedProductsIds
        /// </summary>
        [DataMember(Name = "related_products_ids", EmitDefaultValue = false)]
        public List<string> RelatedProductsIds { get; set; }

        /// <summary>
        /// Gets or Sets UpSellProductsIds
        /// </summary>
        [DataMember(Name = "up_sell_products_ids", EmitDefaultValue = false)]
        public List<string> UpSellProductsIds { get; set; }

        /// <summary>
        /// Gets or Sets CrossSellProductsIds
        /// </summary>
        [DataMember(Name = "cross_sell_products_ids", EmitDefaultValue = false)]
        public List<string> CrossSellProductsIds { get; set; }

        /// <summary>
        /// Gets or Sets DimensionsUnit
        /// </summary>
        [DataMember(Name = "dimensions_unit", EmitDefaultValue = true)]
        public string DimensionsUnit { get; set; }

        /// <summary>
        /// Gets or Sets Width
        /// </summary>
        [DataMember(Name = "width", EmitDefaultValue = true)]
        public decimal? Width { get; set; }

        /// <summary>
        /// Gets or Sets Height
        /// </summary>
        [DataMember(Name = "height", EmitDefaultValue = true)]
        public decimal? Height { get; set; }

        /// <summary>
        /// Gets or Sets Length
        /// </summary>
        [DataMember(Name = "length", EmitDefaultValue = true)]
        public decimal? Length { get; set; }

        /// <summary>
        /// Gets or Sets Discounts
        /// </summary>
        [DataMember(Name = "discounts", EmitDefaultValue = false)]
        public List<Discount> Discounts { get; set; }

        /// <summary>
        /// Gets or Sets AdditionalFields
        /// </summary>
        [DataMember(Name = "additional_fields", EmitDefaultValue = true)]
        public Object AdditionalFields { get; set; }

        /// <summary>
        /// Gets or Sets CustomFields
        /// </summary>
        [DataMember(Name = "custom_fields", EmitDefaultValue = true)]
        public Object CustomFields { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Product {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  UModel: ").Append(UModel).Append("\n");
            sb.Append("  USku: ").Append(USku).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  ShortDescription: ").Append(ShortDescription).Append("\n");
            sb.Append("  Price: ").Append(Price).Append("\n");
            sb.Append("  AdvancedPrice: ").Append(AdvancedPrice).Append("\n");
            sb.Append("  CostPrice: ").Append(CostPrice).Append("\n");
            sb.Append("  Quantity: ").Append(Quantity).Append("\n");
            sb.Append("  Inventory: ").Append(Inventory).Append("\n");
            sb.Append("  GroupItems: ").Append(GroupItems).Append("\n");
            sb.Append("  UBrandId: ").Append(UBrandId).Append("\n");
            sb.Append("  UBrand: ").Append(UBrand).Append("\n");
            sb.Append("  CategoriesIds: ").Append(CategoriesIds).Append("\n");
            sb.Append("  StoresIds: ").Append(StoresIds).Append("\n");
            sb.Append("  Url: ").Append(Url).Append("\n");
            sb.Append("  SeoUrl: ").Append(SeoUrl).Append("\n");
            sb.Append("  MetaTitle: ").Append(MetaTitle).Append("\n");
            sb.Append("  MetaKeywords: ").Append(MetaKeywords).Append("\n");
            sb.Append("  MetaDescription: ").Append(MetaDescription).Append("\n");
            sb.Append("  AvailSale: ").Append(AvailSale).Append("\n");
            sb.Append("  AvailView: ").Append(AvailView).Append("\n");
            sb.Append("  IsVirtual: ").Append(IsVirtual).Append("\n");
            sb.Append("  IsDownloadable: ").Append(IsDownloadable).Append("\n");
            sb.Append("  Weight: ").Append(Weight).Append("\n");
            sb.Append("  WeightUnit: ").Append(WeightUnit).Append("\n");
            sb.Append("  SortOrder: ").Append(SortOrder).Append("\n");
            sb.Append("  InStock: ").Append(InStock).Append("\n");
            sb.Append("  OnSale: ").Append(OnSale).Append("\n");
            sb.Append("  Backorders: ").Append(Backorders).Append("\n");
            sb.Append("  ManageStock: ").Append(ManageStock).Append("\n");
            sb.Append("  IsStockManaged: ").Append(IsStockManaged).Append("\n");
            sb.Append("  CreateAt: ").Append(CreateAt).Append("\n");
            sb.Append("  ModifiedAt: ").Append(ModifiedAt).Append("\n");
            sb.Append("  TaxClassId: ").Append(TaxClassId).Append("\n");
            sb.Append("  SpecialPrice: ").Append(SpecialPrice).Append("\n");
            sb.Append("  TierPrice: ").Append(TierPrice).Append("\n");
            sb.Append("  GroupPrice: ").Append(GroupPrice).Append("\n");
            sb.Append("  Images: ").Append(Images).Append("\n");
            sb.Append("  ProductOptions: ").Append(ProductOptions).Append("\n");
            sb.Append("  UUpc: ").Append(UUpc).Append("\n");
            sb.Append("  UMpn: ").Append(UMpn).Append("\n");
            sb.Append("  UGtin: ").Append(UGtin).Append("\n");
            sb.Append("  UIsbn: ").Append(UIsbn).Append("\n");
            sb.Append("  UEan: ").Append(UEan).Append("\n");
            sb.Append("  RelatedProductsIds: ").Append(RelatedProductsIds).Append("\n");
            sb.Append("  UpSellProductsIds: ").Append(UpSellProductsIds).Append("\n");
            sb.Append("  CrossSellProductsIds: ").Append(CrossSellProductsIds).Append("\n");
            sb.Append("  DimensionsUnit: ").Append(DimensionsUnit).Append("\n");
            sb.Append("  Width: ").Append(Width).Append("\n");
            sb.Append("  Height: ").Append(Height).Append("\n");
            sb.Append("  Length: ").Append(Length).Append("\n");
            sb.Append("  Discounts: ").Append(Discounts).Append("\n");
            sb.Append("  AdditionalFields: ").Append(AdditionalFields).Append("\n");
            sb.Append("  CustomFields: ").Append(CustomFields).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
