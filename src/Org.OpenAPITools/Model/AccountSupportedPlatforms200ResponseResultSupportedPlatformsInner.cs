/*
 * API2Cart OpenAPI
 *
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// AccountSupportedPlatforms200ResponseResultSupportedPlatformsInner
    /// </summary>
    [DataContract(Name = "AccountSupportedPlatforms_200_response_result_supported_platforms_inner")]
    public partial class AccountSupportedPlatforms200ResponseResultSupportedPlatformsInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AccountSupportedPlatforms200ResponseResultSupportedPlatformsInner" /> class.
        /// </summary>
        /// <param name="cartId">cartId.</param>
        /// <param name="cartName">cartName.</param>
        /// <param name="cartVersions">cartVersions.</param>
        /// <param name="cartMethod">cartMethod.</param>
        /// <param name="varParams">varParams.</param>
        public AccountSupportedPlatforms200ResponseResultSupportedPlatformsInner(string cartId = default(string), string cartName = default(string), string cartVersions = default(string), string cartMethod = default(string), AccountSupportedPlatforms200ResponseResultSupportedPlatformsInnerParams varParams = default(AccountSupportedPlatforms200ResponseResultSupportedPlatformsInnerParams))
        {
            this.CartId = cartId;
            this.CartName = cartName;
            this.CartVersions = cartVersions;
            this.CartMethod = cartMethod;
            this.Params = varParams;
        }

        /// <summary>
        /// Gets or Sets CartId
        /// </summary>
        [DataMember(Name = "cart_id", EmitDefaultValue = false)]
        public string CartId { get; set; }

        /// <summary>
        /// Gets or Sets CartName
        /// </summary>
        [DataMember(Name = "cart_name", EmitDefaultValue = false)]
        public string CartName { get; set; }

        /// <summary>
        /// Gets or Sets CartVersions
        /// </summary>
        [DataMember(Name = "cart_versions", EmitDefaultValue = false)]
        public string CartVersions { get; set; }

        /// <summary>
        /// Gets or Sets CartMethod
        /// </summary>
        [DataMember(Name = "cart_method", EmitDefaultValue = false)]
        public string CartMethod { get; set; }

        /// <summary>
        /// Gets or Sets Params
        /// </summary>
        [DataMember(Name = "params", EmitDefaultValue = false)]
        public AccountSupportedPlatforms200ResponseResultSupportedPlatformsInnerParams Params { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AccountSupportedPlatforms200ResponseResultSupportedPlatformsInner {\n");
            sb.Append("  CartId: ").Append(CartId).Append("\n");
            sb.Append("  CartName: ").Append(CartName).Append("\n");
            sb.Append("  CartVersions: ").Append(CartVersions).Append("\n");
            sb.Append("  CartMethod: ").Append(CartMethod).Append("\n");
            sb.Append("  Params: ").Append(Params).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
