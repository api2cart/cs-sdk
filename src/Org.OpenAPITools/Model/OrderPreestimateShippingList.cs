/*
 * API2Cart OpenAPI
 *
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// OrderPreestimateShippingList
    /// </summary>
    [DataContract(Name = "OrderPreestimateShippingList")]
    public partial class OrderPreestimateShippingList : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="OrderPreestimateShippingList" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected OrderPreestimateShippingList() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="OrderPreestimateShippingList" /> class.
        /// </summary>
        /// <param name="warehouseId">This parameter is used for selecting a warehouse where you need to set/modify a product quantity..</param>
        /// <param name="customerId">Retrieves orders specified by customer id.</param>
        /// <param name="customerEmail">Retrieves orders specified by customer email.</param>
        /// <param name="storeId">Store Id.</param>
        /// <param name="shippAddress1">Specifies first shipping address.</param>
        /// <param name="shippCity">Specifies shipping city.</param>
        /// <param name="shippPostcode">Specifies shipping postcode.</param>
        /// <param name="shippState">Specifies shipping state code.</param>
        /// <param name="shippCountry">Specifies shipping country code (required).</param>
        /// <param name="varParams">Set this parameter in order to choose which entity fields you want to retrieve (default to &quot;force_all&quot;).</param>
        /// <param name="exclude">Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter &#x60;params&#x60; equal force_all.</param>
        /// <param name="orderItem">orderItem (required).</param>
        public OrderPreestimateShippingList(string warehouseId = default(string), string customerId = default(string), string customerEmail = default(string), string storeId = default(string), string shippAddress1 = default(string), string shippCity = default(string), string shippPostcode = default(string), string shippState = default(string), string shippCountry = default(string), string varParams = @"force_all", string exclude = default(string), List<OrderPreestimateShippingListOrderItemInner> orderItem = default(List<OrderPreestimateShippingListOrderItemInner>))
        {
            // to ensure "shippCountry" is required (not null)
            if (shippCountry == null)
            {
                throw new ArgumentNullException("shippCountry is a required property for OrderPreestimateShippingList and cannot be null");
            }
            this.ShippCountry = shippCountry;
            // to ensure "orderItem" is required (not null)
            if (orderItem == null)
            {
                throw new ArgumentNullException("orderItem is a required property for OrderPreestimateShippingList and cannot be null");
            }
            this.OrderItem = orderItem;
            this.WarehouseId = warehouseId;
            this.CustomerId = customerId;
            this.CustomerEmail = customerEmail;
            this.StoreId = storeId;
            this.ShippAddress1 = shippAddress1;
            this.ShippCity = shippCity;
            this.ShippPostcode = shippPostcode;
            this.ShippState = shippState;
            // use default value if no "varParams" provided
            this.Params = varParams ?? @"force_all";
            this.Exclude = exclude;
        }

        /// <summary>
        /// This parameter is used for selecting a warehouse where you need to set/modify a product quantity.
        /// </summary>
        /// <value>This parameter is used for selecting a warehouse where you need to set/modify a product quantity.</value>
        /*
        <example>1</example>
        */
        [DataMember(Name = "warehouse_id", EmitDefaultValue = false)]
        public string WarehouseId { get; set; }

        /// <summary>
        /// Retrieves orders specified by customer id
        /// </summary>
        /// <value>Retrieves orders specified by customer id</value>
        /*
        <example>5</example>
        */
        [DataMember(Name = "customer_id", EmitDefaultValue = false)]
        public string CustomerId { get; set; }

        /// <summary>
        /// Retrieves orders specified by customer email
        /// </summary>
        /// <value>Retrieves orders specified by customer email</value>
        /*
        <example>jubari@hannsgroup.com</example>
        */
        [DataMember(Name = "customer_email", EmitDefaultValue = false)]
        public string CustomerEmail { get; set; }

        /// <summary>
        /// Store Id
        /// </summary>
        /// <value>Store Id</value>
        /*
        <example>1</example>
        */
        [DataMember(Name = "store_id", EmitDefaultValue = false)]
        public string StoreId { get; set; }

        /// <summary>
        /// Specifies first shipping address
        /// </summary>
        /// <value>Specifies first shipping address</value>
        /*
        <example>Green str. 35</example>
        */
        [DataMember(Name = "shipp_address_1", EmitDefaultValue = false)]
        public string ShippAddress1 { get; set; }

        /// <summary>
        /// Specifies shipping city
        /// </summary>
        /// <value>Specifies shipping city</value>
        /*
        <example>Chicago</example>
        */
        [DataMember(Name = "shipp_city", EmitDefaultValue = false)]
        public string ShippCity { get; set; }

        /// <summary>
        /// Specifies shipping postcode
        /// </summary>
        /// <value>Specifies shipping postcode</value>
        /*
        <example>24545</example>
        */
        [DataMember(Name = "shipp_postcode", EmitDefaultValue = false)]
        public string ShippPostcode { get; set; }

        /// <summary>
        /// Specifies shipping state code
        /// </summary>
        /// <value>Specifies shipping state code</value>
        /*
        <example>IL</example>
        */
        [DataMember(Name = "shipp_state", EmitDefaultValue = false)]
        public string ShippState { get; set; }

        /// <summary>
        /// Specifies shipping country code
        /// </summary>
        /// <value>Specifies shipping country code</value>
        /*
        <example>US</example>
        */
        [DataMember(Name = "shipp_country", IsRequired = true, EmitDefaultValue = true)]
        public string ShippCountry { get; set; }

        /// <summary>
        /// Set this parameter in order to choose which entity fields you want to retrieve
        /// </summary>
        /// <value>Set this parameter in order to choose which entity fields you want to retrieve</value>
        /*
        <example>id,model,price,images</example>
        */
        [DataMember(Name = "params", EmitDefaultValue = false)]
        public string Params { get; set; }

        /// <summary>
        /// Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter &#x60;params&#x60; equal force_all
        /// </summary>
        /// <value>Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter &#x60;params&#x60; equal force_all</value>
        /*
        <example>false</example>
        */
        [DataMember(Name = "exclude", EmitDefaultValue = false)]
        public string Exclude { get; set; }

        /// <summary>
        /// Gets or Sets OrderItem
        /// </summary>
        [DataMember(Name = "order_item", IsRequired = true, EmitDefaultValue = true)]
        public List<OrderPreestimateShippingListOrderItemInner> OrderItem { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class OrderPreestimateShippingList {\n");
            sb.Append("  WarehouseId: ").Append(WarehouseId).Append("\n");
            sb.Append("  CustomerId: ").Append(CustomerId).Append("\n");
            sb.Append("  CustomerEmail: ").Append(CustomerEmail).Append("\n");
            sb.Append("  StoreId: ").Append(StoreId).Append("\n");
            sb.Append("  ShippAddress1: ").Append(ShippAddress1).Append("\n");
            sb.Append("  ShippCity: ").Append(ShippCity).Append("\n");
            sb.Append("  ShippPostcode: ").Append(ShippPostcode).Append("\n");
            sb.Append("  ShippState: ").Append(ShippState).Append("\n");
            sb.Append("  ShippCountry: ").Append(ShippCountry).Append("\n");
            sb.Append("  Params: ").Append(Params).Append("\n");
            sb.Append("  Exclude: ").Append(Exclude).Append("\n");
            sb.Append("  OrderItem: ").Append(OrderItem).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
