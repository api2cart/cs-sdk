/*
 * API2Cart OpenAPI
 *
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// OrderItem
    /// </summary>
    [DataContract(Name = "Order_Item")]
    public partial class OrderItem : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="OrderItem" /> class.
        /// </summary>
        /// <param name="productId">productId.</param>
        /// <param name="orderProductId">orderProductId.</param>
        /// <param name="model">model.</param>
        /// <param name="name">name.</param>
        /// <param name="price">price.</param>
        /// <param name="priceIncTax">priceIncTax.</param>
        /// <param name="quantity">quantity.</param>
        /// <param name="discountAmount">discountAmount.</param>
        /// <param name="totalPrice">totalPrice.</param>
        /// <param name="taxPercent">taxPercent.</param>
        /// <param name="taxValue">taxValue.</param>
        /// <param name="taxValueAfterDiscount">taxValueAfterDiscount.</param>
        /// <param name="options">options.</param>
        /// <param name="variantId">variantId.</param>
        /// <param name="weightUnit">weightUnit.</param>
        /// <param name="weight">weight.</param>
        /// <param name="barcode">barcode.</param>
        /// <param name="parentOrderProductId">parentOrderProductId.</param>
        /// <param name="additionalFields">additionalFields.</param>
        /// <param name="customFields">customFields.</param>
        public OrderItem(string productId = default(string), string orderProductId = default(string), string model = default(string), string name = default(string), decimal price = default(decimal), decimal priceIncTax = default(decimal), decimal quantity = default(decimal), decimal discountAmount = default(decimal), decimal totalPrice = default(decimal), decimal taxPercent = default(decimal), decimal taxValue = default(decimal), decimal taxValueAfterDiscount = default(decimal), List<OrderItemOption> options = default(List<OrderItemOption>), string variantId = default(string), string weightUnit = default(string), decimal weight = default(decimal), string barcode = default(string), string parentOrderProductId = default(string), Object additionalFields = default(Object), Object customFields = default(Object))
        {
            this.ProductId = productId;
            this.OrderProductId = orderProductId;
            this.Model = model;
            this.Name = name;
            this.Price = price;
            this.PriceIncTax = priceIncTax;
            this.Quantity = quantity;
            this.DiscountAmount = discountAmount;
            this.TotalPrice = totalPrice;
            this.TaxPercent = taxPercent;
            this.TaxValue = taxValue;
            this.TaxValueAfterDiscount = taxValueAfterDiscount;
            this.Options = options;
            this.VariantId = variantId;
            this.WeightUnit = weightUnit;
            this.Weight = weight;
            this.Barcode = barcode;
            this.ParentOrderProductId = parentOrderProductId;
            this.AdditionalFields = additionalFields;
            this.CustomFields = customFields;
        }

        /// <summary>
        /// Gets or Sets ProductId
        /// </summary>
        [DataMember(Name = "product_id", EmitDefaultValue = false)]
        public string ProductId { get; set; }

        /// <summary>
        /// Gets or Sets OrderProductId
        /// </summary>
        [DataMember(Name = "order_product_id", EmitDefaultValue = false)]
        public string OrderProductId { get; set; }

        /// <summary>
        /// Gets or Sets Model
        /// </summary>
        [DataMember(Name = "model", EmitDefaultValue = false)]
        public string Model { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets Price
        /// </summary>
        [DataMember(Name = "price", EmitDefaultValue = false)]
        public decimal Price { get; set; }

        /// <summary>
        /// Gets or Sets PriceIncTax
        /// </summary>
        [DataMember(Name = "price_inc_tax", EmitDefaultValue = false)]
        public decimal PriceIncTax { get; set; }

        /// <summary>
        /// Gets or Sets Quantity
        /// </summary>
        [DataMember(Name = "quantity", EmitDefaultValue = false)]
        public decimal Quantity { get; set; }

        /// <summary>
        /// Gets or Sets DiscountAmount
        /// </summary>
        [DataMember(Name = "discount_amount", EmitDefaultValue = false)]
        public decimal DiscountAmount { get; set; }

        /// <summary>
        /// Gets or Sets TotalPrice
        /// </summary>
        [DataMember(Name = "total_price", EmitDefaultValue = false)]
        public decimal TotalPrice { get; set; }

        /// <summary>
        /// Gets or Sets TaxPercent
        /// </summary>
        [DataMember(Name = "tax_percent", EmitDefaultValue = false)]
        public decimal TaxPercent { get; set; }

        /// <summary>
        /// Gets or Sets TaxValue
        /// </summary>
        [DataMember(Name = "tax_value", EmitDefaultValue = false)]
        public decimal TaxValue { get; set; }

        /// <summary>
        /// Gets or Sets TaxValueAfterDiscount
        /// </summary>
        [DataMember(Name = "tax_value_after_discount", EmitDefaultValue = false)]
        public decimal TaxValueAfterDiscount { get; set; }

        /// <summary>
        /// Gets or Sets Options
        /// </summary>
        [DataMember(Name = "options", EmitDefaultValue = false)]
        public List<OrderItemOption> Options { get; set; }

        /// <summary>
        /// Gets or Sets VariantId
        /// </summary>
        [DataMember(Name = "variant_id", EmitDefaultValue = false)]
        public string VariantId { get; set; }

        /// <summary>
        /// Gets or Sets WeightUnit
        /// </summary>
        [DataMember(Name = "weight_unit", EmitDefaultValue = false)]
        public string WeightUnit { get; set; }

        /// <summary>
        /// Gets or Sets Weight
        /// </summary>
        [DataMember(Name = "weight", EmitDefaultValue = false)]
        public decimal Weight { get; set; }

        /// <summary>
        /// Gets or Sets Barcode
        /// </summary>
        [DataMember(Name = "barcode", EmitDefaultValue = false)]
        public string Barcode { get; set; }

        /// <summary>
        /// Gets or Sets ParentOrderProductId
        /// </summary>
        [DataMember(Name = "parent_order_product_id", EmitDefaultValue = false)]
        public string ParentOrderProductId { get; set; }

        /// <summary>
        /// Gets or Sets AdditionalFields
        /// </summary>
        [DataMember(Name = "additional_fields", EmitDefaultValue = false)]
        public Object AdditionalFields { get; set; }

        /// <summary>
        /// Gets or Sets CustomFields
        /// </summary>
        [DataMember(Name = "custom_fields", EmitDefaultValue = false)]
        public Object CustomFields { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class OrderItem {\n");
            sb.Append("  ProductId: ").Append(ProductId).Append("\n");
            sb.Append("  OrderProductId: ").Append(OrderProductId).Append("\n");
            sb.Append("  Model: ").Append(Model).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Price: ").Append(Price).Append("\n");
            sb.Append("  PriceIncTax: ").Append(PriceIncTax).Append("\n");
            sb.Append("  Quantity: ").Append(Quantity).Append("\n");
            sb.Append("  DiscountAmount: ").Append(DiscountAmount).Append("\n");
            sb.Append("  TotalPrice: ").Append(TotalPrice).Append("\n");
            sb.Append("  TaxPercent: ").Append(TaxPercent).Append("\n");
            sb.Append("  TaxValue: ").Append(TaxValue).Append("\n");
            sb.Append("  TaxValueAfterDiscount: ").Append(TaxValueAfterDiscount).Append("\n");
            sb.Append("  Options: ").Append(Options).Append("\n");
            sb.Append("  VariantId: ").Append(VariantId).Append("\n");
            sb.Append("  WeightUnit: ").Append(WeightUnit).Append("\n");
            sb.Append("  Weight: ").Append(Weight).Append("\n");
            sb.Append("  Barcode: ").Append(Barcode).Append("\n");
            sb.Append("  ParentOrderProductId: ").Append(ParentOrderProductId).Append("\n");
            sb.Append("  AdditionalFields: ").Append(AdditionalFields).Append("\n");
            sb.Append("  CustomFields: ").Append(CustomFields).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
