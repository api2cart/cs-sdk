/*
 * API2Cart OpenAPI
 *
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// AccountCartAdd
    /// </summary>
    [DataContract(Name = "AccountCartAdd")]
    public partial class AccountCartAdd : IValidatableObject
    {
        /// <summary>
        /// Store’s identifier which you can get from cart_list method
        /// </summary>
        /// <value>Store’s identifier which you can get from cart_list method</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum CartIdEnum
        {
            /// <summary>
            /// Enum _3DCart for value: 3DCart
            /// </summary>
            [EnumMember(Value = "3DCart")]
            _3DCart = 1,

            /// <summary>
            /// Enum _3DCartApi for value: 3DCartApi
            /// </summary>
            [EnumMember(Value = "3DCartApi")]
            _3DCartApi = 2,

            /// <summary>
            /// Enum AceShop for value: AceShop
            /// </summary>
            [EnumMember(Value = "AceShop")]
            AceShop = 3,

            /// <summary>
            /// Enum AmazonSP for value: AmazonSP
            /// </summary>
            [EnumMember(Value = "AmazonSP")]
            AmazonSP = 4,

            /// <summary>
            /// Enum AspDotNetStorefront for value: AspDotNetStorefront
            /// </summary>
            [EnumMember(Value = "AspDotNetStorefront")]
            AspDotNetStorefront = 5,

            /// <summary>
            /// Enum BigCartel for value: BigCartel
            /// </summary>
            [EnumMember(Value = "BigCartel")]
            BigCartel = 6,

            /// <summary>
            /// Enum BigcommerceApi for value: BigcommerceApi
            /// </summary>
            [EnumMember(Value = "BigcommerceApi")]
            BigcommerceApi = 7,

            /// <summary>
            /// Enum Bol for value: Bol
            /// </summary>
            [EnumMember(Value = "Bol")]
            Bol = 8,

            /// <summary>
            /// Enum CommerceHQ for value: CommerceHQ
            /// </summary>
            [EnumMember(Value = "CommerceHQ")]
            CommerceHQ = 9,

            /// <summary>
            /// Enum Creloaded for value: Creloaded
            /// </summary>
            [EnumMember(Value = "Creloaded")]
            Creloaded = 10,

            /// <summary>
            /// Enum Cscart for value: Cscart
            /// </summary>
            [EnumMember(Value = "Cscart")]
            Cscart = 11,

            /// <summary>
            /// Enum Cubecart for value: Cubecart
            /// </summary>
            [EnumMember(Value = "Cubecart")]
            Cubecart = 12,

            /// <summary>
            /// Enum Demandware for value: Demandware
            /// </summary>
            [EnumMember(Value = "Demandware")]
            Demandware = 13,

            /// <summary>
            /// Enum EBay for value: EBay
            /// </summary>
            [EnumMember(Value = "EBay")]
            EBay = 14,

            /// <summary>
            /// Enum Ecwid for value: Ecwid
            /// </summary>
            [EnumMember(Value = "Ecwid")]
            Ecwid = 15,

            /// <summary>
            /// Enum EtsyAPIv3 for value: EtsyAPIv3
            /// </summary>
            [EnumMember(Value = "EtsyAPIv3")]
            EtsyAPIv3 = 16,

            /// <summary>
            /// Enum Flipkart for value: Flipkart
            /// </summary>
            [EnumMember(Value = "Flipkart")]
            Flipkart = 17,

            /// <summary>
            /// Enum Gambio for value: Gambio
            /// </summary>
            [EnumMember(Value = "Gambio")]
            Gambio = 18,

            /// <summary>
            /// Enum Hybris for value: Hybris
            /// </summary>
            [EnumMember(Value = "Hybris")]
            Hybris = 19,

            /// <summary>
            /// Enum JooCart for value: JooCart
            /// </summary>
            [EnumMember(Value = "JooCart")]
            JooCart = 20,

            /// <summary>
            /// Enum Lazada for value: Lazada
            /// </summary>
            [EnumMember(Value = "Lazada")]
            Lazada = 21,

            /// <summary>
            /// Enum LightSpeed for value: LightSpeed
            /// </summary>
            [EnumMember(Value = "LightSpeed")]
            LightSpeed = 22,

            /// <summary>
            /// Enum Magento1212 for value: Magento1212
            /// </summary>
            [EnumMember(Value = "Magento1212")]
            Magento1212 = 23,

            /// <summary>
            /// Enum Magento2Api for value: Magento2Api
            /// </summary>
            [EnumMember(Value = "Magento2Api")]
            Magento2Api = 24,

            /// <summary>
            /// Enum MercadoLibre for value: MercadoLibre
            /// </summary>
            [EnumMember(Value = "MercadoLibre")]
            MercadoLibre = 25,

            /// <summary>
            /// Enum MijoShop for value: MijoShop
            /// </summary>
            [EnumMember(Value = "MijoShop")]
            MijoShop = 26,

            /// <summary>
            /// Enum Miva for value: Miva
            /// </summary>
            [EnumMember(Value = "Miva")]
            Miva = 27,

            /// <summary>
            /// Enum Neto for value: Neto
            /// </summary>
            [EnumMember(Value = "Neto")]
            Neto = 28,

            /// <summary>
            /// Enum Opencart14 for value: Opencart14
            /// </summary>
            [EnumMember(Value = "Opencart14")]
            Opencart14 = 29,

            /// <summary>
            /// Enum Oscmax2 for value: Oscmax2
            /// </summary>
            [EnumMember(Value = "Oscmax2")]
            Oscmax2 = 30,

            /// <summary>
            /// Enum Oscommerce22ms2 for value: Oscommerce22ms2
            /// </summary>
            [EnumMember(Value = "Oscommerce22ms2")]
            Oscommerce22ms2 = 31,

            /// <summary>
            /// Enum Otto for value: Otto
            /// </summary>
            [EnumMember(Value = "Otto")]
            Otto = 32,

            /// <summary>
            /// Enum Oxid for value: Oxid
            /// </summary>
            [EnumMember(Value = "Oxid")]
            Oxid = 33,

            /// <summary>
            /// Enum Pinnacle for value: Pinnacle
            /// </summary>
            [EnumMember(Value = "Pinnacle")]
            Pinnacle = 34,

            /// <summary>
            /// Enum Prestashop for value: Prestashop
            /// </summary>
            [EnumMember(Value = "Prestashop")]
            Prestashop = 35,

            /// <summary>
            /// Enum PrestashopApi for value: PrestashopApi
            /// </summary>
            [EnumMember(Value = "PrestashopApi")]
            PrestashopApi = 36,

            /// <summary>
            /// Enum SSPremium for value: SSPremium
            /// </summary>
            [EnumMember(Value = "SSPremium")]
            SSPremium = 37,

            /// <summary>
            /// Enum Salla for value: Salla
            /// </summary>
            [EnumMember(Value = "Salla")]
            Salla = 38,

            /// <summary>
            /// Enum Shopify for value: Shopify
            /// </summary>
            [EnumMember(Value = "Shopify")]
            Shopify = 39,

            /// <summary>
            /// Enum Shopee for value: Shopee
            /// </summary>
            [EnumMember(Value = "Shopee")]
            Shopee = 40,

            /// <summary>
            /// Enum Shoplazza for value: Shoplazza
            /// </summary>
            [EnumMember(Value = "Shoplazza")]
            Shoplazza = 41,

            /// <summary>
            /// Enum Shopline for value: Shopline
            /// </summary>
            [EnumMember(Value = "Shopline")]
            Shopline = 42,

            /// <summary>
            /// Enum Shopware for value: Shopware
            /// </summary>
            [EnumMember(Value = "Shopware")]
            Shopware = 43,

            /// <summary>
            /// Enum ShopwareApi for value: ShopwareApi
            /// </summary>
            [EnumMember(Value = "ShopwareApi")]
            ShopwareApi = 44,

            /// <summary>
            /// Enum Square for value: Square
            /// </summary>
            [EnumMember(Value = "Square")]
            Square = 45,

            /// <summary>
            /// Enum Squarespace for value: Squarespace
            /// </summary>
            [EnumMember(Value = "Squarespace")]
            Squarespace = 46,

            /// <summary>
            /// Enum Tiendanube for value: Tiendanube
            /// </summary>
            [EnumMember(Value = "Tiendanube")]
            Tiendanube = 47,

            /// <summary>
            /// Enum TikTokShop for value: TikTokShop
            /// </summary>
            [EnumMember(Value = "TikTokShop")]
            TikTokShop = 48,

            /// <summary>
            /// Enum Tomatocart for value: Tomatocart
            /// </summary>
            [EnumMember(Value = "Tomatocart")]
            Tomatocart = 49,

            /// <summary>
            /// Enum Ubercart for value: Ubercart
            /// </summary>
            [EnumMember(Value = "Ubercart")]
            Ubercart = 50,

            /// <summary>
            /// Enum Virtuemart for value: Virtuemart
            /// </summary>
            [EnumMember(Value = "Virtuemart")]
            Virtuemart = 51,

            /// <summary>
            /// Enum Volusion for value: Volusion
            /// </summary>
            [EnumMember(Value = "Volusion")]
            Volusion = 52,

            /// <summary>
            /// Enum WPecommerce for value: WPecommerce
            /// </summary>
            [EnumMember(Value = "WPecommerce")]
            WPecommerce = 53,

            /// <summary>
            /// Enum Walmart for value: Walmart
            /// </summary>
            [EnumMember(Value = "Walmart")]
            Walmart = 54,

            /// <summary>
            /// Enum WebAsyst for value: WebAsyst
            /// </summary>
            [EnumMember(Value = "WebAsyst")]
            WebAsyst = 55,

            /// <summary>
            /// Enum Wix for value: Wix
            /// </summary>
            [EnumMember(Value = "Wix")]
            Wix = 56,

            /// <summary>
            /// Enum Woocommerce for value: Woocommerce
            /// </summary>
            [EnumMember(Value = "Woocommerce")]
            Woocommerce = 57,

            /// <summary>
            /// Enum WoocommerceApi for value: WoocommerceApi
            /// </summary>
            [EnumMember(Value = "WoocommerceApi")]
            WoocommerceApi = 58,

            /// <summary>
            /// Enum Xcart for value: Xcart
            /// </summary>
            [EnumMember(Value = "Xcart")]
            Xcart = 59,

            /// <summary>
            /// Enum Xtcommerce for value: Xtcommerce
            /// </summary>
            [EnumMember(Value = "Xtcommerce")]
            Xtcommerce = 60,

            /// <summary>
            /// Enum XtcommerceVeyton for value: XtcommerceVeyton
            /// </summary>
            [EnumMember(Value = "XtcommerceVeyton")]
            XtcommerceVeyton = 61,

            /// <summary>
            /// Enum Zencart137 for value: Zencart137
            /// </summary>
            [EnumMember(Value = "Zencart137")]
            Zencart137 = 62,

            /// <summary>
            /// Enum Zid for value: Zid
            /// </summary>
            [EnumMember(Value = "Zid")]
            Zid = 63,

            /// <summary>
            /// Enum Zoey for value: Zoey
            /// </summary>
            [EnumMember(Value = "Zoey")]
            Zoey = 64,

            /// <summary>
            /// Enum Zoho for value: Zoho
            /// </summary>
            [EnumMember(Value = "Zoho")]
            Zoho = 65
        }


        /// <summary>
        /// Store’s identifier which you can get from cart_list method
        /// </summary>
        /// <value>Store’s identifier which you can get from cart_list method</value>
        /*
        <example>Opencart14</example>
        */
        [DataMember(Name = "cart_id", IsRequired = true, EmitDefaultValue = true)]
        public CartIdEnum CartId { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="AccountCartAdd" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected AccountCartAdd() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="AccountCartAdd" /> class.
        /// </summary>
        /// <param name="cartId">Store’s identifier which you can get from cart_list method (required).</param>
        /// <param name="storeUrl">A web address of a store that you would like to connect to API2Cart.</param>
        /// <param name="bridgeUrl">This parameter allows to set up store with custom bridge url (also you must use store_root parameter if a bridge folder is not in the root folder of the store).</param>
        /// <param name="storeRoot">Absolute path to the store root directory (used with \&quot;bridge_url\&quot; parameter).</param>
        /// <param name="storeKey">Set this parameter if bridge is already uploaded to store.</param>
        /// <param name="validateVersion">Specify if api2cart should validate cart version (default to false).</param>
        /// <param name="verify">Enables or disables cart&#39;s verification (default to true).</param>
        /// <param name="dbTablesPrefix">DB tables prefix.</param>
        /// <param name="userAgent">This parameter allows you to set your custom user agent, which will be used in requests to the store. Please use it cautiously, as the store&#39;s firewall may block specific values..</param>
        /// <param name="ftpHost">FTP connection host.</param>
        /// <param name="ftpUser">FTP User.</param>
        /// <param name="ftpPassword">FTP Password.</param>
        /// <param name="ftpPort">FTP Port.</param>
        /// <param name="ftpStoreDir">FTP Store dir.</param>
        /// <param name="var3dcartPrivateKey">3DCart Private Key.</param>
        /// <param name="var3dcartAccessToken">3DCart Token.</param>
        /// <param name="var3dcartapiApiKey">3DCart API Key.</param>
        /// <param name="amazonSpClientId">Amazon SP API app client id.</param>
        /// <param name="amazonSpClientSecret">Amazon SP API app client secret.</param>
        /// <param name="amazonSpRefreshToken">Amazon SP API OAuth refresh token.</param>
        /// <param name="amazonSpAwsRegion">Amazon AWS Region.</param>
        /// <param name="amazonSpApiEnvironment">Amazon SP API environment (default to &quot;production&quot;).</param>
        /// <param name="amazonSellerId">Amazon Seller ID (Merchant token).</param>
        /// <param name="aspdotnetstorefrontApiUser">It&#39;s a AspDotNetStorefront account for which API is available.</param>
        /// <param name="aspdotnetstorefrontApiPass">AspDotNetStorefront API Password.</param>
        /// <param name="bigcommerceapiAdminAccount">It&#39;s a BigCommerce account for which API is enabled.</param>
        /// <param name="bigcommerceapiApiPath">BigCommerce API URL.</param>
        /// <param name="bigcommerceapiApiKey">Bigcommerce API Key.</param>
        /// <param name="bigcommerceapiClientId">Client ID of the requesting app.</param>
        /// <param name="bigcommerceapiAccessToken">Access token authorizing the app to access resources on behalf of a user.</param>
        /// <param name="bigcommerceapiContext">API Path section unique to the store.</param>
        /// <param name="bolApiKey">Bol API Key.</param>
        /// <param name="bolApiSecret">Bol API Secret.</param>
        /// <param name="bolRetailerId">Bol Retailer ID.</param>
        /// <param name="bigcartelUserName">Subdomain of store (required).</param>
        /// <param name="bigcartelPassword">BigCartel account password (required).</param>
        /// <param name="demandwareClientId">Demandware client id.</param>
        /// <param name="demandwareApiPassword">Demandware api password.</param>
        /// <param name="demandwareUserName">Demandware user name.</param>
        /// <param name="demandwareUserPassword">Demandware user password.</param>
        /// <param name="ebayClientId">Application ID (AppID)..</param>
        /// <param name="ebayClientSecret">Shared Secret from eBay application.</param>
        /// <param name="ebayRuname">The RuName value that eBay assigns to your application..</param>
        /// <param name="ebayAccessToken">Used to authenticate API requests..</param>
        /// <param name="ebayRefreshToken">Used to renew the access token..</param>
        /// <param name="ebayEnvironment">eBay environment (default to &quot;production&quot;).</param>
        /// <param name="ebaySiteId">eBay global ID (default to 0).</param>
        /// <param name="walmartClientId">Walmart client ID. For the region &#39;ca&#39; use Consumer ID.</param>
        /// <param name="walmartClientSecret">Walmart client secret. For the region &#39;ca&#39; use Private Key.</param>
        /// <param name="walmartEnvironment">Walmart environment (default to &quot;production&quot;).</param>
        /// <param name="walmartChannelType">Walmart WM_CONSUMER.CHANNEL.TYPE header.</param>
        /// <param name="walmartRegion">Walmart region (default to &quot;us&quot;).</param>
        /// <param name="ecwidAcessToken">Access token authorizing the app to access resources on behalf of a user.</param>
        /// <param name="ecwidStoreId">Store Id.</param>
        /// <param name="lazadaAppId">Lazada App ID.</param>
        /// <param name="lazadaAppSecret">Lazada App Secret.</param>
        /// <param name="lazadaRefreshToken">Lazada Refresh Token.</param>
        /// <param name="lazadaRegion">Lazada API endpoint Region.</param>
        /// <param name="lightspeedApiKey">LightSpeed api key.</param>
        /// <param name="lightspeedApiSecret">LightSpeed api secret.</param>
        /// <param name="etsyKeystring">Etsy keystring.</param>
        /// <param name="etsySharedSecret">Etsy shared secret.</param>
        /// <param name="etsyAccessToken">Access token authorizing the app to access resources on behalf of a user.</param>
        /// <param name="etsyTokenSecret">Secret token authorizing the app to access resources on behalf of a user.</param>
        /// <param name="etsyClientId">Etsy Client Id.</param>
        /// <param name="etsyRefreshToken">Etsy Refresh token.</param>
        /// <param name="facebookAppId">Facebook App ID.</param>
        /// <param name="facebookAppSecret">Facebook App Secret.</param>
        /// <param name="facebookAccessToken">Facebook Access Token.</param>
        /// <param name="facebookBusinessId">Facebook Business ID.</param>
        /// <param name="netoApiKey">Neto API Key.</param>
        /// <param name="netoApiUsername">Neto User Name.</param>
        /// <param name="shoplineAccessToken">Shopline APP Key.</param>
        /// <param name="shoplineAppKey">Shopline APP Key.</param>
        /// <param name="shoplineAppSecret">Shopline App Secret.</param>
        /// <param name="shoplineSharedSecret">Shopline Shared Secret.</param>
        /// <param name="shopifyAccessToken">Access token authorizing the app to access resources on behalf of a user.</param>
        /// <param name="shopifyApiKey">Shopify API Key.</param>
        /// <param name="shopifyApiPassword">Shopify API Password.</param>
        /// <param name="shopifySharedSecret">Shared secret.</param>
        /// <param name="shopeePartnerId">Shopee Partner ID.</param>
        /// <param name="shopeePartnerKey">Shopee Partner Key.</param>
        /// <param name="shopeeShopId">Shopee SHOP ID.</param>
        /// <param name="shopeeRefreshToken">Shopee Refresh Token.</param>
        /// <param name="shopeeRegion">Shopee API endpoint Region. Use for Chinese Mainland or Brazil..</param>
        /// <param name="shopeeEnvironment">Shopee Environment (default to &quot;production&quot;).</param>
        /// <param name="shoplazzaAccessToken">Access token authorizing the app to access resources on behalf of a user.</param>
        /// <param name="shoplazzaSharedSecret">Shared secret.</param>
        /// <param name="shopwareAccessKey">Shopware access key.</param>
        /// <param name="shopwareApiKey">Shopware api key.</param>
        /// <param name="shopwareApiSecret">Shopware client secret access key.</param>
        /// <param name="mivaAccessToken">Miva access token.</param>
        /// <param name="mivaSignature">Miva signature.</param>
        /// <param name="tiendanubeUserId">Tiendanube User ID.</param>
        /// <param name="tiendanubeAccessToken">Tiendanube Access Token.</param>
        /// <param name="tiendanubeClientSecret">Tiendanube Client Secret.</param>
        /// <param name="volusionLogin">It&#39;s a Volusion account for which API is enabled.</param>
        /// <param name="volusionPassword">Volusion API Password.</param>
        /// <param name="hybrisClientId">Omni Commerce Connector Client ID.</param>
        /// <param name="hybrisClientSecret">Omni Commerce Connector Client Secret.</param>
        /// <param name="hybrisUsername">User Name.</param>
        /// <param name="hybrisPassword">User password.</param>
        /// <param name="hybrisWebsites">Websites to stores mapping data.</param>
        /// <param name="squareClientId">Square (Weebly) Client ID.</param>
        /// <param name="squareClientSecret">Square (Weebly) Client Secret.</param>
        /// <param name="squareRefreshToken">Square (Weebly) Refresh Token.</param>
        /// <param name="squarespaceApiKey">Squarespace API Key.</param>
        /// <param name="squarespaceClientId">Squarespace Connector Client ID.</param>
        /// <param name="squarespaceClientSecret">Squarespace Connector Client Secret.</param>
        /// <param name="squarespaceAccessToken">Squarespace access token.</param>
        /// <param name="squarespaceRefreshToken">Squarespace refresh token.</param>
        /// <param name="commercehqApiKey">CommerceHQ api key.</param>
        /// <param name="commercehqApiPassword">CommerceHQ api password.</param>
        /// <param name="wcConsumerKey">Woocommerce consumer key.</param>
        /// <param name="wcConsumerSecret">Woocommerce consumer secret.</param>
        /// <param name="magentoConsumerKey">Magento Consumer Key.</param>
        /// <param name="magentoConsumerSecret">Magento Consumer Secret.</param>
        /// <param name="magentoAccessToken">Magento Access Token.</param>
        /// <param name="magentoTokenSecret">Magento Token Secret.</param>
        /// <param name="prestashopWebserviceKey">Prestashop webservice key.</param>
        /// <param name="wixAppId">Wix App ID (required).</param>
        /// <param name="wixAppSecretKey">Wix App Secret Key (required).</param>
        /// <param name="wixInstanceId">Wix Instance ID.</param>
        /// <param name="wixRefreshToken">Wix refresh token.</param>
        /// <param name="mercadoLibreAppId">Mercado Libre App ID.</param>
        /// <param name="mercadoLibreAppSecretKey">Mercado Libre App Secret Key.</param>
        /// <param name="mercadoLibreRefreshToken">Mercado Libre Refresh Token.</param>
        /// <param name="zidClientId">Zid Client ID.</param>
        /// <param name="zidClientSecret">Zid Client Secret.</param>
        /// <param name="zidAccessToken">Zid Access Token.</param>
        /// <param name="zidAuthorization">Zid Authorization.</param>
        /// <param name="zidRefreshToken">Zid refresh token.</param>
        /// <param name="flipkartClientId">Flipkart Client ID.</param>
        /// <param name="flipkartClientSecret">Flipkart Client Secret.</param>
        /// <param name="allegroClientId">Allegro Client ID.</param>
        /// <param name="allegroClientSecret">Allegro Client Secret.</param>
        /// <param name="allegroAccessToken">Allegro Access Token.</param>
        /// <param name="allegroRefreshToken">Allegro Refresh Token.</param>
        /// <param name="allegroEnvironment">Allegro Environment (default to &quot;production&quot;).</param>
        /// <param name="zohoClientId">Zoho Client ID.</param>
        /// <param name="zohoClientSecret">Zoho Client Secret.</param>
        /// <param name="zohoRefreshToken">Zoho Refresh Token.</param>
        /// <param name="zohoRegion">Zoho API endpoint Region.</param>
        /// <param name="ottoClientId">Otto Client ID.</param>
        /// <param name="ottoClientSecret">Otto Client Secret.</param>
        /// <param name="ottoAppId">Otto App ID.</param>
        /// <param name="ottoRefreshToken">Otto Refresh Token.</param>
        /// <param name="ottoEnvironment">Otto Environment (default to &quot;production&quot;).</param>
        /// <param name="ottoAccessToken">Otto Access Token.</param>
        /// <param name="tiktokshopAppKey">TikTok Shop App Key.</param>
        /// <param name="tiktokshopAppSecret">TikTok Shop App Secret.</param>
        /// <param name="tiktokshopRefreshToken">TikTok Shop Refresh Token.</param>
        /// <param name="tiktokshopAccessToken">TikTok Shop Access Token.</param>
        /// <param name="sallaClientId">Salla Client ID.</param>
        /// <param name="sallaClientSecret">Salla Client Secret.</param>
        /// <param name="sallaRefreshToken">Salla Refresh Token.</param>
        /// <param name="sallaAccessToken">Salla Access Token.</param>
        /// <param name="temuAppKey">Temu App Key.</param>
        /// <param name="temuAppSecret">Temu App Secret.</param>
        /// <param name="temuAccessToken">Temu Access Token (required).</param>
        /// <param name="temuRegion">Temu API endpoint Region. (default to &quot;US&quot;).</param>
        public AccountCartAdd(CartIdEnum cartId = default(CartIdEnum), string storeUrl = default(string), string bridgeUrl = default(string), string storeRoot = default(string), string storeKey = default(string), bool validateVersion = false, bool verify = true, string dbTablesPrefix = default(string), string userAgent = default(string), string ftpHost = default(string), string ftpUser = default(string), string ftpPassword = default(string), int ftpPort = default(int), string ftpStoreDir = default(string), string var3dcartPrivateKey = default(string), string var3dcartAccessToken = default(string), string var3dcartapiApiKey = default(string), string amazonSpClientId = default(string), string amazonSpClientSecret = default(string), string amazonSpRefreshToken = default(string), string amazonSpAwsRegion = default(string), string amazonSpApiEnvironment = @"production", string amazonSellerId = default(string), string aspdotnetstorefrontApiUser = default(string), string aspdotnetstorefrontApiPass = default(string), string bigcommerceapiAdminAccount = default(string), string bigcommerceapiApiPath = default(string), string bigcommerceapiApiKey = default(string), string bigcommerceapiClientId = default(string), string bigcommerceapiAccessToken = default(string), string bigcommerceapiContext = default(string), string bolApiKey = default(string), string bolApiSecret = default(string), int bolRetailerId = default(int), string bigcartelUserName = default(string), string bigcartelPassword = default(string), string demandwareClientId = default(string), string demandwareApiPassword = default(string), string demandwareUserName = default(string), string demandwareUserPassword = default(string), string ebayClientId = default(string), string ebayClientSecret = default(string), string ebayRuname = default(string), string ebayAccessToken = default(string), string ebayRefreshToken = default(string), string ebayEnvironment = @"production", int ebaySiteId = 0, string walmartClientId = default(string), string walmartClientSecret = default(string), string walmartEnvironment = @"production", string walmartChannelType = default(string), string walmartRegion = @"us", string ecwidAcessToken = default(string), string ecwidStoreId = default(string), string lazadaAppId = default(string), string lazadaAppSecret = default(string), string lazadaRefreshToken = default(string), string lazadaRegion = default(string), string lightspeedApiKey = default(string), string lightspeedApiSecret = default(string), string etsyKeystring = default(string), string etsySharedSecret = default(string), string etsyAccessToken = default(string), string etsyTokenSecret = default(string), string etsyClientId = default(string), string etsyRefreshToken = default(string), string facebookAppId = default(string), string facebookAppSecret = default(string), string facebookAccessToken = default(string), string facebookBusinessId = default(string), string netoApiKey = default(string), string netoApiUsername = default(string), string shoplineAccessToken = default(string), string shoplineAppKey = default(string), string shoplineAppSecret = default(string), string shoplineSharedSecret = default(string), string shopifyAccessToken = default(string), string shopifyApiKey = default(string), string shopifyApiPassword = default(string), string shopifySharedSecret = default(string), string shopeePartnerId = default(string), string shopeePartnerKey = default(string), string shopeeShopId = default(string), string shopeeRefreshToken = default(string), string shopeeRegion = default(string), string shopeeEnvironment = @"production", string shoplazzaAccessToken = default(string), string shoplazzaSharedSecret = default(string), string shopwareAccessKey = default(string), string shopwareApiKey = default(string), string shopwareApiSecret = default(string), string mivaAccessToken = default(string), string mivaSignature = default(string), int tiendanubeUserId = default(int), string tiendanubeAccessToken = default(string), string tiendanubeClientSecret = default(string), string volusionLogin = default(string), string volusionPassword = default(string), string hybrisClientId = default(string), string hybrisClientSecret = default(string), string hybrisUsername = default(string), string hybrisPassword = default(string), List<AccountCartAddHybrisWebsitesInner> hybrisWebsites = default(List<AccountCartAddHybrisWebsitesInner>), string squareClientId = default(string), string squareClientSecret = default(string), string squareRefreshToken = default(string), string squarespaceApiKey = default(string), string squarespaceClientId = default(string), string squarespaceClientSecret = default(string), string squarespaceAccessToken = default(string), string squarespaceRefreshToken = default(string), string commercehqApiKey = default(string), string commercehqApiPassword = default(string), string wcConsumerKey = default(string), string wcConsumerSecret = default(string), string magentoConsumerKey = default(string), string magentoConsumerSecret = default(string), string magentoAccessToken = default(string), string magentoTokenSecret = default(string), string prestashopWebserviceKey = default(string), string wixAppId = default(string), string wixAppSecretKey = default(string), string wixInstanceId = default(string), string wixRefreshToken = default(string), string mercadoLibreAppId = default(string), string mercadoLibreAppSecretKey = default(string), string mercadoLibreRefreshToken = default(string), int zidClientId = default(int), string zidClientSecret = default(string), string zidAccessToken = default(string), string zidAuthorization = default(string), string zidRefreshToken = default(string), string flipkartClientId = default(string), string flipkartClientSecret = default(string), string allegroClientId = default(string), string allegroClientSecret = default(string), string allegroAccessToken = default(string), string allegroRefreshToken = default(string), string allegroEnvironment = @"production", string zohoClientId = default(string), string zohoClientSecret = default(string), string zohoRefreshToken = default(string), string zohoRegion = default(string), string ottoClientId = default(string), string ottoClientSecret = default(string), string ottoAppId = default(string), string ottoRefreshToken = default(string), string ottoEnvironment = @"production", string ottoAccessToken = default(string), string tiktokshopAppKey = default(string), string tiktokshopAppSecret = default(string), string tiktokshopRefreshToken = default(string), string tiktokshopAccessToken = default(string), string sallaClientId = default(string), string sallaClientSecret = default(string), string sallaRefreshToken = default(string), string sallaAccessToken = default(string), string temuAppKey = default(string), string temuAppSecret = default(string), string temuAccessToken = default(string), string temuRegion = @"US")
        {
            this.CartId = cartId;
            // to ensure "bigcartelUserName" is required (not null)
            if (bigcartelUserName == null)
            {
                throw new ArgumentNullException("bigcartelUserName is a required property for AccountCartAdd and cannot be null");
            }
            this.BigcartelUserName = bigcartelUserName;
            // to ensure "bigcartelPassword" is required (not null)
            if (bigcartelPassword == null)
            {
                throw new ArgumentNullException("bigcartelPassword is a required property for AccountCartAdd and cannot be null");
            }
            this.BigcartelPassword = bigcartelPassword;
            // to ensure "wixAppId" is required (not null)
            if (wixAppId == null)
            {
                throw new ArgumentNullException("wixAppId is a required property for AccountCartAdd and cannot be null");
            }
            this.WixAppId = wixAppId;
            // to ensure "wixAppSecretKey" is required (not null)
            if (wixAppSecretKey == null)
            {
                throw new ArgumentNullException("wixAppSecretKey is a required property for AccountCartAdd and cannot be null");
            }
            this.WixAppSecretKey = wixAppSecretKey;
            // to ensure "temuAccessToken" is required (not null)
            if (temuAccessToken == null)
            {
                throw new ArgumentNullException("temuAccessToken is a required property for AccountCartAdd and cannot be null");
            }
            this.TemuAccessToken = temuAccessToken;
            this.StoreUrl = storeUrl;
            this.BridgeUrl = bridgeUrl;
            this.StoreRoot = storeRoot;
            this.StoreKey = storeKey;
            this.ValidateVersion = validateVersion;
            this.Verify = verify;
            this.DbTablesPrefix = dbTablesPrefix;
            this.UserAgent = userAgent;
            this.FtpHost = ftpHost;
            this.FtpUser = ftpUser;
            this.FtpPassword = ftpPassword;
            this.FtpPort = ftpPort;
            this.FtpStoreDir = ftpStoreDir;
            this.Var3dcartPrivateKey = var3dcartPrivateKey;
            this.Var3dcartAccessToken = var3dcartAccessToken;
            this.Var3dcartapiApiKey = var3dcartapiApiKey;
            this.AmazonSpClientId = amazonSpClientId;
            this.AmazonSpClientSecret = amazonSpClientSecret;
            this.AmazonSpRefreshToken = amazonSpRefreshToken;
            this.AmazonSpAwsRegion = amazonSpAwsRegion;
            // use default value if no "amazonSpApiEnvironment" provided
            this.AmazonSpApiEnvironment = amazonSpApiEnvironment ?? @"production";
            this.AmazonSellerId = amazonSellerId;
            this.AspdotnetstorefrontApiUser = aspdotnetstorefrontApiUser;
            this.AspdotnetstorefrontApiPass = aspdotnetstorefrontApiPass;
            this.BigcommerceapiAdminAccount = bigcommerceapiAdminAccount;
            this.BigcommerceapiApiPath = bigcommerceapiApiPath;
            this.BigcommerceapiApiKey = bigcommerceapiApiKey;
            this.BigcommerceapiClientId = bigcommerceapiClientId;
            this.BigcommerceapiAccessToken = bigcommerceapiAccessToken;
            this.BigcommerceapiContext = bigcommerceapiContext;
            this.BolApiKey = bolApiKey;
            this.BolApiSecret = bolApiSecret;
            this.BolRetailerId = bolRetailerId;
            this.DemandwareClientId = demandwareClientId;
            this.DemandwareApiPassword = demandwareApiPassword;
            this.DemandwareUserName = demandwareUserName;
            this.DemandwareUserPassword = demandwareUserPassword;
            this.EbayClientId = ebayClientId;
            this.EbayClientSecret = ebayClientSecret;
            this.EbayRuname = ebayRuname;
            this.EbayAccessToken = ebayAccessToken;
            this.EbayRefreshToken = ebayRefreshToken;
            // use default value if no "ebayEnvironment" provided
            this.EbayEnvironment = ebayEnvironment ?? @"production";
            this.EbaySiteId = ebaySiteId;
            this.WalmartClientId = walmartClientId;
            this.WalmartClientSecret = walmartClientSecret;
            // use default value if no "walmartEnvironment" provided
            this.WalmartEnvironment = walmartEnvironment ?? @"production";
            this.WalmartChannelType = walmartChannelType;
            // use default value if no "walmartRegion" provided
            this.WalmartRegion = walmartRegion ?? @"us";
            this.EcwidAcessToken = ecwidAcessToken;
            this.EcwidStoreId = ecwidStoreId;
            this.LazadaAppId = lazadaAppId;
            this.LazadaAppSecret = lazadaAppSecret;
            this.LazadaRefreshToken = lazadaRefreshToken;
            this.LazadaRegion = lazadaRegion;
            this.LightspeedApiKey = lightspeedApiKey;
            this.LightspeedApiSecret = lightspeedApiSecret;
            this.EtsyKeystring = etsyKeystring;
            this.EtsySharedSecret = etsySharedSecret;
            this.EtsyAccessToken = etsyAccessToken;
            this.EtsyTokenSecret = etsyTokenSecret;
            this.EtsyClientId = etsyClientId;
            this.EtsyRefreshToken = etsyRefreshToken;
            this.FacebookAppId = facebookAppId;
            this.FacebookAppSecret = facebookAppSecret;
            this.FacebookAccessToken = facebookAccessToken;
            this.FacebookBusinessId = facebookBusinessId;
            this.NetoApiKey = netoApiKey;
            this.NetoApiUsername = netoApiUsername;
            this.ShoplineAccessToken = shoplineAccessToken;
            this.ShoplineAppKey = shoplineAppKey;
            this.ShoplineAppSecret = shoplineAppSecret;
            this.ShoplineSharedSecret = shoplineSharedSecret;
            this.ShopifyAccessToken = shopifyAccessToken;
            this.ShopifyApiKey = shopifyApiKey;
            this.ShopifyApiPassword = shopifyApiPassword;
            this.ShopifySharedSecret = shopifySharedSecret;
            this.ShopeePartnerId = shopeePartnerId;
            this.ShopeePartnerKey = shopeePartnerKey;
            this.ShopeeShopId = shopeeShopId;
            this.ShopeeRefreshToken = shopeeRefreshToken;
            this.ShopeeRegion = shopeeRegion;
            // use default value if no "shopeeEnvironment" provided
            this.ShopeeEnvironment = shopeeEnvironment ?? @"production";
            this.ShoplazzaAccessToken = shoplazzaAccessToken;
            this.ShoplazzaSharedSecret = shoplazzaSharedSecret;
            this.ShopwareAccessKey = shopwareAccessKey;
            this.ShopwareApiKey = shopwareApiKey;
            this.ShopwareApiSecret = shopwareApiSecret;
            this.MivaAccessToken = mivaAccessToken;
            this.MivaSignature = mivaSignature;
            this.TiendanubeUserId = tiendanubeUserId;
            this.TiendanubeAccessToken = tiendanubeAccessToken;
            this.TiendanubeClientSecret = tiendanubeClientSecret;
            this.VolusionLogin = volusionLogin;
            this.VolusionPassword = volusionPassword;
            this.HybrisClientId = hybrisClientId;
            this.HybrisClientSecret = hybrisClientSecret;
            this.HybrisUsername = hybrisUsername;
            this.HybrisPassword = hybrisPassword;
            this.HybrisWebsites = hybrisWebsites;
            this.SquareClientId = squareClientId;
            this.SquareClientSecret = squareClientSecret;
            this.SquareRefreshToken = squareRefreshToken;
            this.SquarespaceApiKey = squarespaceApiKey;
            this.SquarespaceClientId = squarespaceClientId;
            this.SquarespaceClientSecret = squarespaceClientSecret;
            this.SquarespaceAccessToken = squarespaceAccessToken;
            this.SquarespaceRefreshToken = squarespaceRefreshToken;
            this.CommercehqApiKey = commercehqApiKey;
            this.CommercehqApiPassword = commercehqApiPassword;
            this.WcConsumerKey = wcConsumerKey;
            this.WcConsumerSecret = wcConsumerSecret;
            this.MagentoConsumerKey = magentoConsumerKey;
            this.MagentoConsumerSecret = magentoConsumerSecret;
            this.MagentoAccessToken = magentoAccessToken;
            this.MagentoTokenSecret = magentoTokenSecret;
            this.PrestashopWebserviceKey = prestashopWebserviceKey;
            this.WixInstanceId = wixInstanceId;
            this.WixRefreshToken = wixRefreshToken;
            this.MercadoLibreAppId = mercadoLibreAppId;
            this.MercadoLibreAppSecretKey = mercadoLibreAppSecretKey;
            this.MercadoLibreRefreshToken = mercadoLibreRefreshToken;
            this.ZidClientId = zidClientId;
            this.ZidClientSecret = zidClientSecret;
            this.ZidAccessToken = zidAccessToken;
            this.ZidAuthorization = zidAuthorization;
            this.ZidRefreshToken = zidRefreshToken;
            this.FlipkartClientId = flipkartClientId;
            this.FlipkartClientSecret = flipkartClientSecret;
            this.AllegroClientId = allegroClientId;
            this.AllegroClientSecret = allegroClientSecret;
            this.AllegroAccessToken = allegroAccessToken;
            this.AllegroRefreshToken = allegroRefreshToken;
            // use default value if no "allegroEnvironment" provided
            this.AllegroEnvironment = allegroEnvironment ?? @"production";
            this.ZohoClientId = zohoClientId;
            this.ZohoClientSecret = zohoClientSecret;
            this.ZohoRefreshToken = zohoRefreshToken;
            this.ZohoRegion = zohoRegion;
            this.OttoClientId = ottoClientId;
            this.OttoClientSecret = ottoClientSecret;
            this.OttoAppId = ottoAppId;
            this.OttoRefreshToken = ottoRefreshToken;
            // use default value if no "ottoEnvironment" provided
            this.OttoEnvironment = ottoEnvironment ?? @"production";
            this.OttoAccessToken = ottoAccessToken;
            this.TiktokshopAppKey = tiktokshopAppKey;
            this.TiktokshopAppSecret = tiktokshopAppSecret;
            this.TiktokshopRefreshToken = tiktokshopRefreshToken;
            this.TiktokshopAccessToken = tiktokshopAccessToken;
            this.SallaClientId = sallaClientId;
            this.SallaClientSecret = sallaClientSecret;
            this.SallaRefreshToken = sallaRefreshToken;
            this.SallaAccessToken = sallaAccessToken;
            this.TemuAppKey = temuAppKey;
            this.TemuAppSecret = temuAppSecret;
            // use default value if no "temuRegion" provided
            this.TemuRegion = temuRegion ?? @"US";
        }

        /// <summary>
        /// A web address of a store that you would like to connect to API2Cart
        /// </summary>
        /// <value>A web address of a store that you would like to connect to API2Cart</value>
        /*
        <example>http://mystore.com</example>
        */
        [DataMember(Name = "store_url", EmitDefaultValue = false)]
        public string StoreUrl { get; set; }

        /// <summary>
        /// This parameter allows to set up store with custom bridge url (also you must use store_root parameter if a bridge folder is not in the root folder of the store)
        /// </summary>
        /// <value>This parameter allows to set up store with custom bridge url (also you must use store_root parameter if a bridge folder is not in the root folder of the store)</value>
        /*
        <example>https://your-store.com/custom/bridge/path/bridge.php</example>
        */
        [DataMember(Name = "bridge_url", EmitDefaultValue = false)]
        public string BridgeUrl { get; set; }

        /// <summary>
        /// Absolute path to the store root directory (used with \&quot;bridge_url\&quot; parameter)
        /// </summary>
        /// <value>Absolute path to the store root directory (used with \&quot;bridge_url\&quot; parameter)</value>
        /*
        <example>/home/www/stores/magento1922</example>
        */
        [DataMember(Name = "store_root", EmitDefaultValue = false)]
        public string StoreRoot { get; set; }

        /// <summary>
        /// Set this parameter if bridge is already uploaded to store
        /// </summary>
        /// <value>Set this parameter if bridge is already uploaded to store</value>
        /*
        <example>ab37fc230bc5df63a5be1b11220949be</example>
        */
        [DataMember(Name = "store_key", EmitDefaultValue = false)]
        public string StoreKey { get; set; }

        /// <summary>
        /// Specify if api2cart should validate cart version
        /// </summary>
        /// <value>Specify if api2cart should validate cart version</value>
        /*
        <example>true</example>
        */
        [DataMember(Name = "validate_version", EmitDefaultValue = true)]
        public bool ValidateVersion { get; set; }

        /// <summary>
        /// Enables or disables cart&#39;s verification
        /// </summary>
        /// <value>Enables or disables cart&#39;s verification</value>
        /*
        <example>false</example>
        */
        [DataMember(Name = "verify", EmitDefaultValue = true)]
        public bool Verify { get; set; }

        /// <summary>
        /// DB tables prefix
        /// </summary>
        /// <value>DB tables prefix</value>
        /*
        <example>oc_</example>
        */
        [DataMember(Name = "db_tables_prefix", EmitDefaultValue = false)]
        public string DbTablesPrefix { get; set; }

        /// <summary>
        /// This parameter allows you to set your custom user agent, which will be used in requests to the store. Please use it cautiously, as the store&#39;s firewall may block specific values.
        /// </summary>
        /// <value>This parameter allows you to set your custom user agent, which will be used in requests to the store. Please use it cautiously, as the store&#39;s firewall may block specific values.</value>
        /*
        <example>Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0</example>
        */
        [DataMember(Name = "user_agent", EmitDefaultValue = false)]
        public string UserAgent { get; set; }

        /// <summary>
        /// FTP connection host
        /// </summary>
        /// <value>FTP connection host</value>
        /*
        <example>ftp.mystore.com</example>
        */
        [DataMember(Name = "ftp_host", EmitDefaultValue = false)]
        public string FtpHost { get; set; }

        /// <summary>
        /// FTP User
        /// </summary>
        /// <value>FTP User</value>
        /*
        <example>user</example>
        */
        [DataMember(Name = "ftp_user", EmitDefaultValue = false)]
        public string FtpUser { get; set; }

        /// <summary>
        /// FTP Password
        /// </summary>
        /// <value>FTP Password</value>
        /*
        <example>G4}q215D4_H9$Be</example>
        */
        [DataMember(Name = "ftp_password", EmitDefaultValue = false)]
        public string FtpPassword { get; set; }

        /// <summary>
        /// FTP Port
        /// </summary>
        /// <value>FTP Port</value>
        /*
        <example>22</example>
        */
        [DataMember(Name = "ftp_port", EmitDefaultValue = false)]
        public int FtpPort { get; set; }

        /// <summary>
        /// FTP Store dir
        /// </summary>
        /// <value>FTP Store dir</value>
        /*
        <example>/public</example>
        */
        [DataMember(Name = "ftp_store_dir", EmitDefaultValue = false)]
        public string FtpStoreDir { get; set; }

        /// <summary>
        /// 3DCart Private Key
        /// </summary>
        /// <value>3DCart Private Key</value>
        /*
        <example>7dba81f90bdbe25e7000e73214ca51b</example>
        */
        [DataMember(Name = "3dcart_private_key", EmitDefaultValue = false)]
        public string Var3dcartPrivateKey { get; set; }

        /// <summary>
        /// 3DCart Token
        /// </summary>
        /// <value>3DCart Token</value>
        /*
        <example>4Grr_ZCLNNoSUuhAjesKuchxo9SL</example>
        */
        [DataMember(Name = "3dcart_access_token", EmitDefaultValue = false)]
        public string Var3dcartAccessToken { get; set; }

        /// <summary>
        /// 3DCart API Key
        /// </summary>
        /// <value>3DCart API Key</value>
        /*
        <example>82cc921c6a5c67082cc921c6a5c6707e1d6e6862ba3201a</example>
        */
        [DataMember(Name = "3dcartapi_api_key", EmitDefaultValue = false)]
        public string Var3dcartapiApiKey { get; set; }

        /// <summary>
        /// Amazon SP API app client id
        /// </summary>
        /// <value>Amazon SP API app client id</value>
        /*
        <example>amzn1.application-oa2-client.11e000e1f47d4998aca3733716d3b5a4</example>
        */
        [DataMember(Name = "amazon_sp_client_id", EmitDefaultValue = false)]
        public string AmazonSpClientId { get; set; }

        /// <summary>
        /// Amazon SP API app client secret
        /// </summary>
        /// <value>Amazon SP API app client secret</value>
        /*
        <example>2c987428209f235443221255bde064f4bdf8a65165a80f5d22760a83cb</example>
        */
        [DataMember(Name = "amazon_sp_client_secret", EmitDefaultValue = false)]
        public string AmazonSpClientSecret { get; set; }

        /// <summary>
        /// Amazon SP API OAuth refresh token
        /// </summary>
        /// <value>Amazon SP API OAuth refresh token</value>
        /*
        <example>Atzr|IwEBIPUI-bwRTdDgKNQ_g56C30wGqymtx30c9MdDC7Emwmojhs20k5BBG2hHtJiGZ_7OfG7khd1RuQr6KEst4qyWbo_eXi5S_T_VOxzJUuksG1cFOGFpFK-cnhReNzAeZIpZeJT7_ROy1csEFlQfC8FJS3bsbSkkbTz2ZcTN7_7ey0HVlhyfFizgROeSeOI24Wjs9l_KKzZW0jvi_oC2cxlIcyknnHLK6KMNz2rTXqQJWRtlK9xPJDdbcUa5STA8MQru91cxNBpSkZN_cq9OOELhbsIGKD75y7nZ3yJU4uHQC_9iBQQoFm0biKgi-kEQwOhwws8</example>
        */
        [DataMember(Name = "amazon_sp_refresh_token", EmitDefaultValue = false)]
        public string AmazonSpRefreshToken { get; set; }

        /// <summary>
        /// Amazon AWS Region
        /// </summary>
        /// <value>Amazon AWS Region</value>
        /*
        <example>us-east-1</example>
        */
        [DataMember(Name = "amazon_sp_aws_region", EmitDefaultValue = false)]
        public string AmazonSpAwsRegion { get; set; }

        /// <summary>
        /// Amazon SP API environment
        /// </summary>
        /// <value>Amazon SP API environment</value>
        /*
        <example>sandbox</example>
        */
        [DataMember(Name = "amazon_sp_api_environment", EmitDefaultValue = false)]
        public string AmazonSpApiEnvironment { get; set; }

        /// <summary>
        /// Amazon Seller ID (Merchant token)
        /// </summary>
        /// <value>Amazon Seller ID (Merchant token)</value>
        /*
        <example>13P636B2M1N4WR</example>
        */
        [DataMember(Name = "amazon_seller_id", EmitDefaultValue = false)]
        public string AmazonSellerId { get; set; }

        /// <summary>
        /// It&#39;s a AspDotNetStorefront account for which API is available
        /// </summary>
        /// <value>It&#39;s a AspDotNetStorefront account for which API is available</value>
        /*
        <example>admin</example>
        */
        [DataMember(Name = "aspdotnetstorefront_api_user", EmitDefaultValue = false)]
        public string AspdotnetstorefrontApiUser { get; set; }

        /// <summary>
        /// AspDotNetStorefront API Password
        /// </summary>
        /// <value>AspDotNetStorefront API Password</value>
        /*
        <example>f6471ef78f72b41849a8b8b67791b0b5</example>
        */
        [DataMember(Name = "aspdotnetstorefront_api_pass", EmitDefaultValue = false)]
        public string AspdotnetstorefrontApiPass { get; set; }

        /// <summary>
        /// It&#39;s a BigCommerce account for which API is enabled
        /// </summary>
        /// <value>It&#39;s a BigCommerce account for which API is enabled</value>
        /*
        <example>admin</example>
        */
        [DataMember(Name = "bigcommerceapi_admin_account", EmitDefaultValue = false)]
        public string BigcommerceapiAdminAccount { get; set; }

        /// <summary>
        /// BigCommerce API URL
        /// </summary>
        /// <value>BigCommerce API URL</value>
        /*
        <example>http://mystore.bigcommerce.com/api/v1</example>
        */
        [DataMember(Name = "bigcommerceapi_api_path", EmitDefaultValue = false)]
        public string BigcommerceapiApiPath { get; set; }

        /// <summary>
        /// Bigcommerce API Key
        /// </summary>
        /// <value>Bigcommerce API Key</value>
        /*
        <example>6b89704cd75738cb0f9f6468d5462aba</example>
        */
        [DataMember(Name = "bigcommerceapi_api_key", EmitDefaultValue = false)]
        public string BigcommerceapiApiKey { get; set; }

        /// <summary>
        /// Client ID of the requesting app
        /// </summary>
        /// <value>Client ID of the requesting app</value>
        /*
        <example>p1r37bt131z86675nofv9xmhietoe4t</example>
        */
        [DataMember(Name = "bigcommerceapi_client_id", EmitDefaultValue = false)]
        public string BigcommerceapiClientId { get; set; }

        /// <summary>
        /// Access token authorizing the app to access resources on behalf of a user
        /// </summary>
        /// <value>Access token authorizing the app to access resources on behalf of a user</value>
        /*
        <example>igse8e4rdmzkxdi937qe69d59en1imw</example>
        */
        [DataMember(Name = "bigcommerceapi_access_token", EmitDefaultValue = false)]
        public string BigcommerceapiAccessToken { get; set; }

        /// <summary>
        /// API Path section unique to the store
        /// </summary>
        /// <value>API Path section unique to the store</value>
        /*
        <example>stores/etplnf8o8v</example>
        */
        [DataMember(Name = "bigcommerceapi_context", EmitDefaultValue = false)]
        public string BigcommerceapiContext { get; set; }

        /// <summary>
        /// Bol API Key
        /// </summary>
        /// <value>Bol API Key</value>
        /*
        <example>51369628-feee-11ed-be56-0242ac120002</example>
        */
        [DataMember(Name = "bol_api_key", EmitDefaultValue = false)]
        public string BolApiKey { get; set; }

        /// <summary>
        /// Bol API Secret
        /// </summary>
        /// <value>Bol API Secret</value>
        /*
        <example>8fGzEsbEP5z2MNZubmIil87m-sWzTkj?KDQKrmzmU!fA6aAUNMdKRp7LMWHwE!G37UMfnWByHBGSXJHkAG?QcuYTO2uklv4idIHwUMLHK!OO1yfRlWh!</example>
        */
        [DataMember(Name = "bol_api_secret", EmitDefaultValue = false)]
        public string BolApiSecret { get; set; }

        /// <summary>
        /// Bol Retailer ID
        /// </summary>
        /// <value>Bol Retailer ID</value>
        /*
        <example>145001</example>
        */
        [DataMember(Name = "bol_retailer_id", EmitDefaultValue = false)]
        public int BolRetailerId { get; set; }

        /// <summary>
        /// Subdomain of store
        /// </summary>
        /// <value>Subdomain of store</value>
        /*
        <example>subdomain</example>
        */
        [DataMember(Name = "bigcartel_user_name", IsRequired = true, EmitDefaultValue = true)]
        public string BigcartelUserName { get; set; }

        /// <summary>
        /// BigCartel account password
        /// </summary>
        /// <value>BigCartel account password</value>
        /*
        <example>4GrrZCLNNoSUuhAjesKuchxo9SL</example>
        */
        [DataMember(Name = "bigcartel_password", IsRequired = true, EmitDefaultValue = true)]
        public string BigcartelPassword { get; set; }

        /// <summary>
        /// Demandware client id
        /// </summary>
        /// <value>Demandware client id</value>
        /*
        <example>b849eb85-v8b9-1dw8-9fe2-97e1d6ffc7b0</example>
        */
        [DataMember(Name = "demandware_client_id", EmitDefaultValue = false)]
        public string DemandwareClientId { get; set; }

        /// <summary>
        /// Demandware api password
        /// </summary>
        /// <value>Demandware api password</value>
        /*
        <example>testpassword</example>
        */
        [DataMember(Name = "demandware_api_password", EmitDefaultValue = false)]
        public string DemandwareApiPassword { get; set; }

        /// <summary>
        /// Demandware user name
        /// </summary>
        /// <value>Demandware user name</value>
        /*
        <example>admin</example>
        */
        [DataMember(Name = "demandware_user_name", EmitDefaultValue = false)]
        public string DemandwareUserName { get; set; }

        /// <summary>
        /// Demandware user password
        /// </summary>
        /// <value>Demandware user password</value>
        /*
        <example>12345</example>
        */
        [DataMember(Name = "demandware_user_password", EmitDefaultValue = false)]
        public string DemandwareUserPassword { get; set; }

        /// <summary>
        /// Application ID (AppID).
        /// </summary>
        /// <value>Application ID (AppID).</value>
        /*
        <example>a9psel85v1wy5faeyjw03y0r</example>
        */
        [DataMember(Name = "ebay_client_id", EmitDefaultValue = false)]
        public string EbayClientId { get; set; }

        /// <summary>
        /// Shared Secret from eBay application
        /// </summary>
        /// <value>Shared Secret from eBay application</value>
        /*
        <example>gmz3iz45x2</example>
        */
        [DataMember(Name = "ebay_client_secret", EmitDefaultValue = false)]
        public string EbayClientSecret { get; set; }

        /// <summary>
        /// The RuName value that eBay assigns to your application.
        /// </summary>
        /// <value>The RuName value that eBay assigns to your application.</value>
        /*
        <example>gmz3iz45x2</example>
        */
        [DataMember(Name = "ebay_runame", EmitDefaultValue = false)]
        public string EbayRuname { get; set; }

        /// <summary>
        /// Used to authenticate API requests.
        /// </summary>
        /// <value>Used to authenticate API requests.</value>
        /*
        <example>v^1.1#i ... AjRV4yNjA&#x3D;</example>
        */
        [DataMember(Name = "ebay_access_token", EmitDefaultValue = false)]
        public string EbayAccessToken { get; set; }

        /// <summary>
        /// Used to renew the access token.
        /// </summary>
        /// <value>Used to renew the access token.</value>
        /*
        <example>v^1.1#i ... rAewqVasdA&#x3D;</example>
        */
        [DataMember(Name = "ebay_refresh_token", EmitDefaultValue = false)]
        public string EbayRefreshToken { get; set; }

        /// <summary>
        /// eBay environment
        /// </summary>
        /// <value>eBay environment</value>
        /*
        <example>sandbox</example>
        */
        [DataMember(Name = "ebay_environment", EmitDefaultValue = false)]
        public string EbayEnvironment { get; set; }

        /// <summary>
        /// eBay global ID
        /// </summary>
        /// <value>eBay global ID</value>
        /*
        <example>101</example>
        */
        [DataMember(Name = "ebay_site_id", EmitDefaultValue = false)]
        public int EbaySiteId { get; set; }

        /// <summary>
        /// Walmart client ID. For the region &#39;ca&#39; use Consumer ID
        /// </summary>
        /// <value>Walmart client ID. For the region &#39;ca&#39; use Consumer ID</value>
        /*
        <example>423f6A24-123z-8654-989u-6fa96478289</example>
        */
        [DataMember(Name = "walmart_client_id", EmitDefaultValue = false)]
        public string WalmartClientId { get; set; }

        /// <summary>
        /// Walmart client secret. For the region &#39;ca&#39; use Private Key
        /// </summary>
        /// <value>Walmart client secret. For the region &#39;ca&#39; use Private Key</value>
        /*
        <example>1gf85fea-8974-2648-w12w-rt54284tdf54</example>
        */
        [DataMember(Name = "walmart_client_secret", EmitDefaultValue = false)]
        public string WalmartClientSecret { get; set; }

        /// <summary>
        /// Walmart environment
        /// </summary>
        /// <value>Walmart environment</value>
        /*
        <example>production</example>
        */
        [DataMember(Name = "walmart_environment", EmitDefaultValue = false)]
        public string WalmartEnvironment { get; set; }

        /// <summary>
        /// Walmart WM_CONSUMER.CHANNEL.TYPE header
        /// </summary>
        /// <value>Walmart WM_CONSUMER.CHANNEL.TYPE header</value>
        /*
        <example>0f3e4dd4-0514-4346-b39d-af0e00ea066d</example>
        */
        [DataMember(Name = "walmart_channel_type", EmitDefaultValue = false)]
        public string WalmartChannelType { get; set; }

        /// <summary>
        /// Walmart region
        /// </summary>
        /// <value>Walmart region</value>
        /*
        <example>us</example>
        */
        [DataMember(Name = "walmart_region", EmitDefaultValue = false)]
        public string WalmartRegion { get; set; }

        /// <summary>
        /// Access token authorizing the app to access resources on behalf of a user
        /// </summary>
        /// <value>Access token authorizing the app to access resources on behalf of a user</value>
        /*
        <example>igse8e4rdmzkxdi937qe69d59en1imw</example>
        */
        [DataMember(Name = "ecwid_acess_token", EmitDefaultValue = false)]
        public string EcwidAcessToken { get; set; }

        /// <summary>
        /// Store Id
        /// </summary>
        /// <value>Store Id</value>
        /*
        <example>1</example>
        */
        [DataMember(Name = "ecwid_store_id", EmitDefaultValue = false)]
        public string EcwidStoreId { get; set; }

        /// <summary>
        /// Lazada App ID
        /// </summary>
        /// <value>Lazada App ID</value>
        /*
        <example>112577</example>
        */
        [DataMember(Name = "lazada_app_id", EmitDefaultValue = false)]
        public string LazadaAppId { get; set; }

        /// <summary>
        /// Lazada App Secret
        /// </summary>
        /// <value>Lazada App Secret</value>
        /*
        <example>er33raICJ79Q5b0EsR9stmRnjE9XQ2WH</example>
        */
        [DataMember(Name = "lazada_app_secret", EmitDefaultValue = false)]
        public string LazadaAppSecret { get; set; }

        /// <summary>
        /// Lazada Refresh Token
        /// </summary>
        /// <value>Lazada Refresh Token</value>
        /*
        <example>EAAPP06rM2n8BO4mZBuMPnu9zS0MaMbN7ue8aUkcxw4zewU337mVVb5br</example>
        */
        [DataMember(Name = "lazada_refresh_token", EmitDefaultValue = false)]
        public string LazadaRefreshToken { get; set; }

        /// <summary>
        /// Lazada API endpoint Region
        /// </summary>
        /// <value>Lazada API endpoint Region</value>
        /*
        <example>Malaysia</example>
        */
        [DataMember(Name = "lazada_region", EmitDefaultValue = false)]
        public string LazadaRegion { get; set; }

        /// <summary>
        /// LightSpeed api key
        /// </summary>
        /// <value>LightSpeed api key</value>
        /*
        <example>cf5444729c2abd6b6a5d983691767cb5</example>
        */
        [DataMember(Name = "lightspeed_api_key", EmitDefaultValue = false)]
        public string LightspeedApiKey { get; set; }

        /// <summary>
        /// LightSpeed api secret
        /// </summary>
        /// <value>LightSpeed api secret</value>
        /*
        <example>2620ee52a8bc942f9d5d3a575f4d363e</example>
        */
        [DataMember(Name = "lightspeed_api_secret", EmitDefaultValue = false)]
        public string LightspeedApiSecret { get; set; }

        /// <summary>
        /// Etsy keystring
        /// </summary>
        /// <value>Etsy keystring</value>
        /*
        <example>a9psel85v1wy5faeyjw03y0r</example>
        */
        [DataMember(Name = "etsy_keystring", EmitDefaultValue = false)]
        public string EtsyKeystring { get; set; }

        /// <summary>
        /// Etsy shared secret
        /// </summary>
        /// <value>Etsy shared secret</value>
        /*
        <example>gmz3iz45x2</example>
        */
        [DataMember(Name = "etsy_shared_secret", EmitDefaultValue = false)]
        public string EtsySharedSecret { get; set; }

        /// <summary>
        /// Access token authorizing the app to access resources on behalf of a user
        /// </summary>
        /// <value>Access token authorizing the app to access resources on behalf of a user</value>
        /*
        <example>igse8e4rdmzkxdi937qe69d59en1imw</example>
        */
        [DataMember(Name = "etsy_access_token", EmitDefaultValue = false)]
        public string EtsyAccessToken { get; set; }

        /// <summary>
        /// Secret token authorizing the app to access resources on behalf of a user
        /// </summary>
        /// <value>Secret token authorizing the app to access resources on behalf of a user</value>
        /*
        <example>igse8e4rdmzkxdi937qe69d59en1imw</example>
        */
        [DataMember(Name = "etsy_token_secret", EmitDefaultValue = false)]
        public string EtsyTokenSecret { get; set; }

        /// <summary>
        /// Etsy Client Id
        /// </summary>
        /// <value>Etsy Client Id</value>
        /*
        <example>w0fi0igk2w29bjcd7ydr2s35</example>
        */
        [DataMember(Name = "etsy_client_id", EmitDefaultValue = false)]
        public string EtsyClientId { get; set; }

        /// <summary>
        /// Etsy Refresh token
        /// </summary>
        /// <value>Etsy Refresh token</value>
        /*
        <example>223577551.L07_RE-y7unmKf2dox4djsHkVxwpUfs1ikG_uQmHhF-aASEReNn_Qns1Wqn3dDa0ZMxrt9CIael3dgudeDZb31ZUdS</example>
        */
        [DataMember(Name = "etsy_refresh_token", EmitDefaultValue = false)]
        public string EtsyRefreshToken { get; set; }

        /// <summary>
        /// Facebook App ID
        /// </summary>
        /// <value>Facebook App ID</value>
        /*
        <example>6516912365277570</example>
        */
        [DataMember(Name = "facebook_app_id", EmitDefaultValue = false)]
        public string FacebookAppId { get; set; }

        /// <summary>
        /// Facebook App Secret
        /// </summary>
        /// <value>Facebook App Secret</value>
        /*
        <example>737cf6bd2879cb6c7e5a8ff9cd63f3d46b0b5b7b</example>
        */
        [DataMember(Name = "facebook_app_secret", EmitDefaultValue = false)]
        public string FacebookAppSecret { get; set; }

        /// <summary>
        /// Facebook Access Token
        /// </summary>
        /// <value>Facebook Access Token</value>
        /*
        <example>EAAPP06rM2n8BO4mZBuMPnu9zS0MaMbN7ue8aUAhqbS58clzJwyp1rYRMpP31QJGziqtYbKypdVx3Cs0RpuufoUeLsbfX195XIB8VTlkcxw4zewU337mVVb5br</example>
        */
        [DataMember(Name = "facebook_access_token", EmitDefaultValue = false)]
        public string FacebookAccessToken { get; set; }

        /// <summary>
        /// Facebook Business ID
        /// </summary>
        /// <value>Facebook Business ID</value>
        /*
        <example>294042786906655</example>
        */
        [DataMember(Name = "facebook_business_id", EmitDefaultValue = false)]
        public string FacebookBusinessId { get; set; }

        /// <summary>
        /// Neto API Key
        /// </summary>
        /// <value>Neto API Key</value>
        /*
        <example>bbca57d8ff3c3677128112c15556d9e3</example>
        */
        [DataMember(Name = "neto_api_key", EmitDefaultValue = false)]
        public string NetoApiKey { get; set; }

        /// <summary>
        /// Neto User Name
        /// </summary>
        /// <value>Neto User Name</value>
        /*
        <example>mylogin</example>
        */
        [DataMember(Name = "neto_api_username", EmitDefaultValue = false)]
        public string NetoApiUsername { get; set; }

        /// <summary>
        /// Shopline APP Key
        /// </summary>
        /// <value>Shopline APP Key</value>
        /*
        <example>igse8e4rdmzkxdi937qe69d59en1imw</example>
        */
        [DataMember(Name = "shopline_access_token", EmitDefaultValue = false)]
        public string ShoplineAccessToken { get; set; }

        /// <summary>
        /// Shopline APP Key
        /// </summary>
        /// <value>Shopline APP Key</value>
        /*
        <example>737cf6bd2879cb6c7e5a8ff9cd63f3d46b0b5b7b</example>
        */
        [DataMember(Name = "shopline_app_key", EmitDefaultValue = false)]
        public string ShoplineAppKey { get; set; }

        /// <summary>
        /// Shopline App Secret
        /// </summary>
        /// <value>Shopline App Secret</value>
        /*
        <example>1701d123bb5cc14cd2732dcaed90638316c0a09</example>
        */
        [DataMember(Name = "shopline_app_secret", EmitDefaultValue = false)]
        public string ShoplineAppSecret { get; set; }

        /// <summary>
        /// Shopline Shared Secret
        /// </summary>
        /// <value>Shopline Shared Secret</value>
        /*
        <example>1701d123bb5cc14cd2732dcaed90638316c0a09</example>
        */
        [DataMember(Name = "shopline_shared_secret", EmitDefaultValue = false)]
        public string ShoplineSharedSecret { get; set; }

        /// <summary>
        /// Access token authorizing the app to access resources on behalf of a user
        /// </summary>
        /// <value>Access token authorizing the app to access resources on behalf of a user</value>
        /*
        <example>igse8e4rdmzkxdi937qe69d59en1imw</example>
        */
        [DataMember(Name = "shopify_access_token", EmitDefaultValue = false)]
        public string ShopifyAccessToken { get; set; }

        /// <summary>
        /// Shopify API Key
        /// </summary>
        /// <value>Shopify API Key</value>
        /*
        <example>bbca57d8ff3c3677128112c15556d9e3</example>
        */
        [DataMember(Name = "shopify_api_key", EmitDefaultValue = false)]
        public string ShopifyApiKey { get; set; }

        /// <summary>
        /// Shopify API Password
        /// </summary>
        /// <value>Shopify API Password</value>
        /*
        <example>860f3a6fc87632301a42cd88e4b5ab3d</example>
        */
        [DataMember(Name = "shopify_api_password", EmitDefaultValue = false)]
        public string ShopifyApiPassword { get; set; }

        /// <summary>
        /// Shared secret
        /// </summary>
        /// <value>Shared secret</value>
        /*
        <example>gmz3iz45x2</example>
        */
        [DataMember(Name = "shopify_shared_secret", EmitDefaultValue = false)]
        public string ShopifySharedSecret { get; set; }

        /// <summary>
        /// Shopee Partner ID
        /// </summary>
        /// <value>Shopee Partner ID</value>
        /*
        <example>1276777</example>
        */
        [DataMember(Name = "shopee_partner_id", EmitDefaultValue = false)]
        public string ShopeePartnerId { get; set; }

        /// <summary>
        /// Shopee Partner Key
        /// </summary>
        /// <value>Shopee Partner Key</value>
        /*
        <example>6a46494b4d746576554646626775617a577542774850636375464d6a736d5598</example>
        */
        [DataMember(Name = "shopee_partner_key", EmitDefaultValue = false)]
        public string ShopeePartnerKey { get; set; }

        /// <summary>
        /// Shopee SHOP ID
        /// </summary>
        /// <value>Shopee SHOP ID</value>
        /*
        <example>137968</example>
        */
        [DataMember(Name = "shopee_shop_id", EmitDefaultValue = false)]
        public string ShopeeShopId { get; set; }

        /// <summary>
        /// Shopee Refresh Token
        /// </summary>
        /// <value>Shopee Refresh Token</value>
        /*
        <example>EAAPP06rM2n8BO4mZBuMPnu9zS0MaMbN7ue8aUkcxw4zewU987mVVb5br</example>
        */
        [DataMember(Name = "shopee_refresh_token", EmitDefaultValue = false)]
        public string ShopeeRefreshToken { get; set; }

        /// <summary>
        /// Shopee API endpoint Region. Use for Chinese Mainland or Brazil.
        /// </summary>
        /// <value>Shopee API endpoint Region. Use for Chinese Mainland or Brazil.</value>
        /*
        <example>CN</example>
        */
        [DataMember(Name = "shopee_region", EmitDefaultValue = false)]
        public string ShopeeRegion { get; set; }

        /// <summary>
        /// Shopee Environment
        /// </summary>
        /// <value>Shopee Environment</value>
        /*
        <example>sandbox</example>
        */
        [DataMember(Name = "shopee_environment", EmitDefaultValue = false)]
        public string ShopeeEnvironment { get; set; }

        /// <summary>
        /// Access token authorizing the app to access resources on behalf of a user
        /// </summary>
        /// <value>Access token authorizing the app to access resources on behalf of a user</value>
        /*
        <example>igse8e4rdmzkxdi937qe69d59en1imw</example>
        */
        [DataMember(Name = "shoplazza_access_token", EmitDefaultValue = false)]
        public string ShoplazzaAccessToken { get; set; }

        /// <summary>
        /// Shared secret
        /// </summary>
        /// <value>Shared secret</value>
        /*
        <example>gmz3iz45x2</example>
        */
        [DataMember(Name = "shoplazza_shared_secret", EmitDefaultValue = false)]
        public string ShoplazzaSharedSecret { get; set; }

        /// <summary>
        /// Shopware access key
        /// </summary>
        /// <value>Shopware access key</value>
        /*
        <example>SWSCS3O1RJBSRNBYQLFIYJN2ZQ</example>
        */
        [DataMember(Name = "shopware_access_key", EmitDefaultValue = false)]
        public string ShopwareAccessKey { get; set; }

        /// <summary>
        /// Shopware api key
        /// </summary>
        /// <value>Shopware api key</value>
        /*
        <example>SWSCS3O1RJBSRNBYQLFIYJN2ZQ</example>
        */
        [DataMember(Name = "shopware_api_key", EmitDefaultValue = false)]
        public string ShopwareApiKey { get; set; }

        /// <summary>
        /// Shopware client secret access key
        /// </summary>
        /// <value>Shopware client secret access key</value>
        /*
        <example>V3NYNWg2b1dZdHBUWDN1cmdKdGhnenp5enVJYlJ0WlJvOFF2bnQ</example>
        */
        [DataMember(Name = "shopware_api_secret", EmitDefaultValue = false)]
        public string ShopwareApiSecret { get; set; }

        /// <summary>
        /// Miva access token
        /// </summary>
        /// <value>Miva access token</value>
        /*
        <example>227cbe434a1e358d72db0de993x9d9fd</example>
        */
        [DataMember(Name = "miva_access_token", EmitDefaultValue = false)]
        public string MivaAccessToken { get; set; }

        /// <summary>
        /// Miva signature
        /// </summary>
        /// <value>Miva signature</value>
        /*
        <example>1hpkrebfdsObGTor/0Gk9XcNBUQohrxrw67Sg9AM9ps&#x3D;</example>
        */
        [DataMember(Name = "miva_signature", EmitDefaultValue = false)]
        public string MivaSignature { get; set; }

        /// <summary>
        /// Tiendanube User ID
        /// </summary>
        /// <value>Tiendanube User ID</value>
        /*
        <example>1234</example>
        */
        [DataMember(Name = "tiendanube_user_id", EmitDefaultValue = false)]
        public int TiendanubeUserId { get; set; }

        /// <summary>
        /// Tiendanube Access Token
        /// </summary>
        /// <value>Tiendanube Access Token</value>
        /*
        <example>75bde7bb0b437475423e7e87c142c06052f80199</example>
        */
        [DataMember(Name = "tiendanube_access_token", EmitDefaultValue = false)]
        public string TiendanubeAccessToken { get; set; }

        /// <summary>
        /// Tiendanube Client Secret
        /// </summary>
        /// <value>Tiendanube Client Secret</value>
        /*
        <example>5e3588f514a5ae0d0fa063d1b556531e25c83fa7e47472ed</example>
        */
        [DataMember(Name = "tiendanube_client_secret", EmitDefaultValue = false)]
        public string TiendanubeClientSecret { get; set; }

        /// <summary>
        /// It&#39;s a Volusion account for which API is enabled
        /// </summary>
        /// <value>It&#39;s a Volusion account for which API is enabled</value>
        /*
        <example>admin</example>
        */
        [DataMember(Name = "volusion_login", EmitDefaultValue = false)]
        public string VolusionLogin { get; set; }

        /// <summary>
        /// Volusion API Password
        /// </summary>
        /// <value>Volusion API Password</value>
        /*
        <example>7943CA5F3990E00D9A4CCF0BD998211F</example>
        */
        [DataMember(Name = "volusion_password", EmitDefaultValue = false)]
        public string VolusionPassword { get; set; }

        /// <summary>
        /// Omni Commerce Connector Client ID
        /// </summary>
        /// <value>Omni Commerce Connector Client ID</value>
        /*
        <example>api_client_1</example>
        */
        [DataMember(Name = "hybris_client_id", EmitDefaultValue = false)]
        public string HybrisClientId { get; set; }

        /// <summary>
        /// Omni Commerce Connector Client Secret
        /// </summary>
        /// <value>Omni Commerce Connector Client Secret</value>
        /*
        <example>secret_phrase_1</example>
        */
        [DataMember(Name = "hybris_client_secret", EmitDefaultValue = false)]
        public string HybrisClientSecret { get; set; }

        /// <summary>
        /// User Name
        /// </summary>
        /// <value>User Name</value>
        /*
        <example>admin</example>
        */
        [DataMember(Name = "hybris_username", EmitDefaultValue = false)]
        public string HybrisUsername { get; set; }

        /// <summary>
        /// User password
        /// </summary>
        /// <value>User password</value>
        /*
        <example>nimda</example>
        */
        [DataMember(Name = "hybris_password", EmitDefaultValue = false)]
        public string HybrisPassword { get; set; }

        /// <summary>
        /// Websites to stores mapping data
        /// </summary>
        /// <value>Websites to stores mapping data</value>
        [DataMember(Name = "hybris_websites", EmitDefaultValue = false)]
        public List<AccountCartAddHybrisWebsitesInner> HybrisWebsites { get; set; }

        /// <summary>
        /// Square (Weebly) Client ID
        /// </summary>
        /// <value>Square (Weebly) Client ID</value>
        /*
        <example>sq0idp-qwer_1pvuTYe9cAf1lmxyQ</example>
        */
        [DataMember(Name = "square_client_id", EmitDefaultValue = false)]
        public string SquareClientId { get; set; }

        /// <summary>
        /// Square (Weebly) Client Secret
        /// </summary>
        /// <value>Square (Weebly) Client Secret</value>
        /*
        <example>c8d7077fce7b2b111111111898170695a01473a2ad</example>
        */
        [DataMember(Name = "square_client_secret", EmitDefaultValue = false)]
        public string SquareClientSecret { get; set; }

        /// <summary>
        /// Square (Weebly) Refresh Token
        /// </summary>
        /// <value>Square (Weebly) Refresh Token</value>
        /*
        <example>EQAAlquVXMr6xIcPu7qPkIEAZ0thqChhQuowrvZIqOlwhOwhtmyh4ZRfesdRc434</example>
        */
        [DataMember(Name = "square_refresh_token", EmitDefaultValue = false)]
        public string SquareRefreshToken { get; set; }

        /// <summary>
        /// Squarespace API Key
        /// </summary>
        /// <value>Squarespace API Key</value>
        /*
        <example>8f7849d5-1411-47f2-9722-aa81c2a48d95</example>
        */
        [DataMember(Name = "squarespace_api_key", EmitDefaultValue = false)]
        public string SquarespaceApiKey { get; set; }

        /// <summary>
        /// Squarespace Connector Client ID
        /// </summary>
        /// <value>Squarespace Connector Client ID</value>
        /*
        <example>9UGbUtS2V96BxRGmfOjsGAhTdsr9Vxxx</example>
        */
        [DataMember(Name = "squarespace_client_id", EmitDefaultValue = false)]
        public string SquarespaceClientId { get; set; }

        /// <summary>
        /// Squarespace Connector Client Secret
        /// </summary>
        /// <value>Squarespace Connector Client Secret</value>
        /*
        <example>GPZkUFkIKWg0KLE6rajsFMMYA9ma0udaaq2bYwBDXXX&#x3D;</example>
        */
        [DataMember(Name = "squarespace_client_secret", EmitDefaultValue = false)]
        public string SquarespaceClientSecret { get; set; }

        /// <summary>
        /// Squarespace access token
        /// </summary>
        /// <value>Squarespace access token</value>
        /*
        <example>SWSCS3O1RJBSRNBYQLFIYJN2ZQ</example>
        */
        [DataMember(Name = "squarespace_access_token", EmitDefaultValue = false)]
        public string SquarespaceAccessToken { get; set; }

        /// <summary>
        /// Squarespace refresh token
        /// </summary>
        /// <value>Squarespace refresh token</value>
        /*
        <example>def50eyfe9fe65d7e64a0cfe9fe65d7e64a0cfe9fe65d7e64a0cfe9fe65d7e64a0cfe9fe65d7e64a0cfe9fe65d7e64a0cfe9fe65d7e64a0cfe9fe657e64a0cfe9fe65d7e64a0cfe9fe65d7e64a0cfe9fe65d7e64a0cfe9fe65de64a0c865d</example>
        */
        [DataMember(Name = "squarespace_refresh_token", EmitDefaultValue = false)]
        public string SquarespaceRefreshToken { get; set; }

        /// <summary>
        /// CommerceHQ api key
        /// </summary>
        /// <value>CommerceHQ api key</value>
        /*
        <example>sJrD-LM0eddhe63rfgfva0dDydXfre4</example>
        */
        [DataMember(Name = "commercehq_api_key", EmitDefaultValue = false)]
        public string CommercehqApiKey { get; set; }

        /// <summary>
        /// CommerceHQ api password
        /// </summary>
        /// <value>CommerceHQ api password</value>
        /*
        <example>4Grr_ZCLNNoSUuhAjesKuchxo9SL</example>
        */
        [DataMember(Name = "commercehq_api_password", EmitDefaultValue = false)]
        public string CommercehqApiPassword { get; set; }

        /// <summary>
        /// Woocommerce consumer key
        /// </summary>
        /// <value>Woocommerce consumer key</value>
        /*
        <example>ck_26d8e2ad604f3917e429df6961722282bdcf109d</example>
        */
        [DataMember(Name = "wc_consumer_key", EmitDefaultValue = false)]
        public string WcConsumerKey { get; set; }

        /// <summary>
        /// Woocommerce consumer secret
        /// </summary>
        /// <value>Woocommerce consumer secret</value>
        /*
        <example>cs_931ced666118a15c5f7b4a33a15gf5589cbeba55</example>
        */
        [DataMember(Name = "wc_consumer_secret", EmitDefaultValue = false)]
        public string WcConsumerSecret { get; set; }

        /// <summary>
        /// Magento Consumer Key
        /// </summary>
        /// <value>Magento Consumer Key</value>
        /*
        <example>ktv4n9rgrj0evjuy2t6p2xlb1f8u5pmy</example>
        */
        [DataMember(Name = "magento_consumer_key", EmitDefaultValue = false)]
        public string MagentoConsumerKey { get; set; }

        /// <summary>
        /// Magento Consumer Secret
        /// </summary>
        /// <value>Magento Consumer Secret</value>
        /*
        <example>a46abc3kxyinlbggy06i9g975xqo6gjq</example>
        */
        [DataMember(Name = "magento_consumer_secret", EmitDefaultValue = false)]
        public string MagentoConsumerSecret { get; set; }

        /// <summary>
        /// Magento Access Token
        /// </summary>
        /// <value>Magento Access Token</value>
        /*
        <example>igse8e4rdmzkxdi937qe69d59en1imw</example>
        */
        [DataMember(Name = "magento_access_token", EmitDefaultValue = false)]
        public string MagentoAccessToken { get; set; }

        /// <summary>
        /// Magento Token Secret
        /// </summary>
        /// <value>Magento Token Secret</value>
        /*
        <example>igse8e4rdmzkxdi937qe69d59en1imw</example>
        */
        [DataMember(Name = "magento_token_secret", EmitDefaultValue = false)]
        public string MagentoTokenSecret { get; set; }

        /// <summary>
        /// Prestashop webservice key
        /// </summary>
        /// <value>Prestashop webservice key</value>
        /*
        <example>CKJ1ZEWRJWRLTPVBQJ9FGGRORD4AGS96</example>
        */
        [DataMember(Name = "prestashop_webservice_key", EmitDefaultValue = false)]
        public string PrestashopWebserviceKey { get; set; }

        /// <summary>
        /// Wix App ID
        /// </summary>
        /// <value>Wix App ID</value>
        /*
        <example>6b0b5b7b-7d87-45b5-bf34-ac6b438e63da</example>
        */
        [DataMember(Name = "wix_app_id", IsRequired = true, EmitDefaultValue = true)]
        public string WixAppId { get; set; }

        /// <summary>
        /// Wix App Secret Key
        /// </summary>
        /// <value>Wix App Secret Key</value>
        /*
        <example>316c0a09-f195-42be-74f6-a02cebb9cae6</example>
        */
        [DataMember(Name = "wix_app_secret_key", IsRequired = true, EmitDefaultValue = true)]
        public string WixAppSecretKey { get; set; }

        /// <summary>
        /// Wix Instance ID
        /// </summary>
        /// <value>Wix Instance ID</value>
        /*
        <example>58b893a4-6b16-5c2f-qt78-qa3r61t32rt8</example>
        */
        [DataMember(Name = "wix_instance_id", EmitDefaultValue = false)]
        public string WixInstanceId { get; set; }

        /// <summary>
        /// Wix refresh token
        /// </summary>
        /// <value>Wix refresh token</value>
        /*
        <example>
        OAUTH2.eyJraWQiOiJkZ0x3cjNRMCIsImFsZyI6IkhTMjU2In0.
        eyJkYXRhIjoie1wiaWRcIjpcImJlZjM3MmRmLTUyNGItNDI3NS05M2RkL
        Tg4NDBlOTU3ZWU2OFwifSIsImlhdCI6MTY0ODA0NTEyNiwiZXhwIjoxNzExMTE3MTI2fQ.
        VRR2lGSbcTVmaArtmyyhy6o4WRDwTn-nlDCQpZ97eYw
      </example>
        */
        [DataMember(Name = "wix_refresh_token", EmitDefaultValue = false)]
        public string WixRefreshToken { get; set; }

        /// <summary>
        /// Mercado Libre App ID
        /// </summary>
        /// <value>Mercado Libre App ID</value>
        /*
        <example>211188015100135</example>
        */
        [DataMember(Name = "mercado_libre_app_id", EmitDefaultValue = false)]
        public string MercadoLibreAppId { get; set; }

        /// <summary>
        /// Mercado Libre App Secret Key
        /// </summary>
        /// <value>Mercado Libre App Secret Key</value>
        /*
        <example>e2qoG2zklLlfP7cEngEJ94YjhkejkjAm</example>
        */
        [DataMember(Name = "mercado_libre_app_secret_key", EmitDefaultValue = false)]
        public string MercadoLibreAppSecretKey { get; set; }

        /// <summary>
        /// Mercado Libre Refresh Token
        /// </summary>
        /// <value>Mercado Libre Refresh Token</value>
        /*
        <example>TG-63h13529vb5464110188d2x9-703754376</example>
        */
        [DataMember(Name = "mercado_libre_refresh_token", EmitDefaultValue = false)]
        public string MercadoLibreRefreshToken { get; set; }

        /// <summary>
        /// Zid Client ID
        /// </summary>
        /// <value>Zid Client ID</value>
        /*
        <example>1234</example>
        */
        [DataMember(Name = "zid_client_id", EmitDefaultValue = false)]
        public int ZidClientId { get; set; }

        /// <summary>
        /// Zid Client Secret
        /// </summary>
        /// <value>Zid Client Secret</value>
        /*
        <example>nl5l1lE0vxgv6cV111fHsdlOOIfb0Ms5IR7l4Igs</example>
        */
        [DataMember(Name = "zid_client_secret", EmitDefaultValue = false)]
        public string ZidClientSecret { get; set; }

        /// <summary>
        /// Zid Access Token
        /// </summary>
        /// <value>Zid Access Token</value>
        /*
        <example>def50eyfe9fe65d7e64a0cfe9fe65d7e64a0cfe9fe65d7e64a0cfe9fe65d7e64a0cfe9fe65d7e64a0cfe9fe65d7e64a0cfe9fe65d7e64a0cfe9fe657e64a0cfe9fe65d7e64a0cfe9fe65d7e64a0cfe9fe65d7e64a0cfe9fe65de64a0c865d</example>
        */
        [DataMember(Name = "zid_access_token", EmitDefaultValue = false)]
        public string ZidAccessToken { get; set; }

        /// <summary>
        /// Zid Authorization
        /// </summary>
        /// <value>Zid Authorization</value>
        /*
        <example>def50eyfe9fe65d7e64a0cfe9fe65d7e64a0cfe9fe65d7e64a0cfe9fe65d7e64a0cfe9fe65d7e64a0cfe9fe65d7e64a0cfe9fe65d7e64a0cfe9fe657e64a0cfe9fe65d7e64a0cfe9fe65d7e64a0cfe9fe65d7e64a0cfe9fe65de64a0c865d</example>
        */
        [DataMember(Name = "zid_authorization", EmitDefaultValue = false)]
        public string ZidAuthorization { get; set; }

        /// <summary>
        /// Zid refresh token
        /// </summary>
        /// <value>Zid refresh token</value>
        /*
        <example>def50eyfe9fe65d7e64a0cfe9fe65d7e64a0cfe9fe65d7e64a0cfe9fe65d7e64a0cfe9fe65d7e64a0cfe9fe65d7e64a0cfe9fe65d7e64a0cfe9fe657e64a0cfe9fe65d7e64a0cfe9fe65d7e64a0cfe9fe65d7e64a0cfe9fe65de64a0c865d</example>
        */
        [DataMember(Name = "zid_refresh_token", EmitDefaultValue = false)]
        public string ZidRefreshToken { get; set; }

        /// <summary>
        /// Flipkart Client ID
        /// </summary>
        /// <value>Flipkart Client ID</value>
        /*
        <example>19414773883a13a850b6a52350b7246499a24</example>
        */
        [DataMember(Name = "flipkart_client_id", EmitDefaultValue = false)]
        public string FlipkartClientId { get; set; }

        /// <summary>
        /// Flipkart Client Secret
        /// </summary>
        /// <value>Flipkart Client Secret</value>
        /*
        <example>nl5l1lE0vxgv6cV111fHsdlOOIfb0Ms5IR7l4Igs</example>
        */
        [DataMember(Name = "flipkart_client_secret", EmitDefaultValue = false)]
        public string FlipkartClientSecret { get; set; }

        /// <summary>
        /// Allegro Client ID
        /// </summary>
        /// <value>Allegro Client ID</value>
        /*
        <example>2915e189ce3d23d23d2327d204ae6a0bd</example>
        */
        [DataMember(Name = "allegro_client_id", EmitDefaultValue = false)]
        public string AllegroClientId { get; set; }

        /// <summary>
        /// Allegro Client Secret
        /// </summary>
        /// <value>Allegro Client Secret</value>
        /*
        <example>DNHtqdL2WPIefeUhQWYgtXPS23fgbfgasdsGHHJGhg3RTFDQWFGZmVoFRT5IfkQj1E7eR5</example>
        */
        [DataMember(Name = "allegro_client_secret", EmitDefaultValue = false)]
        public string AllegroClientSecret { get; set; }

        /// <summary>
        /// Allegro Access Token
        /// </summary>
        /// <value>Allegro Access Token</value>
        /*
        <example>eyJhbGciOiJSUzI1NiIsInR5cCI6IsfddfdfdeyJ1c2VyX25hbWUiOiI5NDUxMzE1MSIsInNjb3BlIjpbImFsbGVncm86YXBpOm9yZGVyczpyZWFkIiwiYWxsZWdybzphcGk6cHJvZmlsZTp3cml0ZSIsImFsbGVncm86YXBpOnNhbGU6b2ZmZXJzOndyaXRlIiwiYWxsZWdybzphcGk6YmlsbGluZzpyZWFkIiwiYWxsZWdybzphcGk6Y2FtcGFpZ25zIiwiYWxsZWdybzphcGk6ZGlzcHV0ZXMiLCJhbGxlZ3JvOmFwaTpzYWxlOm9mZmVyczpyZWFkIiwiYWxsZWdybzphcGk6YmlkcyIsImFsbGVncm86YXBpOm9yZGVyczp3cml0ZSIsImFsbGVncm86YXBpOnBheW1lbnRzOndyaXRlIiwiYWxsZWdybzphcGk6c2FsZTpzZXR0aW5nczp3cml0ZSIsImFsbGVncm86YXBpOnByb2ZpbGU6cmVhZCIsImFsbGVncm86YXBpOnJhdGluZ3MiLCJhbGxlZ3JvOmFwaTpzYWxlOnNldHRpbmdzOnJlYWQiLCJhbGxlZ3JvOmFwaTpwYXltZW50czpyZWFkIiwiYWxsZWdybzphcGk6bWVzc2FnaW5nIl0sI</example>
        */
        [DataMember(Name = "allegro_access_token", EmitDefaultValue = false)]
        public string AllegroAccessToken { get; set; }

        /// <summary>
        /// Allegro Refresh Token
        /// </summary>
        /// <value>Allegro Refresh Token</value>
        /*
        <example>eyJhbGciOiJSUzI1NiIsInR5cCI6IsfddfdfdeyJ1c2VyX25hbWUiOiI5NDUxMzE1MSIsInNjb3BlIjpbImFsbGVncm86YXBpOm9yZGVyczpyZWFkIiwiYWxsZWdybzphcGk6cHJvZmlsZTp3cml0ZSIsImFsbGVncm86YXBpOnNhbGU6b2ZmZXJzOndyaXRlIiwiYWxsZWdybzphcGk6YmlsbGluZzpyZWFkIiwiYWxsZWdybzphcGk6Y2FtcGFpZ25zIiwiYWxsZWdybzphcGk6ZGlzcHV0ZXMiLCJhbGxlZ3JvOmFwaTpzYWxlOm9mZmVyczpyZWFkIiwiYWxsZWdybzphcGk6YmlkcyIsImFsbGVncm86YXBpOm9yZGVyczp3cml0ZSIsImFsbGVncm86YXBpOnBheW1lbnRzOndyaXRlIiwiYWxsZWdybzphcGk6c2FsZTpzZXR0aW5nczp3cml0ZSIsImFsbGVncm86YXBpOnByb2ZpbGU6cmVhZCIsImFsbGVncm86YXBpOnJhdGluZ3MiLCJhbGxlZ3JvOmFwaTpzYWxlOnNldHRpbmdzOnJlYWQiLCJhbGxlZ3JvOmFwaTpwYXltZW50czpyZWFkIiwiYWxsZWdybzphcGk6bWVzc2FnaW5nIl0sI</example>
        */
        [DataMember(Name = "allegro_refresh_token", EmitDefaultValue = false)]
        public string AllegroRefreshToken { get; set; }

        /// <summary>
        /// Allegro Environment
        /// </summary>
        /// <value>Allegro Environment</value>
        /*
        <example>sandbox</example>
        */
        [DataMember(Name = "allegro_environment", EmitDefaultValue = false)]
        public string AllegroEnvironment { get; set; }

        /// <summary>
        /// Zoho Client ID
        /// </summary>
        /// <value>Zoho Client ID</value>
        /*
        <example>1000.FLCHGI2LS1111111TOR4OGB697W4IX</example>
        */
        [DataMember(Name = "zoho_client_id", EmitDefaultValue = false)]
        public string ZohoClientId { get; set; }

        /// <summary>
        /// Zoho Client Secret
        /// </summary>
        /// <value>Zoho Client Secret</value>
        /*
        <example>c8d7077fce7b2b111111111898170695a01473a2ad</example>
        */
        [DataMember(Name = "zoho_client_secret", EmitDefaultValue = false)]
        public string ZohoClientSecret { get; set; }

        /// <summary>
        /// Zoho Refresh Token
        /// </summary>
        /// <value>Zoho Refresh Token</value>
        /*
        <example>1000.11111111111111111111111111111111.1b3ca6f054341a111118abf928beb33b</example>
        */
        [DataMember(Name = "zoho_refresh_token", EmitDefaultValue = false)]
        public string ZohoRefreshToken { get; set; }

        /// <summary>
        /// Zoho API endpoint Region
        /// </summary>
        /// <value>Zoho API endpoint Region</value>
        /*
        <example>Europe</example>
        */
        [DataMember(Name = "zoho_region", EmitDefaultValue = false)]
        public string ZohoRegion { get; set; }

        /// <summary>
        /// Otto Client ID
        /// </summary>
        /// <value>Otto Client ID</value>
        /*
        <example>911a3dbf-d261-4763-cc81-052876465b55</example>
        */
        [DataMember(Name = "otto_client_id", EmitDefaultValue = false)]
        public string OttoClientId { get; set; }

        /// <summary>
        /// Otto Client Secret
        /// </summary>
        /// <value>Otto Client Secret</value>
        /*
        <example>9887a82a-2879-421e-a6wc-54e986b3458c</example>
        */
        [DataMember(Name = "otto_client_secret", EmitDefaultValue = false)]
        public string OttoClientSecret { get; set; }

        /// <summary>
        /// Otto App ID
        /// </summary>
        /// <value>Otto App ID</value>
        /*
        <example>6eaef6a3-822e-425b-8mc9-53750063e34d</example>
        */
        [DataMember(Name = "otto_app_id", EmitDefaultValue = false)]
        public string OttoAppId { get; set; }

        /// <summary>
        /// Otto Refresh Token
        /// </summary>
        /// <value>Otto Refresh Token</value>
        /*
        <example>eyJhbGciOiJSUzI1NiIsInR5cCI6IsfddfdfdeyJ1c2VyX25hbWUiOiI5NDUxMzE1MSIsInNjb3BlIjpbImFsbGVncm86YXBpOm9yZGVyczpyZWFkIiwiYWxsZWdybzphcGk6cHJvZmlsZTp3cml0ZSIsImFsbGVncm86YXBpOnNhbGU6b2ZmZXJzOndyaXRlIiwiYWxsZWdybzphcGk6YmlsbGluZzpyZWFkIiwiYWxsZWdybzphcGk6Y2FtcGFpZ25zIiwiYWxsZWdybzphcGk6ZGlzcHV0ZXMiLCJhbGxlZ3JvOmFwaTpzYWxlOm9mZmVyczpyZWFkIiwiYWxsZWdybzphcGk6YmlkcyIsImFsbGVncm86YXBpOm9yZGVyczp3cml0ZSIsImFsbGVncm86YXBpOnBheW1lbnRzOndyaXRlIiwiYWxsZWdybzphcGk6c2FsZTpzZXR0aW5nczp3cml0ZSIsImFsbGVncm86YXBpOnByb2ZpbGU6cmVhZCIsImFsbGVncm86YXBpOnJhdGluZ3MiLCJhbGxlZ3JvOmFwaTpzYWxlOnNldHRpbmdzOnJlYWQiLCJhbGxlZ3JvOmFwaTpwYXltZW50czpyZWFkIiwiYWxsZWdybzphcGk6bWVzc2FnaW5nIl0sI</example>
        */
        [DataMember(Name = "otto_refresh_token", EmitDefaultValue = false)]
        public string OttoRefreshToken { get; set; }

        /// <summary>
        /// Otto Environment
        /// </summary>
        /// <value>Otto Environment</value>
        /*
        <example>sandbox</example>
        */
        [DataMember(Name = "otto_environment", EmitDefaultValue = false)]
        public string OttoEnvironment { get; set; }

        /// <summary>
        /// Otto Access Token
        /// </summary>
        /// <value>Otto Access Token</value>
        /*
        <example>eyJhbGciOiJS34535f45f54f5656deyJ1c2VyX25hbWUiOiI5NDUxMzE1MSIsInNjb3BlIjpbImFsbGVncm86YXBpOm9yZGVyczpyZWFkIiwiYWxsZWdybzphcGk6cHJvZmlsZTp3cml0ZSIsImFsbGVncm86YXBpOnNhbGU6b2ZmZXJzOndyaXRlIiwiYWxsZWdybzphcGk6YmlsbGluZzpyZWFkIiwiYWxsZWdybzphcGk6Y2FtcGFpZ25zIiwiYWxsZWdybzphcGk6ZGlzcHV0ZXMiLCJhbGxlZ3JvOmFwaTpzYWxlOm9mZmVyczpyZWFkIiwiYWxsZWdybzphcGk6YmlkcyIsImFsbGVncm86YXBpOm9yZGVyczp3cml0ZSIsImFsbGVncm86YXBpOnBheW1lbnRzOndyaXRlIiwiYWxsZWdybzphcGk6c2FsZTpzZXR0aW5nczp3cml0ZSIsImFsbGVncm86YXBpOnByb2ZpbGU6cmVhZCIsImFsbGVncm86YXBpOnJhdGluZ3MiLCJhbGxlZ3JvOmFwaTpzYWxlOnNldHRpbmdzOnJlYWQiLCJhbGxlZ3JvOmFwaTpwYXltZW50czpyZWFkIiwiYWxsZWdybzphcGk6bWVzc2FnaW5nIl0sI</example>
        */
        [DataMember(Name = "otto_access_token", EmitDefaultValue = false)]
        public string OttoAccessToken { get; set; }

        /// <summary>
        /// TikTok Shop App Key
        /// </summary>
        /// <value>TikTok Shop App Key</value>
        /*
        <example>6arbhkzno8nbv</example>
        */
        [DataMember(Name = "tiktokshop_app_key", EmitDefaultValue = false)]
        public string TiktokshopAppKey { get; set; }

        /// <summary>
        /// TikTok Shop App Secret
        /// </summary>
        /// <value>TikTok Shop App Secret</value>
        /*
        <example>d95820a05a0cd54fb394fcd26fgat63999b183bc</example>
        */
        [DataMember(Name = "tiktokshop_app_secret", EmitDefaultValue = false)]
        public string TiktokshopAppSecret { get; set; }

        /// <summary>
        /// TikTok Shop Refresh Token
        /// </summary>
        /// <value>TikTok Shop Refresh Token</value>
        /*
        <example>TTP_NTUxZTNhYTQ2ZDk2YmRmZWNmYWY2YWY12345NGYwNjQ3YjkzYTllYjA0YmNlMw</example>
        */
        [DataMember(Name = "tiktokshop_refresh_token", EmitDefaultValue = false)]
        public string TiktokshopRefreshToken { get; set; }

        /// <summary>
        /// TikTok Shop Access Token
        /// </summary>
        /// <value>TikTok Shop Access Token</value>
        /*
        <example>TTP_Fw8r12345kW03FYd09DG-9INtpw361hWthei12345iPJ5AUv99fLSCYD9-Uu12345TgNRzKZxi5-tfFMtdWqglEt5_iCk</example>
        */
        [DataMember(Name = "tiktokshop_access_token", EmitDefaultValue = false)]
        public string TiktokshopAccessToken { get; set; }

        /// <summary>
        /// Salla Client ID
        /// </summary>
        /// <value>Salla Client ID</value>
        /*
        <example>1bxxxcf9-5xx4-xxx-bxxf-929b8xxxxe11</example>
        */
        [DataMember(Name = "salla_client_id", EmitDefaultValue = false)]
        public string SallaClientId { get; set; }

        /// <summary>
        /// Salla Client Secret
        /// </summary>
        /// <value>Salla Client Secret</value>
        /*
        <example>8x88axxxc25e1fxxxa1c06fxxx150xx5</example>
        */
        [DataMember(Name = "salla_client_secret", EmitDefaultValue = false)]
        public string SallaClientSecret { get; set; }

        /// <summary>
        /// Salla Refresh Token
        /// </summary>
        /// <value>Salla Refresh Token</value>
        /*
        <example>oxy_rt_zxxxxiY2xxZWWxxxxlU-tROxxxxx2JzS2fwzxxxxxkU.p3xxxkCIyFexxxxP50WwZYfhw5_wg1xxxxV5F-8xxXc</example>
        */
        [DataMember(Name = "salla_refresh_token", EmitDefaultValue = false)]
        public string SallaRefreshToken { get; set; }

        /// <summary>
        /// Salla Access Token
        /// </summary>
        /// <value>Salla Access Token</value>
        /*
        <example>oxy_rt_zxxxxiY2xxZWWxxxxlU-tROxxxxx2JzS2fwzxxxxxkU.p3xxxkCIyFexxxxP50WwZYfhw5_wg1xxxxV5F-8xxXc</example>
        */
        [DataMember(Name = "salla_access_token", EmitDefaultValue = false)]
        public string SallaAccessToken { get; set; }

        /// <summary>
        /// Temu App Key
        /// </summary>
        /// <value>Temu App Key</value>
        /*
        <example>4ebbc9190ae410443d65b4c2faca9811</example>
        */
        [DataMember(Name = "temu_app_key", EmitDefaultValue = false)]
        public string TemuAppKey { get; set; }

        /// <summary>
        /// Temu App Secret
        /// </summary>
        /// <value>Temu App Secret</value>
        /*
        <example>4782d2d827276688bf4758bed55dbdd4bbe79a78</example>
        */
        [DataMember(Name = "temu_app_secret", EmitDefaultValue = false)]
        public string TemuAppSecret { get; set; }

        /// <summary>
        /// Temu Access Token
        /// </summary>
        /// <value>Temu Access Token</value>
        /*
        <example>uplv3hfyt5kcwoymrgnajnbl1ow5qxlz4sqhev6hl3xosz5dejrtyl2jre6</example>
        */
        [DataMember(Name = "temu_access_token", IsRequired = true, EmitDefaultValue = true)]
        public string TemuAccessToken { get; set; }

        /// <summary>
        /// Temu API endpoint Region.
        /// </summary>
        /// <value>Temu API endpoint Region.</value>
        /*
        <example>US</example>
        */
        [DataMember(Name = "temu_region", EmitDefaultValue = false)]
        public string TemuRegion { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AccountCartAdd {\n");
            sb.Append("  CartId: ").Append(CartId).Append("\n");
            sb.Append("  StoreUrl: ").Append(StoreUrl).Append("\n");
            sb.Append("  BridgeUrl: ").Append(BridgeUrl).Append("\n");
            sb.Append("  StoreRoot: ").Append(StoreRoot).Append("\n");
            sb.Append("  StoreKey: ").Append(StoreKey).Append("\n");
            sb.Append("  ValidateVersion: ").Append(ValidateVersion).Append("\n");
            sb.Append("  Verify: ").Append(Verify).Append("\n");
            sb.Append("  DbTablesPrefix: ").Append(DbTablesPrefix).Append("\n");
            sb.Append("  UserAgent: ").Append(UserAgent).Append("\n");
            sb.Append("  FtpHost: ").Append(FtpHost).Append("\n");
            sb.Append("  FtpUser: ").Append(FtpUser).Append("\n");
            sb.Append("  FtpPassword: ").Append(FtpPassword).Append("\n");
            sb.Append("  FtpPort: ").Append(FtpPort).Append("\n");
            sb.Append("  FtpStoreDir: ").Append(FtpStoreDir).Append("\n");
            sb.Append("  Var3dcartPrivateKey: ").Append(Var3dcartPrivateKey).Append("\n");
            sb.Append("  Var3dcartAccessToken: ").Append(Var3dcartAccessToken).Append("\n");
            sb.Append("  Var3dcartapiApiKey: ").Append(Var3dcartapiApiKey).Append("\n");
            sb.Append("  AmazonSpClientId: ").Append(AmazonSpClientId).Append("\n");
            sb.Append("  AmazonSpClientSecret: ").Append(AmazonSpClientSecret).Append("\n");
            sb.Append("  AmazonSpRefreshToken: ").Append(AmazonSpRefreshToken).Append("\n");
            sb.Append("  AmazonSpAwsRegion: ").Append(AmazonSpAwsRegion).Append("\n");
            sb.Append("  AmazonSpApiEnvironment: ").Append(AmazonSpApiEnvironment).Append("\n");
            sb.Append("  AmazonSellerId: ").Append(AmazonSellerId).Append("\n");
            sb.Append("  AspdotnetstorefrontApiUser: ").Append(AspdotnetstorefrontApiUser).Append("\n");
            sb.Append("  AspdotnetstorefrontApiPass: ").Append(AspdotnetstorefrontApiPass).Append("\n");
            sb.Append("  BigcommerceapiAdminAccount: ").Append(BigcommerceapiAdminAccount).Append("\n");
            sb.Append("  BigcommerceapiApiPath: ").Append(BigcommerceapiApiPath).Append("\n");
            sb.Append("  BigcommerceapiApiKey: ").Append(BigcommerceapiApiKey).Append("\n");
            sb.Append("  BigcommerceapiClientId: ").Append(BigcommerceapiClientId).Append("\n");
            sb.Append("  BigcommerceapiAccessToken: ").Append(BigcommerceapiAccessToken).Append("\n");
            sb.Append("  BigcommerceapiContext: ").Append(BigcommerceapiContext).Append("\n");
            sb.Append("  BolApiKey: ").Append(BolApiKey).Append("\n");
            sb.Append("  BolApiSecret: ").Append(BolApiSecret).Append("\n");
            sb.Append("  BolRetailerId: ").Append(BolRetailerId).Append("\n");
            sb.Append("  BigcartelUserName: ").Append(BigcartelUserName).Append("\n");
            sb.Append("  BigcartelPassword: ").Append(BigcartelPassword).Append("\n");
            sb.Append("  DemandwareClientId: ").Append(DemandwareClientId).Append("\n");
            sb.Append("  DemandwareApiPassword: ").Append(DemandwareApiPassword).Append("\n");
            sb.Append("  DemandwareUserName: ").Append(DemandwareUserName).Append("\n");
            sb.Append("  DemandwareUserPassword: ").Append(DemandwareUserPassword).Append("\n");
            sb.Append("  EbayClientId: ").Append(EbayClientId).Append("\n");
            sb.Append("  EbayClientSecret: ").Append(EbayClientSecret).Append("\n");
            sb.Append("  EbayRuname: ").Append(EbayRuname).Append("\n");
            sb.Append("  EbayAccessToken: ").Append(EbayAccessToken).Append("\n");
            sb.Append("  EbayRefreshToken: ").Append(EbayRefreshToken).Append("\n");
            sb.Append("  EbayEnvironment: ").Append(EbayEnvironment).Append("\n");
            sb.Append("  EbaySiteId: ").Append(EbaySiteId).Append("\n");
            sb.Append("  WalmartClientId: ").Append(WalmartClientId).Append("\n");
            sb.Append("  WalmartClientSecret: ").Append(WalmartClientSecret).Append("\n");
            sb.Append("  WalmartEnvironment: ").Append(WalmartEnvironment).Append("\n");
            sb.Append("  WalmartChannelType: ").Append(WalmartChannelType).Append("\n");
            sb.Append("  WalmartRegion: ").Append(WalmartRegion).Append("\n");
            sb.Append("  EcwidAcessToken: ").Append(EcwidAcessToken).Append("\n");
            sb.Append("  EcwidStoreId: ").Append(EcwidStoreId).Append("\n");
            sb.Append("  LazadaAppId: ").Append(LazadaAppId).Append("\n");
            sb.Append("  LazadaAppSecret: ").Append(LazadaAppSecret).Append("\n");
            sb.Append("  LazadaRefreshToken: ").Append(LazadaRefreshToken).Append("\n");
            sb.Append("  LazadaRegion: ").Append(LazadaRegion).Append("\n");
            sb.Append("  LightspeedApiKey: ").Append(LightspeedApiKey).Append("\n");
            sb.Append("  LightspeedApiSecret: ").Append(LightspeedApiSecret).Append("\n");
            sb.Append("  EtsyKeystring: ").Append(EtsyKeystring).Append("\n");
            sb.Append("  EtsySharedSecret: ").Append(EtsySharedSecret).Append("\n");
            sb.Append("  EtsyAccessToken: ").Append(EtsyAccessToken).Append("\n");
            sb.Append("  EtsyTokenSecret: ").Append(EtsyTokenSecret).Append("\n");
            sb.Append("  EtsyClientId: ").Append(EtsyClientId).Append("\n");
            sb.Append("  EtsyRefreshToken: ").Append(EtsyRefreshToken).Append("\n");
            sb.Append("  FacebookAppId: ").Append(FacebookAppId).Append("\n");
            sb.Append("  FacebookAppSecret: ").Append(FacebookAppSecret).Append("\n");
            sb.Append("  FacebookAccessToken: ").Append(FacebookAccessToken).Append("\n");
            sb.Append("  FacebookBusinessId: ").Append(FacebookBusinessId).Append("\n");
            sb.Append("  NetoApiKey: ").Append(NetoApiKey).Append("\n");
            sb.Append("  NetoApiUsername: ").Append(NetoApiUsername).Append("\n");
            sb.Append("  ShoplineAccessToken: ").Append(ShoplineAccessToken).Append("\n");
            sb.Append("  ShoplineAppKey: ").Append(ShoplineAppKey).Append("\n");
            sb.Append("  ShoplineAppSecret: ").Append(ShoplineAppSecret).Append("\n");
            sb.Append("  ShoplineSharedSecret: ").Append(ShoplineSharedSecret).Append("\n");
            sb.Append("  ShopifyAccessToken: ").Append(ShopifyAccessToken).Append("\n");
            sb.Append("  ShopifyApiKey: ").Append(ShopifyApiKey).Append("\n");
            sb.Append("  ShopifyApiPassword: ").Append(ShopifyApiPassword).Append("\n");
            sb.Append("  ShopifySharedSecret: ").Append(ShopifySharedSecret).Append("\n");
            sb.Append("  ShopeePartnerId: ").Append(ShopeePartnerId).Append("\n");
            sb.Append("  ShopeePartnerKey: ").Append(ShopeePartnerKey).Append("\n");
            sb.Append("  ShopeeShopId: ").Append(ShopeeShopId).Append("\n");
            sb.Append("  ShopeeRefreshToken: ").Append(ShopeeRefreshToken).Append("\n");
            sb.Append("  ShopeeRegion: ").Append(ShopeeRegion).Append("\n");
            sb.Append("  ShopeeEnvironment: ").Append(ShopeeEnvironment).Append("\n");
            sb.Append("  ShoplazzaAccessToken: ").Append(ShoplazzaAccessToken).Append("\n");
            sb.Append("  ShoplazzaSharedSecret: ").Append(ShoplazzaSharedSecret).Append("\n");
            sb.Append("  ShopwareAccessKey: ").Append(ShopwareAccessKey).Append("\n");
            sb.Append("  ShopwareApiKey: ").Append(ShopwareApiKey).Append("\n");
            sb.Append("  ShopwareApiSecret: ").Append(ShopwareApiSecret).Append("\n");
            sb.Append("  MivaAccessToken: ").Append(MivaAccessToken).Append("\n");
            sb.Append("  MivaSignature: ").Append(MivaSignature).Append("\n");
            sb.Append("  TiendanubeUserId: ").Append(TiendanubeUserId).Append("\n");
            sb.Append("  TiendanubeAccessToken: ").Append(TiendanubeAccessToken).Append("\n");
            sb.Append("  TiendanubeClientSecret: ").Append(TiendanubeClientSecret).Append("\n");
            sb.Append("  VolusionLogin: ").Append(VolusionLogin).Append("\n");
            sb.Append("  VolusionPassword: ").Append(VolusionPassword).Append("\n");
            sb.Append("  HybrisClientId: ").Append(HybrisClientId).Append("\n");
            sb.Append("  HybrisClientSecret: ").Append(HybrisClientSecret).Append("\n");
            sb.Append("  HybrisUsername: ").Append(HybrisUsername).Append("\n");
            sb.Append("  HybrisPassword: ").Append(HybrisPassword).Append("\n");
            sb.Append("  HybrisWebsites: ").Append(HybrisWebsites).Append("\n");
            sb.Append("  SquareClientId: ").Append(SquareClientId).Append("\n");
            sb.Append("  SquareClientSecret: ").Append(SquareClientSecret).Append("\n");
            sb.Append("  SquareRefreshToken: ").Append(SquareRefreshToken).Append("\n");
            sb.Append("  SquarespaceApiKey: ").Append(SquarespaceApiKey).Append("\n");
            sb.Append("  SquarespaceClientId: ").Append(SquarespaceClientId).Append("\n");
            sb.Append("  SquarespaceClientSecret: ").Append(SquarespaceClientSecret).Append("\n");
            sb.Append("  SquarespaceAccessToken: ").Append(SquarespaceAccessToken).Append("\n");
            sb.Append("  SquarespaceRefreshToken: ").Append(SquarespaceRefreshToken).Append("\n");
            sb.Append("  CommercehqApiKey: ").Append(CommercehqApiKey).Append("\n");
            sb.Append("  CommercehqApiPassword: ").Append(CommercehqApiPassword).Append("\n");
            sb.Append("  WcConsumerKey: ").Append(WcConsumerKey).Append("\n");
            sb.Append("  WcConsumerSecret: ").Append(WcConsumerSecret).Append("\n");
            sb.Append("  MagentoConsumerKey: ").Append(MagentoConsumerKey).Append("\n");
            sb.Append("  MagentoConsumerSecret: ").Append(MagentoConsumerSecret).Append("\n");
            sb.Append("  MagentoAccessToken: ").Append(MagentoAccessToken).Append("\n");
            sb.Append("  MagentoTokenSecret: ").Append(MagentoTokenSecret).Append("\n");
            sb.Append("  PrestashopWebserviceKey: ").Append(PrestashopWebserviceKey).Append("\n");
            sb.Append("  WixAppId: ").Append(WixAppId).Append("\n");
            sb.Append("  WixAppSecretKey: ").Append(WixAppSecretKey).Append("\n");
            sb.Append("  WixInstanceId: ").Append(WixInstanceId).Append("\n");
            sb.Append("  WixRefreshToken: ").Append(WixRefreshToken).Append("\n");
            sb.Append("  MercadoLibreAppId: ").Append(MercadoLibreAppId).Append("\n");
            sb.Append("  MercadoLibreAppSecretKey: ").Append(MercadoLibreAppSecretKey).Append("\n");
            sb.Append("  MercadoLibreRefreshToken: ").Append(MercadoLibreRefreshToken).Append("\n");
            sb.Append("  ZidClientId: ").Append(ZidClientId).Append("\n");
            sb.Append("  ZidClientSecret: ").Append(ZidClientSecret).Append("\n");
            sb.Append("  ZidAccessToken: ").Append(ZidAccessToken).Append("\n");
            sb.Append("  ZidAuthorization: ").Append(ZidAuthorization).Append("\n");
            sb.Append("  ZidRefreshToken: ").Append(ZidRefreshToken).Append("\n");
            sb.Append("  FlipkartClientId: ").Append(FlipkartClientId).Append("\n");
            sb.Append("  FlipkartClientSecret: ").Append(FlipkartClientSecret).Append("\n");
            sb.Append("  AllegroClientId: ").Append(AllegroClientId).Append("\n");
            sb.Append("  AllegroClientSecret: ").Append(AllegroClientSecret).Append("\n");
            sb.Append("  AllegroAccessToken: ").Append(AllegroAccessToken).Append("\n");
            sb.Append("  AllegroRefreshToken: ").Append(AllegroRefreshToken).Append("\n");
            sb.Append("  AllegroEnvironment: ").Append(AllegroEnvironment).Append("\n");
            sb.Append("  ZohoClientId: ").Append(ZohoClientId).Append("\n");
            sb.Append("  ZohoClientSecret: ").Append(ZohoClientSecret).Append("\n");
            sb.Append("  ZohoRefreshToken: ").Append(ZohoRefreshToken).Append("\n");
            sb.Append("  ZohoRegion: ").Append(ZohoRegion).Append("\n");
            sb.Append("  OttoClientId: ").Append(OttoClientId).Append("\n");
            sb.Append("  OttoClientSecret: ").Append(OttoClientSecret).Append("\n");
            sb.Append("  OttoAppId: ").Append(OttoAppId).Append("\n");
            sb.Append("  OttoRefreshToken: ").Append(OttoRefreshToken).Append("\n");
            sb.Append("  OttoEnvironment: ").Append(OttoEnvironment).Append("\n");
            sb.Append("  OttoAccessToken: ").Append(OttoAccessToken).Append("\n");
            sb.Append("  TiktokshopAppKey: ").Append(TiktokshopAppKey).Append("\n");
            sb.Append("  TiktokshopAppSecret: ").Append(TiktokshopAppSecret).Append("\n");
            sb.Append("  TiktokshopRefreshToken: ").Append(TiktokshopRefreshToken).Append("\n");
            sb.Append("  TiktokshopAccessToken: ").Append(TiktokshopAccessToken).Append("\n");
            sb.Append("  SallaClientId: ").Append(SallaClientId).Append("\n");
            sb.Append("  SallaClientSecret: ").Append(SallaClientSecret).Append("\n");
            sb.Append("  SallaRefreshToken: ").Append(SallaRefreshToken).Append("\n");
            sb.Append("  SallaAccessToken: ").Append(SallaAccessToken).Append("\n");
            sb.Append("  TemuAppKey: ").Append(TemuAppKey).Append("\n");
            sb.Append("  TemuAppSecret: ").Append(TemuAppSecret).Append("\n");
            sb.Append("  TemuAccessToken: ").Append(TemuAccessToken).Append("\n");
            sb.Append("  TemuRegion: ").Append(TemuRegion).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
