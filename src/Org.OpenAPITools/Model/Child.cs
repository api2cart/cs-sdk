/*
 * API2Cart OpenAPI
 *
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// Child
    /// </summary>
    [DataContract(Name = "Child")]
    public partial class Child : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Child" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="parentId">parentId.</param>
        /// <param name="sku">sku.</param>
        /// <param name="upc">upc.</param>
        /// <param name="ean">ean.</param>
        /// <param name="mpn">mpn.</param>
        /// <param name="gtin">gtin.</param>
        /// <param name="isbn">isbn.</param>
        /// <param name="url">url.</param>
        /// <param name="seoUrl">seoUrl.</param>
        /// <param name="sortOrder">sortOrder.</param>
        /// <param name="createdTime">createdTime.</param>
        /// <param name="modifiedTime">modifiedTime.</param>
        /// <param name="name">name.</param>
        /// <param name="shortDescription">shortDescription.</param>
        /// <param name="fullDescription">fullDescription.</param>
        /// <param name="images">images.</param>
        /// <param name="combination">combination.</param>
        /// <param name="defaultPrice">defaultPrice.</param>
        /// <param name="costPrice">costPrice.</param>
        /// <param name="listPrice">listPrice.</param>
        /// <param name="wholesalePrice">wholesalePrice.</param>
        /// <param name="advancedPrice">advancedPrice.</param>
        /// <param name="taxClassId">taxClassId.</param>
        /// <param name="availForSale">availForSale.</param>
        /// <param name="allowBackorders">allowBackorders.</param>
        /// <param name="inStock">inStock.</param>
        /// <param name="onSale">onSale.</param>
        /// <param name="manageStock">manageStock.</param>
        /// <param name="inventoryLevel">inventoryLevel.</param>
        /// <param name="inventory">inventory.</param>
        /// <param name="minQuantity">minQuantity.</param>
        /// <param name="defaultQtyInPack">defaultQtyInPack.</param>
        /// <param name="isQtyInPackFixed">isQtyInPackFixed.</param>
        /// <param name="weightUnit">weightUnit.</param>
        /// <param name="weight">weight.</param>
        /// <param name="dimensionsUnit">dimensionsUnit.</param>
        /// <param name="width">width.</param>
        /// <param name="height">height.</param>
        /// <param name="length">length.</param>
        /// <param name="metaTitle">metaTitle.</param>
        /// <param name="metaDescription">metaDescription.</param>
        /// <param name="metaKeywords">metaKeywords.</param>
        /// <param name="discounts">discounts.</param>
        /// <param name="isVirtual">isVirtual.</param>
        /// <param name="additionalFields">additionalFields.</param>
        /// <param name="customFields">customFields.</param>
        public Child(string id = default(string), string parentId = default(string), string sku = default(string), string upc = default(string), string ean = default(string), string mpn = default(string), string gtin = default(string), string isbn = default(string), string url = default(string), string seoUrl = default(string), int sortOrder = default(int), A2CDateTime createdTime = default(A2CDateTime), A2CDateTime modifiedTime = default(A2CDateTime), string name = default(string), string shortDescription = default(string), string fullDescription = default(string), List<Image> images = default(List<Image>), List<ProductChildItemCombination> combination = default(List<ProductChildItemCombination>), decimal defaultPrice = default(decimal), decimal costPrice = default(decimal), decimal listPrice = default(decimal), decimal wholesalePrice = default(decimal), List<ProductAdvancedPrice> advancedPrice = default(List<ProductAdvancedPrice>), string taxClassId = default(string), bool availForSale = default(bool), bool allowBackorders = default(bool), bool inStock = default(bool), bool onSale = default(bool), bool manageStock = default(bool), decimal inventoryLevel = default(decimal), List<ProductInventory> inventory = default(List<ProductInventory>), decimal minQuantity = default(decimal), decimal defaultQtyInPack = default(decimal), bool isQtyInPackFixed = default(bool), string weightUnit = default(string), decimal weight = default(decimal), string dimensionsUnit = default(string), decimal width = default(decimal), decimal height = default(decimal), decimal length = default(decimal), string metaTitle = default(string), string metaDescription = default(string), string metaKeywords = default(string), List<Discount> discounts = default(List<Discount>), bool isVirtual = default(bool), Object additionalFields = default(Object), Object customFields = default(Object))
        {
            this.Id = id;
            this.ParentId = parentId;
            this.Sku = sku;
            this.Upc = upc;
            this.Ean = ean;
            this.Mpn = mpn;
            this.Gtin = gtin;
            this.Isbn = isbn;
            this.Url = url;
            this.SeoUrl = seoUrl;
            this.SortOrder = sortOrder;
            this.CreatedTime = createdTime;
            this.ModifiedTime = modifiedTime;
            this.Name = name;
            this.ShortDescription = shortDescription;
            this.FullDescription = fullDescription;
            this.Images = images;
            this.Combination = combination;
            this.DefaultPrice = defaultPrice;
            this.CostPrice = costPrice;
            this.ListPrice = listPrice;
            this.WholesalePrice = wholesalePrice;
            this.AdvancedPrice = advancedPrice;
            this.TaxClassId = taxClassId;
            this.AvailForSale = availForSale;
            this.AllowBackorders = allowBackorders;
            this.InStock = inStock;
            this.OnSale = onSale;
            this.ManageStock = manageStock;
            this.InventoryLevel = inventoryLevel;
            this.Inventory = inventory;
            this.MinQuantity = minQuantity;
            this.DefaultQtyInPack = defaultQtyInPack;
            this.IsQtyInPackFixed = isQtyInPackFixed;
            this.WeightUnit = weightUnit;
            this.Weight = weight;
            this.DimensionsUnit = dimensionsUnit;
            this.Width = width;
            this.Height = height;
            this.Length = length;
            this.MetaTitle = metaTitle;
            this.MetaDescription = metaDescription;
            this.MetaKeywords = metaKeywords;
            this.Discounts = discounts;
            this.IsVirtual = isVirtual;
            this.AdditionalFields = additionalFields;
            this.CustomFields = customFields;
        }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets ParentId
        /// </summary>
        [DataMember(Name = "parent_id", EmitDefaultValue = false)]
        public string ParentId { get; set; }

        /// <summary>
        /// Gets or Sets Sku
        /// </summary>
        [DataMember(Name = "sku", EmitDefaultValue = false)]
        public string Sku { get; set; }

        /// <summary>
        /// Gets or Sets Upc
        /// </summary>
        [DataMember(Name = "upc", EmitDefaultValue = false)]
        public string Upc { get; set; }

        /// <summary>
        /// Gets or Sets Ean
        /// </summary>
        [DataMember(Name = "ean", EmitDefaultValue = false)]
        public string Ean { get; set; }

        /// <summary>
        /// Gets or Sets Mpn
        /// </summary>
        [DataMember(Name = "mpn", EmitDefaultValue = false)]
        public string Mpn { get; set; }

        /// <summary>
        /// Gets or Sets Gtin
        /// </summary>
        [DataMember(Name = "gtin", EmitDefaultValue = false)]
        public string Gtin { get; set; }

        /// <summary>
        /// Gets or Sets Isbn
        /// </summary>
        [DataMember(Name = "isbn", EmitDefaultValue = false)]
        public string Isbn { get; set; }

        /// <summary>
        /// Gets or Sets Url
        /// </summary>
        [DataMember(Name = "url", EmitDefaultValue = false)]
        public string Url { get; set; }

        /// <summary>
        /// Gets or Sets SeoUrl
        /// </summary>
        [DataMember(Name = "seo_url", EmitDefaultValue = false)]
        public string SeoUrl { get; set; }

        /// <summary>
        /// Gets or Sets SortOrder
        /// </summary>
        [DataMember(Name = "sort_order", EmitDefaultValue = false)]
        public int SortOrder { get; set; }

        /// <summary>
        /// Gets or Sets CreatedTime
        /// </summary>
        [DataMember(Name = "created_time", EmitDefaultValue = false)]
        public A2CDateTime CreatedTime { get; set; }

        /// <summary>
        /// Gets or Sets ModifiedTime
        /// </summary>
        [DataMember(Name = "modified_time", EmitDefaultValue = false)]
        public A2CDateTime ModifiedTime { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets ShortDescription
        /// </summary>
        [DataMember(Name = "short_description", EmitDefaultValue = false)]
        public string ShortDescription { get; set; }

        /// <summary>
        /// Gets or Sets FullDescription
        /// </summary>
        [DataMember(Name = "full_description", EmitDefaultValue = false)]
        public string FullDescription { get; set; }

        /// <summary>
        /// Gets or Sets Images
        /// </summary>
        [DataMember(Name = "images", EmitDefaultValue = false)]
        public List<Image> Images { get; set; }

        /// <summary>
        /// Gets or Sets Combination
        /// </summary>
        [DataMember(Name = "combination", EmitDefaultValue = false)]
        public List<ProductChildItemCombination> Combination { get; set; }

        /// <summary>
        /// Gets or Sets DefaultPrice
        /// </summary>
        [DataMember(Name = "default_price", EmitDefaultValue = false)]
        public decimal DefaultPrice { get; set; }

        /// <summary>
        /// Gets or Sets CostPrice
        /// </summary>
        [DataMember(Name = "cost_price", EmitDefaultValue = false)]
        public decimal CostPrice { get; set; }

        /// <summary>
        /// Gets or Sets ListPrice
        /// </summary>
        [DataMember(Name = "list_price", EmitDefaultValue = false)]
        public decimal ListPrice { get; set; }

        /// <summary>
        /// Gets or Sets WholesalePrice
        /// </summary>
        [DataMember(Name = "wholesale_price", EmitDefaultValue = false)]
        public decimal WholesalePrice { get; set; }

        /// <summary>
        /// Gets or Sets AdvancedPrice
        /// </summary>
        [DataMember(Name = "advanced_price", EmitDefaultValue = false)]
        public List<ProductAdvancedPrice> AdvancedPrice { get; set; }

        /// <summary>
        /// Gets or Sets TaxClassId
        /// </summary>
        [DataMember(Name = "tax_class_id", EmitDefaultValue = false)]
        public string TaxClassId { get; set; }

        /// <summary>
        /// Gets or Sets AvailForSale
        /// </summary>
        [DataMember(Name = "avail_for_sale", EmitDefaultValue = true)]
        public bool AvailForSale { get; set; }

        /// <summary>
        /// Gets or Sets AllowBackorders
        /// </summary>
        [DataMember(Name = "allow_backorders", EmitDefaultValue = true)]
        public bool AllowBackorders { get; set; }

        /// <summary>
        /// Gets or Sets InStock
        /// </summary>
        [DataMember(Name = "in_stock", EmitDefaultValue = true)]
        public bool InStock { get; set; }

        /// <summary>
        /// Gets or Sets OnSale
        /// </summary>
        [DataMember(Name = "on_sale", EmitDefaultValue = true)]
        public bool OnSale { get; set; }

        /// <summary>
        /// Gets or Sets ManageStock
        /// </summary>
        [DataMember(Name = "manage_stock", EmitDefaultValue = true)]
        public bool ManageStock { get; set; }

        /// <summary>
        /// Gets or Sets InventoryLevel
        /// </summary>
        [DataMember(Name = "inventory_level", EmitDefaultValue = false)]
        public decimal InventoryLevel { get; set; }

        /// <summary>
        /// Gets or Sets Inventory
        /// </summary>
        [DataMember(Name = "inventory", EmitDefaultValue = false)]
        public List<ProductInventory> Inventory { get; set; }

        /// <summary>
        /// Gets or Sets MinQuantity
        /// </summary>
        [DataMember(Name = "min_quantity", EmitDefaultValue = false)]
        public decimal MinQuantity { get; set; }

        /// <summary>
        /// Gets or Sets DefaultQtyInPack
        /// </summary>
        [DataMember(Name = "default_qty_in_pack", EmitDefaultValue = false)]
        public decimal DefaultQtyInPack { get; set; }

        /// <summary>
        /// Gets or Sets IsQtyInPackFixed
        /// </summary>
        [DataMember(Name = "is_qty_in_pack_fixed", EmitDefaultValue = true)]
        public bool IsQtyInPackFixed { get; set; }

        /// <summary>
        /// Gets or Sets WeightUnit
        /// </summary>
        [DataMember(Name = "weight_unit", EmitDefaultValue = false)]
        public string WeightUnit { get; set; }

        /// <summary>
        /// Gets or Sets Weight
        /// </summary>
        [DataMember(Name = "weight", EmitDefaultValue = false)]
        public decimal Weight { get; set; }

        /// <summary>
        /// Gets or Sets DimensionsUnit
        /// </summary>
        [DataMember(Name = "dimensions_unit", EmitDefaultValue = false)]
        public string DimensionsUnit { get; set; }

        /// <summary>
        /// Gets or Sets Width
        /// </summary>
        [DataMember(Name = "width", EmitDefaultValue = false)]
        public decimal Width { get; set; }

        /// <summary>
        /// Gets or Sets Height
        /// </summary>
        [DataMember(Name = "height", EmitDefaultValue = false)]
        public decimal Height { get; set; }

        /// <summary>
        /// Gets or Sets Length
        /// </summary>
        [DataMember(Name = "length", EmitDefaultValue = false)]
        public decimal Length { get; set; }

        /// <summary>
        /// Gets or Sets MetaTitle
        /// </summary>
        [DataMember(Name = "meta_title", EmitDefaultValue = false)]
        public string MetaTitle { get; set; }

        /// <summary>
        /// Gets or Sets MetaDescription
        /// </summary>
        [DataMember(Name = "meta_description", EmitDefaultValue = false)]
        public string MetaDescription { get; set; }

        /// <summary>
        /// Gets or Sets MetaKeywords
        /// </summary>
        [DataMember(Name = "meta_keywords", EmitDefaultValue = false)]
        public string MetaKeywords { get; set; }

        /// <summary>
        /// Gets or Sets Discounts
        /// </summary>
        [DataMember(Name = "discounts", EmitDefaultValue = false)]
        public List<Discount> Discounts { get; set; }

        /// <summary>
        /// Gets or Sets IsVirtual
        /// </summary>
        [DataMember(Name = "is_virtual", EmitDefaultValue = true)]
        public bool IsVirtual { get; set; }

        /// <summary>
        /// Gets or Sets AdditionalFields
        /// </summary>
        [DataMember(Name = "additional_fields", EmitDefaultValue = false)]
        public Object AdditionalFields { get; set; }

        /// <summary>
        /// Gets or Sets CustomFields
        /// </summary>
        [DataMember(Name = "custom_fields", EmitDefaultValue = false)]
        public Object CustomFields { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Child {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  ParentId: ").Append(ParentId).Append("\n");
            sb.Append("  Sku: ").Append(Sku).Append("\n");
            sb.Append("  Upc: ").Append(Upc).Append("\n");
            sb.Append("  Ean: ").Append(Ean).Append("\n");
            sb.Append("  Mpn: ").Append(Mpn).Append("\n");
            sb.Append("  Gtin: ").Append(Gtin).Append("\n");
            sb.Append("  Isbn: ").Append(Isbn).Append("\n");
            sb.Append("  Url: ").Append(Url).Append("\n");
            sb.Append("  SeoUrl: ").Append(SeoUrl).Append("\n");
            sb.Append("  SortOrder: ").Append(SortOrder).Append("\n");
            sb.Append("  CreatedTime: ").Append(CreatedTime).Append("\n");
            sb.Append("  ModifiedTime: ").Append(ModifiedTime).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  ShortDescription: ").Append(ShortDescription).Append("\n");
            sb.Append("  FullDescription: ").Append(FullDescription).Append("\n");
            sb.Append("  Images: ").Append(Images).Append("\n");
            sb.Append("  Combination: ").Append(Combination).Append("\n");
            sb.Append("  DefaultPrice: ").Append(DefaultPrice).Append("\n");
            sb.Append("  CostPrice: ").Append(CostPrice).Append("\n");
            sb.Append("  ListPrice: ").Append(ListPrice).Append("\n");
            sb.Append("  WholesalePrice: ").Append(WholesalePrice).Append("\n");
            sb.Append("  AdvancedPrice: ").Append(AdvancedPrice).Append("\n");
            sb.Append("  TaxClassId: ").Append(TaxClassId).Append("\n");
            sb.Append("  AvailForSale: ").Append(AvailForSale).Append("\n");
            sb.Append("  AllowBackorders: ").Append(AllowBackorders).Append("\n");
            sb.Append("  InStock: ").Append(InStock).Append("\n");
            sb.Append("  OnSale: ").Append(OnSale).Append("\n");
            sb.Append("  ManageStock: ").Append(ManageStock).Append("\n");
            sb.Append("  InventoryLevel: ").Append(InventoryLevel).Append("\n");
            sb.Append("  Inventory: ").Append(Inventory).Append("\n");
            sb.Append("  MinQuantity: ").Append(MinQuantity).Append("\n");
            sb.Append("  DefaultQtyInPack: ").Append(DefaultQtyInPack).Append("\n");
            sb.Append("  IsQtyInPackFixed: ").Append(IsQtyInPackFixed).Append("\n");
            sb.Append("  WeightUnit: ").Append(WeightUnit).Append("\n");
            sb.Append("  Weight: ").Append(Weight).Append("\n");
            sb.Append("  DimensionsUnit: ").Append(DimensionsUnit).Append("\n");
            sb.Append("  Width: ").Append(Width).Append("\n");
            sb.Append("  Height: ").Append(Height).Append("\n");
            sb.Append("  Length: ").Append(Length).Append("\n");
            sb.Append("  MetaTitle: ").Append(MetaTitle).Append("\n");
            sb.Append("  MetaDescription: ").Append(MetaDescription).Append("\n");
            sb.Append("  MetaKeywords: ").Append(MetaKeywords).Append("\n");
            sb.Append("  Discounts: ").Append(Discounts).Append("\n");
            sb.Append("  IsVirtual: ").Append(IsVirtual).Append("\n");
            sb.Append("  AdditionalFields: ").Append(AdditionalFields).Append("\n");
            sb.Append("  CustomFields: ").Append(CustomFields).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
