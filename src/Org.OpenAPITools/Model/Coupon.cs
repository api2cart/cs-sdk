/*
 * API2Cart OpenAPI
 *
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// Coupon
    /// </summary>
    [DataContract(Name = "Coupon")]
    public partial class Coupon : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Coupon" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="code">code.</param>
        /// <param name="codes">codes.</param>
        /// <param name="name">name.</param>
        /// <param name="description">description.</param>
        /// <param name="actions">actions.</param>
        /// <param name="dateStart">dateStart.</param>
        /// <param name="dateEnd">dateEnd.</param>
        /// <param name="avail">avail.</param>
        /// <param name="priority">priority.</param>
        /// <param name="usedTimes">usedTimes.</param>
        /// <param name="usageLimit">usageLimit.</param>
        /// <param name="usageLimitPerCustomer">usageLimitPerCustomer.</param>
        /// <param name="logicOperator">logicOperator.</param>
        /// <param name="conditions">conditions.</param>
        /// <param name="usageHistory">usageHistory.</param>
        /// <param name="additionalFields">additionalFields.</param>
        /// <param name="customFields">customFields.</param>
        public Coupon(string id = default(string), string code = default(string), List<CouponCode> codes = default(List<CouponCode>), string name = default(string), string description = default(string), List<CouponAction> actions = default(List<CouponAction>), A2CDateTime dateStart = default(A2CDateTime), A2CDateTime dateEnd = default(A2CDateTime), bool avail = default(bool), int priority = default(int), int usedTimes = default(int), int usageLimit = default(int), int usageLimitPerCustomer = default(int), string logicOperator = default(string), List<CouponCondition> conditions = default(List<CouponCondition>), List<CouponHistory> usageHistory = default(List<CouponHistory>), Object additionalFields = default(Object), Object customFields = default(Object))
        {
            this.Id = id;
            this.Code = code;
            this.Codes = codes;
            this.Name = name;
            this.Description = description;
            this.Actions = actions;
            this.DateStart = dateStart;
            this.DateEnd = dateEnd;
            this.Avail = avail;
            this.Priority = priority;
            this.UsedTimes = usedTimes;
            this.UsageLimit = usageLimit;
            this.UsageLimitPerCustomer = usageLimitPerCustomer;
            this.LogicOperator = logicOperator;
            this.Conditions = conditions;
            this.UsageHistory = usageHistory;
            this.AdditionalFields = additionalFields;
            this.CustomFields = customFields;
        }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets Code
        /// </summary>
        [DataMember(Name = "code", EmitDefaultValue = false)]
        public string Code { get; set; }

        /// <summary>
        /// Gets or Sets Codes
        /// </summary>
        [DataMember(Name = "codes", EmitDefaultValue = false)]
        public List<CouponCode> Codes { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name = "description", EmitDefaultValue = false)]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets Actions
        /// </summary>
        [DataMember(Name = "actions", EmitDefaultValue = false)]
        public List<CouponAction> Actions { get; set; }

        /// <summary>
        /// Gets or Sets DateStart
        /// </summary>
        [DataMember(Name = "date_start", EmitDefaultValue = false)]
        public A2CDateTime DateStart { get; set; }

        /// <summary>
        /// Gets or Sets DateEnd
        /// </summary>
        [DataMember(Name = "date_end", EmitDefaultValue = false)]
        public A2CDateTime DateEnd { get; set; }

        /// <summary>
        /// Gets or Sets Avail
        /// </summary>
        [DataMember(Name = "avail", EmitDefaultValue = true)]
        public bool Avail { get; set; }

        /// <summary>
        /// Gets or Sets Priority
        /// </summary>
        [DataMember(Name = "priority", EmitDefaultValue = false)]
        public int Priority { get; set; }

        /// <summary>
        /// Gets or Sets UsedTimes
        /// </summary>
        [DataMember(Name = "used_times", EmitDefaultValue = false)]
        public int UsedTimes { get; set; }

        /// <summary>
        /// Gets or Sets UsageLimit
        /// </summary>
        [DataMember(Name = "usage_limit", EmitDefaultValue = false)]
        public int UsageLimit { get; set; }

        /// <summary>
        /// Gets or Sets UsageLimitPerCustomer
        /// </summary>
        [DataMember(Name = "usage_limit_per_customer", EmitDefaultValue = false)]
        public int UsageLimitPerCustomer { get; set; }

        /// <summary>
        /// Gets or Sets LogicOperator
        /// </summary>
        [DataMember(Name = "logic_operator", EmitDefaultValue = false)]
        public string LogicOperator { get; set; }

        /// <summary>
        /// Gets or Sets Conditions
        /// </summary>
        [DataMember(Name = "conditions", EmitDefaultValue = false)]
        public List<CouponCondition> Conditions { get; set; }

        /// <summary>
        /// Gets or Sets UsageHistory
        /// </summary>
        [DataMember(Name = "usage_history", EmitDefaultValue = false)]
        public List<CouponHistory> UsageHistory { get; set; }

        /// <summary>
        /// Gets or Sets AdditionalFields
        /// </summary>
        [DataMember(Name = "additional_fields", EmitDefaultValue = false)]
        public Object AdditionalFields { get; set; }

        /// <summary>
        /// Gets or Sets CustomFields
        /// </summary>
        [DataMember(Name = "custom_fields", EmitDefaultValue = false)]
        public Object CustomFields { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Coupon {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Code: ").Append(Code).Append("\n");
            sb.Append("  Codes: ").Append(Codes).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  Actions: ").Append(Actions).Append("\n");
            sb.Append("  DateStart: ").Append(DateStart).Append("\n");
            sb.Append("  DateEnd: ").Append(DateEnd).Append("\n");
            sb.Append("  Avail: ").Append(Avail).Append("\n");
            sb.Append("  Priority: ").Append(Priority).Append("\n");
            sb.Append("  UsedTimes: ").Append(UsedTimes).Append("\n");
            sb.Append("  UsageLimit: ").Append(UsageLimit).Append("\n");
            sb.Append("  UsageLimitPerCustomer: ").Append(UsageLimitPerCustomer).Append("\n");
            sb.Append("  LogicOperator: ").Append(LogicOperator).Append("\n");
            sb.Append("  Conditions: ").Append(Conditions).Append("\n");
            sb.Append("  UsageHistory: ").Append(UsageHistory).Append("\n");
            sb.Append("  AdditionalFields: ").Append(AdditionalFields).Append("\n");
            sb.Append("  CustomFields: ").Append(CustomFields).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
