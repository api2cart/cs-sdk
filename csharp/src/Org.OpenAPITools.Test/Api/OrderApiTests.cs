/*
 * API2Cart OpenAPI
 *
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing OrderApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class OrderApiTests : IDisposable
    {
        private OrderApi instance;

        public OrderApiTests()
        {
            instance = new OrderApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of OrderApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' OrderApi
            //Assert.IsType<OrderApi>(instance);
        }

        /// <summary>
        /// Test OrderAbandonedList
        /// </summary>
        [Fact]
        public void OrderAbandonedListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? customerId = null;
            //string? customerEmail = null;
            //string? createdTo = null;
            //string? createdFrom = null;
            //string? modifiedTo = null;
            //string? modifiedFrom = null;
            //bool? skipEmptyEmail = null;
            //string? storeId = null;
            //string? pageCursor = null;
            //int? count = null;
            //int? start = null;
            //string? varParams = null;
            //string? responseFields = null;
            //string? exclude = null;
            //var response = instance.OrderAbandonedList(customerId, customerEmail, createdTo, createdFrom, modifiedTo, modifiedFrom, skipEmptyEmail, storeId, pageCursor, count, start, varParams, responseFields, exclude);
            //Assert.IsType<ModelResponseOrderAbandonedList>(response);
        }

        /// <summary>
        /// Test OrderAdd
        /// </summary>
        [Fact]
        public void OrderAddTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //OrderAdd orderAdd = null;
            //var response = instance.OrderAdd(orderAdd);
            //Assert.IsType<OrderAdd200Response>(response);
        }

        /// <summary>
        /// Test OrderCount
        /// </summary>
        [Fact]
        public void OrderCountTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? customerId = null;
            //string? customerEmail = null;
            //string? orderStatus = null;
            //List<string>? orderStatusIds = null;
            //string? createdTo = null;
            //string? createdFrom = null;
            //string? modifiedTo = null;
            //string? modifiedFrom = null;
            //string? storeId = null;
            //string? ids = null;
            //string? orderIds = null;
            //string? ebayOrderStatus = null;
            //string? financialStatus = null;
            //List<string>? financialStatusIds = null;
            //string? fulfillmentChannel = null;
            //string? fulfillmentStatus = null;
            //string? shippingMethod = null;
            //string? deliveryMethod = null;
            //string? tags = null;
            //string? shipNodeType = null;
            //var response = instance.OrderCount(customerId, customerEmail, orderStatus, orderStatusIds, createdTo, createdFrom, modifiedTo, modifiedFrom, storeId, ids, orderIds, ebayOrderStatus, financialStatus, financialStatusIds, fulfillmentChannel, fulfillmentStatus, shippingMethod, deliveryMethod, tags, shipNodeType);
            //Assert.IsType<OrderCount200Response>(response);
        }

        /// <summary>
        /// Test OrderFinancialStatusList
        /// </summary>
        [Fact]
        public void OrderFinancialStatusListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.OrderFinancialStatusList();
            //Assert.IsType<OrderFinancialStatusList200Response>(response);
        }

        /// <summary>
        /// Test OrderFind
        /// </summary>
        [Fact]
        public void OrderFindTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? customerId = null;
            //string? customerEmail = null;
            //string? orderStatus = null;
            //int? start = null;
            //int? count = null;
            //string? varParams = null;
            //string? exclude = null;
            //string? createdTo = null;
            //string? createdFrom = null;
            //string? modifiedTo = null;
            //string? modifiedFrom = null;
            //string? financialStatus = null;
            //var response = instance.OrderFind(customerId, customerEmail, orderStatus, start, count, varParams, exclude, createdTo, createdFrom, modifiedTo, modifiedFrom, financialStatus);
            //Assert.IsType<OrderFind200Response>(response);
        }

        /// <summary>
        /// Test OrderFulfillmentStatusList
        /// </summary>
        [Fact]
        public void OrderFulfillmentStatusListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? action = null;
            //var response = instance.OrderFulfillmentStatusList(action);
            //Assert.IsType<OrderFulfillmentStatusList200Response>(response);
        }

        /// <summary>
        /// Test OrderInfo
        /// </summary>
        [Fact]
        public void OrderInfoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? orderId = null;
            //string? id = null;
            //string? varParams = null;
            //string? responseFields = null;
            //string? exclude = null;
            //string? storeId = null;
            //bool? enableCache = null;
            //bool? useLatestApiVersion = null;
            //var response = instance.OrderInfo(orderId, id, varParams, responseFields, exclude, storeId, enableCache, useLatestApiVersion);
            //Assert.IsType<OrderInfo200Response>(response);
        }

        /// <summary>
        /// Test OrderList
        /// </summary>
        [Fact]
        public void OrderListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? customerId = null;
            //string? customerEmail = null;
            //string? phone = null;
            //string? orderStatus = null;
            //List<string>? orderStatusIds = null;
            //int? start = null;
            //int? count = null;
            //string? pageCursor = null;
            //string? sortBy = null;
            //string? sortDirection = null;
            //string? varParams = null;
            //string? responseFields = null;
            //string? exclude = null;
            //string? createdTo = null;
            //string? createdFrom = null;
            //string? modifiedTo = null;
            //string? modifiedFrom = null;
            //string? storeId = null;
            //string? ids = null;
            //string? orderIds = null;
            //string? ebayOrderStatus = null;
            //string? basketId = null;
            //string? financialStatus = null;
            //List<string>? financialStatusIds = null;
            //string? fulfillmentStatus = null;
            //string? fulfillmentChannel = null;
            //string? shippingMethod = null;
            //string? skipOrderIds = null;
            //string? sinceId = null;
            //bool? isDeleted = null;
            //string? shippingCountryIso3 = null;
            //bool? enableCache = null;
            //string? deliveryMethod = null;
            //string? tags = null;
            //string? shipNodeType = null;
            //string? currencyId = null;
            //string? returnStatus = null;
            //bool? useLatestApiVersion = null;
            //var response = instance.OrderList(customerId, customerEmail, phone, orderStatus, orderStatusIds, start, count, pageCursor, sortBy, sortDirection, varParams, responseFields, exclude, createdTo, createdFrom, modifiedTo, modifiedFrom, storeId, ids, orderIds, ebayOrderStatus, basketId, financialStatus, financialStatusIds, fulfillmentStatus, fulfillmentChannel, shippingMethod, skipOrderIds, sinceId, isDeleted, shippingCountryIso3, enableCache, deliveryMethod, tags, shipNodeType, currencyId, returnStatus, useLatestApiVersion);
            //Assert.IsType<ModelResponseOrderList>(response);
        }

        /// <summary>
        /// Test OrderPreestimateShippingList
        /// </summary>
        [Fact]
        public void OrderPreestimateShippingListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //OrderPreestimateShippingList orderPreestimateShippingList = null;
            //var response = instance.OrderPreestimateShippingList(orderPreestimateShippingList);
            //Assert.IsType<ModelResponseOrderPreestimateShippingList>(response);
        }

        /// <summary>
        /// Test OrderRefundAdd
        /// </summary>
        [Fact]
        public void OrderRefundAddTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //OrderRefundAdd orderRefundAdd = null;
            //var response = instance.OrderRefundAdd(orderRefundAdd);
            //Assert.IsType<OrderRefundAdd200Response>(response);
        }

        /// <summary>
        /// Test OrderReturnAdd
        /// </summary>
        [Fact]
        public void OrderReturnAddTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //OrderReturnAdd orderReturnAdd = null;
            //var response = instance.OrderReturnAdd(orderReturnAdd);
            //Assert.IsType<OrderReturnAdd200Response>(response);
        }

        /// <summary>
        /// Test OrderReturnDelete
        /// </summary>
        [Fact]
        public void OrderReturnDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string returnId = null;
            //string orderId = null;
            //string? storeId = null;
            //var response = instance.OrderReturnDelete(returnId, orderId, storeId);
            //Assert.IsType<AttributeValueDelete200Response>(response);
        }

        /// <summary>
        /// Test OrderReturnUpdate
        /// </summary>
        [Fact]
        public void OrderReturnUpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //OrderReturnUpdate orderReturnUpdate = null;
            //var response = instance.OrderReturnUpdate(orderReturnUpdate);
            //Assert.IsType<AccountConfigUpdate200Response>(response);
        }

        /// <summary>
        /// Test OrderShipmentAdd
        /// </summary>
        [Fact]
        public void OrderShipmentAddTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //OrderShipmentAdd orderShipmentAdd = null;
            //var response = instance.OrderShipmentAdd(orderShipmentAdd);
            //Assert.IsType<OrderShipmentAdd200Response>(response);
        }

        /// <summary>
        /// Test OrderShipmentAddBatch
        /// </summary>
        [Fact]
        public void OrderShipmentAddBatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //OrderShipmentAddBatch orderShipmentAddBatch = null;
            //var response = instance.OrderShipmentAddBatch(orderShipmentAddBatch);
            //Assert.IsType<CategoryAddBatch200Response>(response);
        }

        /// <summary>
        /// Test OrderShipmentDelete
        /// </summary>
        [Fact]
        public void OrderShipmentDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string shipmentId = null;
            //string orderId = null;
            //string? storeId = null;
            //var response = instance.OrderShipmentDelete(shipmentId, orderId, storeId);
            //Assert.IsType<OrderShipmentDelete200Response>(response);
        }

        /// <summary>
        /// Test OrderShipmentInfo
        /// </summary>
        [Fact]
        public void OrderShipmentInfoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string orderId = null;
            //int? start = null;
            //string? varParams = null;
            //string? responseFields = null;
            //string? exclude = null;
            //string? storeId = null;
            //var response = instance.OrderShipmentInfo(id, orderId, start, varParams, responseFields, exclude, storeId);
            //Assert.IsType<OrderShipmentInfo200Response>(response);
        }

        /// <summary>
        /// Test OrderShipmentList
        /// </summary>
        [Fact]
        public void OrderShipmentListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string orderId = null;
            //string? pageCursor = null;
            //int? start = null;
            //int? count = null;
            //string? varParams = null;
            //string? responseFields = null;
            //string? exclude = null;
            //string? createdFrom = null;
            //string? createdTo = null;
            //string? modifiedFrom = null;
            //string? modifiedTo = null;
            //string? storeId = null;
            //var response = instance.OrderShipmentList(orderId, pageCursor, start, count, varParams, responseFields, exclude, createdFrom, createdTo, modifiedFrom, modifiedTo, storeId);
            //Assert.IsType<ModelResponseOrderShipmentList>(response);
        }

        /// <summary>
        /// Test OrderShipmentTrackingAdd
        /// </summary>
        [Fact]
        public void OrderShipmentTrackingAddTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //OrderShipmentTrackingAdd orderShipmentTrackingAdd = null;
            //var response = instance.OrderShipmentTrackingAdd(orderShipmentTrackingAdd);
            //Assert.IsType<OrderShipmentTrackingAdd200Response>(response);
        }

        /// <summary>
        /// Test OrderShipmentUpdate
        /// </summary>
        [Fact]
        public void OrderShipmentUpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //OrderShipmentUpdate orderShipmentUpdate = null;
            //var response = instance.OrderShipmentUpdate(orderShipmentUpdate);
            //Assert.IsType<AccountConfigUpdate200Response>(response);
        }

        /// <summary>
        /// Test OrderStatusList
        /// </summary>
        [Fact]
        public void OrderStatusListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? storeId = null;
            //string? action = null;
            //string? responseFields = null;
            //var response = instance.OrderStatusList(storeId, action, responseFields);
            //Assert.IsType<ModelResponseOrderStatusList>(response);
        }

        /// <summary>
        /// Test OrderTransactionList
        /// </summary>
        [Fact]
        public void OrderTransactionListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string orderIds = null;
            //int? count = null;
            //string? storeId = null;
            //string? varParams = null;
            //string? responseFields = null;
            //string? exclude = null;
            //string? pageCursor = null;
            //var response = instance.OrderTransactionList(orderIds, count, storeId, varParams, responseFields, exclude, pageCursor);
            //Assert.IsType<ModelResponseOrderTransactionList>(response);
        }

        /// <summary>
        /// Test OrderUpdate
        /// </summary>
        [Fact]
        public void OrderUpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string orderId = null;
            //string? storeId = null;
            //string? orderStatus = null;
            //string? cancellationReason = null;
            //string? comment = null;
            //string? adminComment = null;
            //string? adminPrivateComment = null;
            //string? dateModified = null;
            //string? dateFinished = null;
            //string? financialStatus = null;
            //string? fulfillmentStatus = null;
            //string? orderPaymentMethod = null;
            //bool? sendNotifications = null;
            //string? origin = null;
            //bool? createInvoice = null;
            //string? invoiceAdminComment = null;
            //var response = instance.OrderUpdate(orderId, storeId, orderStatus, cancellationReason, comment, adminComment, adminPrivateComment, dateModified, dateFinished, financialStatus, fulfillmentStatus, orderPaymentMethod, sendNotifications, origin, createInvoice, invoiceAdminComment);
            //Assert.IsType<AccountConfigUpdate200Response>(response);
        }
    }
}
