/*
 * API2Cart OpenAPI
 *
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// CartConfigUpdate
    /// </summary>
    [DataContract(Name = "CartConfigUpdate")]
    public partial class CartConfigUpdate : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CartConfigUpdate" /> class.
        /// </summary>
        /// <param name="dbTablesPrefix">This parameter is deprecated for this method. Please, use this parameter in method account.config.update.</param>
        /// <param name="customFields">This parameter sets the list of params to the shopping cart..</param>
        /// <param name="storeId">Store Id.</param>
        /// <param name="userAgent">This parameter allows you to set your custom user agent, which will be used in requests to the store. Please use it cautiously, as the store&#39;s firewall may block specific values..</param>
        public CartConfigUpdate(string dbTablesPrefix = default(string), Object customFields = default(Object), string storeId = default(string), string userAgent = default(string))
        {
            this.DbTablesPrefix = dbTablesPrefix;
            this.CustomFields = customFields;
            this.StoreId = storeId;
            this.UserAgent = userAgent;
        }

        /// <summary>
        /// This parameter is deprecated for this method. Please, use this parameter in method account.config.update
        /// </summary>
        /// <value>This parameter is deprecated for this method. Please, use this parameter in method account.config.update</value>
        /*
        <example>oc_</example>
        */
        [DataMember(Name = "db_tables_prefix", EmitDefaultValue = false)]
        public string DbTablesPrefix { get; set; }

        /// <summary>
        /// This parameter sets the list of params to the shopping cart.
        /// </summary>
        /// <value>This parameter sets the list of params to the shopping cart.</value>
        [DataMember(Name = "custom_fields", EmitDefaultValue = false)]
        public Object CustomFields { get; set; }

        /// <summary>
        /// Store Id
        /// </summary>
        /// <value>Store Id</value>
        /*
        <example>1</example>
        */
        [DataMember(Name = "store_id", EmitDefaultValue = false)]
        public string StoreId { get; set; }

        /// <summary>
        /// This parameter allows you to set your custom user agent, which will be used in requests to the store. Please use it cautiously, as the store&#39;s firewall may block specific values.
        /// </summary>
        /// <value>This parameter allows you to set your custom user agent, which will be used in requests to the store. Please use it cautiously, as the store&#39;s firewall may block specific values.</value>
        /*
        <example>Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0</example>
        */
        [DataMember(Name = "user_agent", EmitDefaultValue = false)]
        public string UserAgent { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CartConfigUpdate {\n");
            sb.Append("  DbTablesPrefix: ").Append(DbTablesPrefix).Append("\n");
            sb.Append("  CustomFields: ").Append(CustomFields).Append("\n");
            sb.Append("  StoreId: ").Append(StoreId).Append("\n");
            sb.Append("  UserAgent: ").Append(UserAgent).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
