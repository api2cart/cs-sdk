/*
 * API2Cart OpenAPI
 *
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// OrderReturnUpdateOrderProductsInner
    /// </summary>
    [DataContract(Name = "OrderReturnUpdate_order_products_inner")]
    public partial class OrderReturnUpdateOrderProductsInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="OrderReturnUpdateOrderProductsInner" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected OrderReturnUpdateOrderProductsInner() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="OrderReturnUpdateOrderProductsInner" /> class.
        /// </summary>
        /// <param name="orderProductId">Defines which products from the order should be returned (required).</param>
        /// <param name="orderProductQuantity">Defines how many product units from the order should be returned (required).</param>
        /// <param name="orderProductStatus">Defines product return status.</param>
        /// <param name="orderProductActionId">Defines the ID of the return action (required).</param>
        public OrderReturnUpdateOrderProductsInner(string orderProductId = default(string), int orderProductQuantity = default(int), string orderProductStatus = default(string), string orderProductActionId = default(string))
        {
            // to ensure "orderProductId" is required (not null)
            if (orderProductId == null)
            {
                throw new ArgumentNullException("orderProductId is a required property for OrderReturnUpdateOrderProductsInner and cannot be null");
            }
            this.OrderProductId = orderProductId;
            this.OrderProductQuantity = orderProductQuantity;
            // to ensure "orderProductActionId" is required (not null)
            if (orderProductActionId == null)
            {
                throw new ArgumentNullException("orderProductActionId is a required property for OrderReturnUpdateOrderProductsInner and cannot be null");
            }
            this.OrderProductActionId = orderProductActionId;
            this.OrderProductStatus = orderProductStatus;
        }

        /// <summary>
        /// Defines which products from the order should be returned
        /// </summary>
        /// <value>Defines which products from the order should be returned</value>
        /*
        <example>125, where {x} - 1,2,3,... etc</example>
        */
        [DataMember(Name = "order_product_id", IsRequired = true, EmitDefaultValue = true)]
        public string OrderProductId { get; set; }

        /// <summary>
        /// Defines how many product units from the order should be returned
        /// </summary>
        /// <value>Defines how many product units from the order should be returned</value>
        /*
        <example>1, where {x} - 1,2,3,... etc</example>
        */
        [DataMember(Name = "order_product_quantity", IsRequired = true, EmitDefaultValue = true)]
        public int OrderProductQuantity { get; set; }

        /// <summary>
        /// Defines product return status
        /// </summary>
        /// <value>Defines product return status</value>
        /*
        <example>pending</example>
        */
        [DataMember(Name = "order_product_status", EmitDefaultValue = false)]
        public string OrderProductStatus { get; set; }

        /// <summary>
        /// Defines the ID of the return action
        /// </summary>
        /// <value>Defines the ID of the return action</value>
        /*
        <example>REFUND, where {x} - 1,2,3,... etc</example>
        */
        [DataMember(Name = "order_product_action_id", IsRequired = true, EmitDefaultValue = true)]
        public string OrderProductActionId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class OrderReturnUpdateOrderProductsInner {\n");
            sb.Append("  OrderProductId: ").Append(OrderProductId).Append("\n");
            sb.Append("  OrderProductQuantity: ").Append(OrderProductQuantity).Append("\n");
            sb.Append("  OrderProductStatus: ").Append(OrderProductStatus).Append("\n");
            sb.Append("  OrderProductActionId: ").Append(OrderProductActionId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
