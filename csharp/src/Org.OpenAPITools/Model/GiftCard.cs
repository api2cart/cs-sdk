/*
 * API2Cart OpenAPI
 *
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// GiftCard
    /// </summary>
    [DataContract(Name = "GiftCard")]
    public partial class GiftCard : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GiftCard" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="code">code.</param>
        /// <param name="name">name.</param>
        /// <param name="type">type.</param>
        /// <param name="currencyCode">currencyCode.</param>
        /// <param name="amount">amount.</param>
        /// <param name="initialAmount">initialAmount.</param>
        /// <param name="status">status.</param>
        /// <param name="createdAt">createdAt.</param>
        /// <param name="availTo">availTo.</param>
        /// <param name="freeProductIds">freeProductIds.</param>
        /// <param name="message">message.</param>
        /// <param name="issuerEmail">issuerEmail.</param>
        /// <param name="recipientEmail">recipientEmail.</param>
        /// <param name="issuerName">issuerName.</param>
        /// <param name="recipientName">recipientName.</param>
        /// <param name="usageHistory">usageHistory.</param>
        /// <param name="additionalFields">additionalFields.</param>
        /// <param name="customFields">customFields.</param>
        public GiftCard(string id = default(string), string code = default(string), string name = default(string), string type = default(string), string currencyCode = default(string), decimal amount = default(decimal), decimal initialAmount = default(decimal), string status = default(string), string createdAt = default(string), string availTo = default(string), string freeProductIds = default(string), string message = default(string), string issuerEmail = default(string), string recipientEmail = default(string), string issuerName = default(string), string recipientName = default(string), List<CouponHistory> usageHistory = default(List<CouponHistory>), Object additionalFields = default(Object), Object customFields = default(Object))
        {
            this.Id = id;
            this.Code = code;
            this.Name = name;
            this.Type = type;
            this.CurrencyCode = currencyCode;
            this.Amount = amount;
            this.InitialAmount = initialAmount;
            this.Status = status;
            this.CreatedAt = createdAt;
            this.AvailTo = availTo;
            this.FreeProductIds = freeProductIds;
            this.Message = message;
            this.IssuerEmail = issuerEmail;
            this.RecipientEmail = recipientEmail;
            this.IssuerName = issuerName;
            this.RecipientName = recipientName;
            this.UsageHistory = usageHistory;
            this.AdditionalFields = additionalFields;
            this.CustomFields = customFields;
        }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets Code
        /// </summary>
        [DataMember(Name = "code", EmitDefaultValue = false)]
        public string Code { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets Type
        /// </summary>
        [DataMember(Name = "type", EmitDefaultValue = false)]
        public string Type { get; set; }

        /// <summary>
        /// Gets or Sets CurrencyCode
        /// </summary>
        [DataMember(Name = "currency_code", EmitDefaultValue = false)]
        public string CurrencyCode { get; set; }

        /// <summary>
        /// Gets or Sets Amount
        /// </summary>
        [DataMember(Name = "amount", EmitDefaultValue = false)]
        public decimal Amount { get; set; }

        /// <summary>
        /// Gets or Sets InitialAmount
        /// </summary>
        [DataMember(Name = "initial_amount", EmitDefaultValue = false)]
        public decimal InitialAmount { get; set; }

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name = "status", EmitDefaultValue = false)]
        public string Status { get; set; }

        /// <summary>
        /// Gets or Sets CreatedAt
        /// </summary>
        [DataMember(Name = "created_at", EmitDefaultValue = false)]
        public string CreatedAt { get; set; }

        /// <summary>
        /// Gets or Sets AvailTo
        /// </summary>
        [DataMember(Name = "avail_to", EmitDefaultValue = false)]
        public string AvailTo { get; set; }

        /// <summary>
        /// Gets or Sets FreeProductIds
        /// </summary>
        [DataMember(Name = "free_product_ids", EmitDefaultValue = false)]
        public string FreeProductIds { get; set; }

        /// <summary>
        /// Gets or Sets Message
        /// </summary>
        [DataMember(Name = "message", EmitDefaultValue = false)]
        public string Message { get; set; }

        /// <summary>
        /// Gets or Sets IssuerEmail
        /// </summary>
        [DataMember(Name = "issuer_email", EmitDefaultValue = false)]
        public string IssuerEmail { get; set; }

        /// <summary>
        /// Gets or Sets RecipientEmail
        /// </summary>
        [DataMember(Name = "recipient_email", EmitDefaultValue = false)]
        public string RecipientEmail { get; set; }

        /// <summary>
        /// Gets or Sets IssuerName
        /// </summary>
        [DataMember(Name = "issuer_name", EmitDefaultValue = false)]
        public string IssuerName { get; set; }

        /// <summary>
        /// Gets or Sets RecipientName
        /// </summary>
        [DataMember(Name = "recipient_name", EmitDefaultValue = false)]
        public string RecipientName { get; set; }

        /// <summary>
        /// Gets or Sets UsageHistory
        /// </summary>
        [DataMember(Name = "usage_history", EmitDefaultValue = false)]
        public List<CouponHistory> UsageHistory { get; set; }

        /// <summary>
        /// Gets or Sets AdditionalFields
        /// </summary>
        [DataMember(Name = "additional_fields", EmitDefaultValue = false)]
        public Object AdditionalFields { get; set; }

        /// <summary>
        /// Gets or Sets CustomFields
        /// </summary>
        [DataMember(Name = "custom_fields", EmitDefaultValue = false)]
        public Object CustomFields { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class GiftCard {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Code: ").Append(Code).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  CurrencyCode: ").Append(CurrencyCode).Append("\n");
            sb.Append("  Amount: ").Append(Amount).Append("\n");
            sb.Append("  InitialAmount: ").Append(InitialAmount).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("  AvailTo: ").Append(AvailTo).Append("\n");
            sb.Append("  FreeProductIds: ").Append(FreeProductIds).Append("\n");
            sb.Append("  Message: ").Append(Message).Append("\n");
            sb.Append("  IssuerEmail: ").Append(IssuerEmail).Append("\n");
            sb.Append("  RecipientEmail: ").Append(RecipientEmail).Append("\n");
            sb.Append("  IssuerName: ").Append(IssuerName).Append("\n");
            sb.Append("  RecipientName: ").Append(RecipientName).Append("\n");
            sb.Append("  UsageHistory: ").Append(UsageHistory).Append("\n");
            sb.Append("  AdditionalFields: ").Append(AdditionalFields).Append("\n");
            sb.Append("  CustomFields: ").Append(CustomFields).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
