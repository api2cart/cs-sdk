/*
 * API2Cart OpenAPI
 *
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// MarketplaceProduct
    /// </summary>
    [DataContract(Name = "Marketplace_Product")]
    public partial class MarketplaceProduct : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="MarketplaceProduct" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="type">type.</param>
        /// <param name="uAsin">uAsin.</param>
        /// <param name="uEan">uEan.</param>
        /// <param name="uGtin">uGtin.</param>
        /// <param name="uIsbn">uIsbn.</param>
        /// <param name="uMpn">uMpn.</param>
        /// <param name="uUpc">uUpc.</param>
        /// <param name="name">name.</param>
        /// <param name="description">description.</param>
        /// <param name="url">url.</param>
        /// <param name="price">price.</param>
        /// <param name="images">images.</param>
        /// <param name="productOptions">productOptions.</param>
        /// <param name="manufacturer">manufacturer.</param>
        /// <param name="brand">brand.</param>
        /// <param name="weight">weight.</param>
        /// <param name="weightUnit">weightUnit.</param>
        /// <param name="dimensionsUnit">dimensionsUnit.</param>
        /// <param name="width">width.</param>
        /// <param name="height">height.</param>
        /// <param name="length">length.</param>
        /// <param name="additionalFields">additionalFields.</param>
        /// <param name="customFields">customFields.</param>
        public MarketplaceProduct(string id = default(string), string type = default(string), string uAsin = default(string), string uEan = default(string), string uGtin = default(string), string uIsbn = default(string), string uMpn = default(string), string uUpc = default(string), string name = default(string), string description = default(string), string url = default(string), decimal price = default(decimal), List<Image> images = default(List<Image>), List<ProductOption> productOptions = default(List<ProductOption>), string manufacturer = default(string), string brand = default(string), decimal weight = default(decimal), string weightUnit = default(string), string dimensionsUnit = default(string), decimal width = default(decimal), decimal height = default(decimal), decimal length = default(decimal), Object additionalFields = default(Object), Object customFields = default(Object))
        {
            this.Id = id;
            this.Type = type;
            this.UAsin = uAsin;
            this.UEan = uEan;
            this.UGtin = uGtin;
            this.UIsbn = uIsbn;
            this.UMpn = uMpn;
            this.UUpc = uUpc;
            this.Name = name;
            this.Description = description;
            this.Url = url;
            this.Price = price;
            this.Images = images;
            this.ProductOptions = productOptions;
            this.Manufacturer = manufacturer;
            this.Brand = brand;
            this.Weight = weight;
            this.WeightUnit = weightUnit;
            this.DimensionsUnit = dimensionsUnit;
            this.Width = width;
            this.Height = height;
            this.Length = length;
            this.AdditionalFields = additionalFields;
            this.CustomFields = customFields;
        }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets Type
        /// </summary>
        [DataMember(Name = "type", EmitDefaultValue = false)]
        public string Type { get; set; }

        /// <summary>
        /// Gets or Sets UAsin
        /// </summary>
        [DataMember(Name = "u_asin", EmitDefaultValue = false)]
        public string UAsin { get; set; }

        /// <summary>
        /// Gets or Sets UEan
        /// </summary>
        [DataMember(Name = "u_ean", EmitDefaultValue = false)]
        public string UEan { get; set; }

        /// <summary>
        /// Gets or Sets UGtin
        /// </summary>
        [DataMember(Name = "u_gtin", EmitDefaultValue = false)]
        public string UGtin { get; set; }

        /// <summary>
        /// Gets or Sets UIsbn
        /// </summary>
        [DataMember(Name = "u_isbn", EmitDefaultValue = false)]
        public string UIsbn { get; set; }

        /// <summary>
        /// Gets or Sets UMpn
        /// </summary>
        [DataMember(Name = "u_mpn", EmitDefaultValue = false)]
        public string UMpn { get; set; }

        /// <summary>
        /// Gets or Sets UUpc
        /// </summary>
        [DataMember(Name = "u_upc", EmitDefaultValue = false)]
        public string UUpc { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name = "description", EmitDefaultValue = false)]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets Url
        /// </summary>
        [DataMember(Name = "url", EmitDefaultValue = false)]
        public string Url { get; set; }

        /// <summary>
        /// Gets or Sets Price
        /// </summary>
        [DataMember(Name = "price", EmitDefaultValue = false)]
        public decimal Price { get; set; }

        /// <summary>
        /// Gets or Sets Images
        /// </summary>
        [DataMember(Name = "images", EmitDefaultValue = false)]
        public List<Image> Images { get; set; }

        /// <summary>
        /// Gets or Sets ProductOptions
        /// </summary>
        [DataMember(Name = "product_options", EmitDefaultValue = false)]
        public List<ProductOption> ProductOptions { get; set; }

        /// <summary>
        /// Gets or Sets Manufacturer
        /// </summary>
        [DataMember(Name = "manufacturer", EmitDefaultValue = false)]
        public string Manufacturer { get; set; }

        /// <summary>
        /// Gets or Sets Brand
        /// </summary>
        [DataMember(Name = "brand", EmitDefaultValue = false)]
        public string Brand { get; set; }

        /// <summary>
        /// Gets or Sets Weight
        /// </summary>
        [DataMember(Name = "weight", EmitDefaultValue = false)]
        public decimal Weight { get; set; }

        /// <summary>
        /// Gets or Sets WeightUnit
        /// </summary>
        [DataMember(Name = "weight_unit", EmitDefaultValue = false)]
        public string WeightUnit { get; set; }

        /// <summary>
        /// Gets or Sets DimensionsUnit
        /// </summary>
        [DataMember(Name = "dimensions_unit", EmitDefaultValue = false)]
        public string DimensionsUnit { get; set; }

        /// <summary>
        /// Gets or Sets Width
        /// </summary>
        [DataMember(Name = "width", EmitDefaultValue = false)]
        public decimal Width { get; set; }

        /// <summary>
        /// Gets or Sets Height
        /// </summary>
        [DataMember(Name = "height", EmitDefaultValue = false)]
        public decimal Height { get; set; }

        /// <summary>
        /// Gets or Sets Length
        /// </summary>
        [DataMember(Name = "length", EmitDefaultValue = false)]
        public decimal Length { get; set; }

        /// <summary>
        /// Gets or Sets AdditionalFields
        /// </summary>
        [DataMember(Name = "additional_fields", EmitDefaultValue = false)]
        public Object AdditionalFields { get; set; }

        /// <summary>
        /// Gets or Sets CustomFields
        /// </summary>
        [DataMember(Name = "custom_fields", EmitDefaultValue = false)]
        public Object CustomFields { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class MarketplaceProduct {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  UAsin: ").Append(UAsin).Append("\n");
            sb.Append("  UEan: ").Append(UEan).Append("\n");
            sb.Append("  UGtin: ").Append(UGtin).Append("\n");
            sb.Append("  UIsbn: ").Append(UIsbn).Append("\n");
            sb.Append("  UMpn: ").Append(UMpn).Append("\n");
            sb.Append("  UUpc: ").Append(UUpc).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  Url: ").Append(Url).Append("\n");
            sb.Append("  Price: ").Append(Price).Append("\n");
            sb.Append("  Images: ").Append(Images).Append("\n");
            sb.Append("  ProductOptions: ").Append(ProductOptions).Append("\n");
            sb.Append("  Manufacturer: ").Append(Manufacturer).Append("\n");
            sb.Append("  Brand: ").Append(Brand).Append("\n");
            sb.Append("  Weight: ").Append(Weight).Append("\n");
            sb.Append("  WeightUnit: ").Append(WeightUnit).Append("\n");
            sb.Append("  DimensionsUnit: ").Append(DimensionsUnit).Append("\n");
            sb.Append("  Width: ").Append(Width).Append("\n");
            sb.Append("  Height: ").Append(Height).Append("\n");
            sb.Append("  Length: ").Append(Length).Append("\n");
            sb.Append("  AdditionalFields: ").Append(AdditionalFields).Append("\n");
            sb.Append("  CustomFields: ").Append(CustomFields).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
