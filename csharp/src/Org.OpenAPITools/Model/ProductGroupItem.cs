/*
 * API2Cart OpenAPI
 *
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// ProductGroupItem
    /// </summary>
    [DataContract(Name = "Product_GroupItem")]
    public partial class ProductGroupItem : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ProductGroupItem" /> class.
        /// </summary>
        /// <param name="childItemId">childItemId.</param>
        /// <param name="productId">productId.</param>
        /// <param name="defaultQtyInPack">defaultQtyInPack.</param>
        /// <param name="isQtyInPackFixed">isQtyInPackFixed.</param>
        /// <param name="price">price.</param>
        /// <param name="additionalFields">additionalFields.</param>
        /// <param name="customFields">customFields.</param>
        public ProductGroupItem(string childItemId = default(string), string productId = default(string), string defaultQtyInPack = default(string), bool isQtyInPackFixed = default(bool), decimal price = default(decimal), Object additionalFields = default(Object), Object customFields = default(Object))
        {
            this.ChildItemId = childItemId;
            this.ProductId = productId;
            this.DefaultQtyInPack = defaultQtyInPack;
            this.IsQtyInPackFixed = isQtyInPackFixed;
            this.Price = price;
            this.AdditionalFields = additionalFields;
            this.CustomFields = customFields;
        }

        /// <summary>
        /// Gets or Sets ChildItemId
        /// </summary>
        [DataMember(Name = "child_item_id", EmitDefaultValue = false)]
        public string ChildItemId { get; set; }

        /// <summary>
        /// Gets or Sets ProductId
        /// </summary>
        [DataMember(Name = "product_id", EmitDefaultValue = false)]
        public string ProductId { get; set; }

        /// <summary>
        /// Gets or Sets DefaultQtyInPack
        /// </summary>
        [DataMember(Name = "default_qty_in_pack", EmitDefaultValue = false)]
        public string DefaultQtyInPack { get; set; }

        /// <summary>
        /// Gets or Sets IsQtyInPackFixed
        /// </summary>
        [DataMember(Name = "is_qty_in_pack_fixed", EmitDefaultValue = true)]
        public bool IsQtyInPackFixed { get; set; }

        /// <summary>
        /// Gets or Sets Price
        /// </summary>
        [DataMember(Name = "price", EmitDefaultValue = false)]
        public decimal Price { get; set; }

        /// <summary>
        /// Gets or Sets AdditionalFields
        /// </summary>
        [DataMember(Name = "additional_fields", EmitDefaultValue = false)]
        public Object AdditionalFields { get; set; }

        /// <summary>
        /// Gets or Sets CustomFields
        /// </summary>
        [DataMember(Name = "custom_fields", EmitDefaultValue = false)]
        public Object CustomFields { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ProductGroupItem {\n");
            sb.Append("  ChildItemId: ").Append(ChildItemId).Append("\n");
            sb.Append("  ProductId: ").Append(ProductId).Append("\n");
            sb.Append("  DefaultQtyInPack: ").Append(DefaultQtyInPack).Append("\n");
            sb.Append("  IsQtyInPackFixed: ").Append(IsQtyInPackFixed).Append("\n");
            sb.Append("  Price: ").Append(Price).Append("\n");
            sb.Append("  AdditionalFields: ").Append(AdditionalFields).Append("\n");
            sb.Append("  CustomFields: ").Append(CustomFields).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
