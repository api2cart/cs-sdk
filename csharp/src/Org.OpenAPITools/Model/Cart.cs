/*
 * API2Cart OpenAPI
 *
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// Cart
    /// </summary>
    [DataContract(Name = "Cart")]
    public partial class Cart : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Cart" /> class.
        /// </summary>
        /// <param name="name">name.</param>
        /// <param name="url">url.</param>
        /// <param name="varVersion">varVersion.</param>
        /// <param name="dbPrefix">dbPrefix.</param>
        /// <param name="storesInfo">storesInfo.</param>
        /// <param name="warehouses">warehouses.</param>
        /// <param name="shippingZones">shippingZones.</param>
        /// <param name="additionalFields">additionalFields.</param>
        /// <param name="customFields">customFields.</param>
        public Cart(string name = default(string), string url = default(string), string varVersion = default(string), string dbPrefix = default(string), List<CartStoreInfo> storesInfo = default(List<CartStoreInfo>), List<CartWarehouse> warehouses = default(List<CartWarehouse>), List<CartShippingZone> shippingZones = default(List<CartShippingZone>), Object additionalFields = default(Object), Object customFields = default(Object))
        {
            this.Name = name;
            this.Url = url;
            this.VarVersion = varVersion;
            this.DbPrefix = dbPrefix;
            this.StoresInfo = storesInfo;
            this.Warehouses = warehouses;
            this.ShippingZones = shippingZones;
            this.AdditionalFields = additionalFields;
            this.CustomFields = customFields;
        }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets Url
        /// </summary>
        [DataMember(Name = "url", EmitDefaultValue = false)]
        public string Url { get; set; }

        /// <summary>
        /// Gets or Sets VarVersion
        /// </summary>
        [DataMember(Name = "version", EmitDefaultValue = false)]
        public string VarVersion { get; set; }

        /// <summary>
        /// Gets or Sets DbPrefix
        /// </summary>
        [DataMember(Name = "db_prefix", EmitDefaultValue = false)]
        public string DbPrefix { get; set; }

        /// <summary>
        /// Gets or Sets StoresInfo
        /// </summary>
        [DataMember(Name = "stores_info", EmitDefaultValue = false)]
        public List<CartStoreInfo> StoresInfo { get; set; }

        /// <summary>
        /// Gets or Sets Warehouses
        /// </summary>
        [DataMember(Name = "warehouses", EmitDefaultValue = false)]
        public List<CartWarehouse> Warehouses { get; set; }

        /// <summary>
        /// Gets or Sets ShippingZones
        /// </summary>
        [DataMember(Name = "shipping_zones", EmitDefaultValue = false)]
        public List<CartShippingZone> ShippingZones { get; set; }

        /// <summary>
        /// Gets or Sets AdditionalFields
        /// </summary>
        [DataMember(Name = "additional_fields", EmitDefaultValue = false)]
        public Object AdditionalFields { get; set; }

        /// <summary>
        /// Gets or Sets CustomFields
        /// </summary>
        [DataMember(Name = "custom_fields", EmitDefaultValue = false)]
        public Object CustomFields { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Cart {\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Url: ").Append(Url).Append("\n");
            sb.Append("  VarVersion: ").Append(VarVersion).Append("\n");
            sb.Append("  DbPrefix: ").Append(DbPrefix).Append("\n");
            sb.Append("  StoresInfo: ").Append(StoresInfo).Append("\n");
            sb.Append("  Warehouses: ").Append(Warehouses).Append("\n");
            sb.Append("  ShippingZones: ").Append(ShippingZones).Append("\n");
            sb.Append("  AdditionalFields: ").Append(AdditionalFields).Append("\n");
            sb.Append("  CustomFields: ").Append(CustomFields).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
