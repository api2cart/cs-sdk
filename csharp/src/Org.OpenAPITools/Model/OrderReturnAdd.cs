/*
 * API2Cart OpenAPI
 *
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// OrderReturnAdd
    /// </summary>
    [DataContract(Name = "OrderReturnAdd")]
    public partial class OrderReturnAdd : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="OrderReturnAdd" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected OrderReturnAdd() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="OrderReturnAdd" /> class.
        /// </summary>
        /// <param name="orderId">Defines the order id.</param>
        /// <param name="storeId">Store Id.</param>
        /// <param name="returnStatusId">Defines return request status (required).</param>
        /// <param name="returnActionId">Defines return request action (required).</param>
        /// <param name="returnReasonId">Defines return request reason (required).</param>
        /// <param name="returnReason">Defines return request reason.</param>
        /// <param name="itemRestock">Boolean, whether or not to add the line items back to the store inventory. (default to false).</param>
        /// <param name="staffNote">Specifies staff note.</param>
        /// <param name="comment">Specifies return comment.</param>
        /// <param name="sendNotifications">Send notifications to customer after order was created (default to false).</param>
        /// <param name="rejectReason">Defines return reject reason.</param>
        /// <param name="orderProducts">orderProducts (required).</param>
        public OrderReturnAdd(string orderId = default(string), string storeId = default(string), string returnStatusId = default(string), string returnActionId = default(string), string returnReasonId = default(string), string returnReason = default(string), bool itemRestock = false, string staffNote = default(string), string comment = default(string), bool sendNotifications = false, string rejectReason = default(string), List<OrderReturnAddOrderProductsInner> orderProducts = default(List<OrderReturnAddOrderProductsInner>))
        {
            // to ensure "returnStatusId" is required (not null)
            if (returnStatusId == null)
            {
                throw new ArgumentNullException("returnStatusId is a required property for OrderReturnAdd and cannot be null");
            }
            this.ReturnStatusId = returnStatusId;
            // to ensure "returnActionId" is required (not null)
            if (returnActionId == null)
            {
                throw new ArgumentNullException("returnActionId is a required property for OrderReturnAdd and cannot be null");
            }
            this.ReturnActionId = returnActionId;
            // to ensure "returnReasonId" is required (not null)
            if (returnReasonId == null)
            {
                throw new ArgumentNullException("returnReasonId is a required property for OrderReturnAdd and cannot be null");
            }
            this.ReturnReasonId = returnReasonId;
            // to ensure "orderProducts" is required (not null)
            if (orderProducts == null)
            {
                throw new ArgumentNullException("orderProducts is a required property for OrderReturnAdd and cannot be null");
            }
            this.OrderProducts = orderProducts;
            this.OrderId = orderId;
            this.StoreId = storeId;
            this.ReturnReason = returnReason;
            this.ItemRestock = itemRestock;
            this.StaffNote = staffNote;
            this.Comment = comment;
            this.SendNotifications = sendNotifications;
            this.RejectReason = rejectReason;
        }

        /// <summary>
        /// Defines the order id
        /// </summary>
        /// <value>Defines the order id</value>
        /*
        <example>25</example>
        */
        [DataMember(Name = "order_id", EmitDefaultValue = false)]
        public string OrderId { get; set; }

        /// <summary>
        /// Store Id
        /// </summary>
        /// <value>Store Id</value>
        /*
        <example>1</example>
        */
        [DataMember(Name = "store_id", EmitDefaultValue = false)]
        public string StoreId { get; set; }

        /// <summary>
        /// Defines return request status
        /// </summary>
        /// <value>Defines return request status</value>
        /*
        <example>RETURNED</example>
        */
        [DataMember(Name = "return_status_id", IsRequired = true, EmitDefaultValue = true)]
        public string ReturnStatusId { get; set; }

        /// <summary>
        /// Defines return request action
        /// </summary>
        /// <value>Defines return request action</value>
        /*
        <example>RETURNED</example>
        */
        [DataMember(Name = "return_action_id", IsRequired = true, EmitDefaultValue = true)]
        public string ReturnActionId { get; set; }

        /// <summary>
        /// Defines return request reason
        /// </summary>
        /// <value>Defines return request reason</value>
        /*
        <example>broken</example>
        */
        [DataMember(Name = "return_reason_id", IsRequired = true, EmitDefaultValue = true)]
        public string ReturnReasonId { get; set; }

        /// <summary>
        /// Defines return request reason
        /// </summary>
        /// <value>Defines return request reason</value>
        /*
        <example>broken</example>
        */
        [DataMember(Name = "return_reason", EmitDefaultValue = false)]
        public string ReturnReason { get; set; }

        /// <summary>
        /// Boolean, whether or not to add the line items back to the store inventory.
        /// </summary>
        /// <value>Boolean, whether or not to add the line items back to the store inventory.</value>
        /*
        <example>true</example>
        */
        [DataMember(Name = "item_restock", EmitDefaultValue = true)]
        public bool ItemRestock { get; set; }

        /// <summary>
        /// Specifies staff note
        /// </summary>
        /// <value>Specifies staff note</value>
        /*
        <example>Test</example>
        */
        [DataMember(Name = "staff_note", EmitDefaultValue = false)]
        public string StaffNote { get; set; }

        /// <summary>
        /// Specifies return comment
        /// </summary>
        /// <value>Specifies return comment</value>
        /*
        <example>This coole order</example>
        */
        [DataMember(Name = "comment", EmitDefaultValue = false)]
        public string Comment { get; set; }

        /// <summary>
        /// Send notifications to customer after order was created
        /// </summary>
        /// <value>Send notifications to customer after order was created</value>
        /*
        <example>true</example>
        */
        [DataMember(Name = "send_notifications", EmitDefaultValue = true)]
        public bool SendNotifications { get; set; }

        /// <summary>
        /// Defines return reject reason
        /// </summary>
        /// <value>Defines return reject reason</value>
        /*
        <example>ORDER_UNPAID</example>
        */
        [DataMember(Name = "reject_reason", EmitDefaultValue = false)]
        public string RejectReason { get; set; }

        /// <summary>
        /// Gets or Sets OrderProducts
        /// </summary>
        [DataMember(Name = "order_products", IsRequired = true, EmitDefaultValue = true)]
        public List<OrderReturnAddOrderProductsInner> OrderProducts { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class OrderReturnAdd {\n");
            sb.Append("  OrderId: ").Append(OrderId).Append("\n");
            sb.Append("  StoreId: ").Append(StoreId).Append("\n");
            sb.Append("  ReturnStatusId: ").Append(ReturnStatusId).Append("\n");
            sb.Append("  ReturnActionId: ").Append(ReturnActionId).Append("\n");
            sb.Append("  ReturnReasonId: ").Append(ReturnReasonId).Append("\n");
            sb.Append("  ReturnReason: ").Append(ReturnReason).Append("\n");
            sb.Append("  ItemRestock: ").Append(ItemRestock).Append("\n");
            sb.Append("  StaffNote: ").Append(StaffNote).Append("\n");
            sb.Append("  Comment: ").Append(Comment).Append("\n");
            sb.Append("  SendNotifications: ").Append(SendNotifications).Append("\n");
            sb.Append("  RejectReason: ").Append(RejectReason).Append("\n");
            sb.Append("  OrderProducts: ").Append(OrderProducts).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
