/*
 * API2Cart OpenAPI
 *
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// AccountCartList200ResponseResultCartsInner
    /// </summary>
    [DataContract(Name = "AccountCartList_200_response_result_carts_inner")]
    public partial class AccountCartList200ResponseResultCartsInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AccountCartList200ResponseResultCartsInner" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="url">url.</param>
        /// <param name="storeKey">storeKey.</param>
        /// <param name="cartId">cartId.</param>
        /// <param name="totalCalls">totalCalls.</param>
        public AccountCartList200ResponseResultCartsInner(string id = default(string), string url = default(string), string storeKey = default(string), string cartId = default(string), string totalCalls = default(string))
        {
            this.Id = id;
            this.Url = url;
            this.StoreKey = storeKey;
            this.CartId = cartId;
            this.TotalCalls = totalCalls;
        }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets Url
        /// </summary>
        [DataMember(Name = "url", EmitDefaultValue = false)]
        public string Url { get; set; }

        /// <summary>
        /// Gets or Sets StoreKey
        /// </summary>
        [DataMember(Name = "store_key", EmitDefaultValue = false)]
        public string StoreKey { get; set; }

        /// <summary>
        /// Gets or Sets CartId
        /// </summary>
        [DataMember(Name = "cart_id", EmitDefaultValue = false)]
        public string CartId { get; set; }

        /// <summary>
        /// Gets or Sets TotalCalls
        /// </summary>
        [DataMember(Name = "total_calls", EmitDefaultValue = false)]
        public string TotalCalls { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AccountCartList200ResponseResultCartsInner {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Url: ").Append(Url).Append("\n");
            sb.Append("  StoreKey: ").Append(StoreKey).Append("\n");
            sb.Append("  CartId: ").Append(CartId).Append("\n");
            sb.Append("  TotalCalls: ").Append(TotalCalls).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
