/*
 * API2Cart OpenAPI
 *
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// Customer
    /// </summary>
    [DataContract(Name = "Customer")]
    public partial class Customer : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Customer" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="email">email.</param>
        /// <param name="firstName">firstName.</param>
        /// <param name="lastName">lastName.</param>
        /// <param name="phone">phone.</param>
        /// <param name="createdTime">createdTime.</param>
        /// <param name="modifiedTime">modifiedTime.</param>
        /// <param name="group">group.</param>
        /// <param name="login">login.</param>
        /// <param name="lastLogin">lastLogin.</param>
        /// <param name="birthDay">birthDay.</param>
        /// <param name="status">status.</param>
        /// <param name="newsLetterSubscription">newsLetterSubscription.</param>
        /// <param name="consents">consents.</param>
        /// <param name="gender">gender.</param>
        /// <param name="storesIds">storesIds.</param>
        /// <param name="website">website.</param>
        /// <param name="fax">fax.</param>
        /// <param name="company">company.</param>
        /// <param name="ipAddress">ipAddress.</param>
        /// <param name="addressBook">addressBook.</param>
        /// <param name="langId">langId.</param>
        /// <param name="ordersCount">ordersCount.</param>
        /// <param name="lastOrderId">lastOrderId.</param>
        /// <param name="additionalFields">additionalFields.</param>
        /// <param name="customFields">customFields.</param>
        public Customer(string id = default(string), string email = default(string), string firstName = default(string), string lastName = default(string), string phone = default(string), A2CDateTime createdTime = default(A2CDateTime), A2CDateTime modifiedTime = default(A2CDateTime), List<CustomerGroup> group = default(List<CustomerGroup>), string login = default(string), A2CDateTime lastLogin = default(A2CDateTime), A2CDateTime birthDay = default(A2CDateTime), string status = default(string), bool newsLetterSubscription = default(bool), List<CustomerConsent> consents = default(List<CustomerConsent>), string gender = default(string), List<string> storesIds = default(List<string>), string website = default(string), string fax = default(string), string company = default(string), string ipAddress = default(string), List<CustomerAddress> addressBook = default(List<CustomerAddress>), string langId = default(string), int ordersCount = default(int), string lastOrderId = default(string), Object additionalFields = default(Object), Object customFields = default(Object))
        {
            this.Id = id;
            this.Email = email;
            this.FirstName = firstName;
            this.LastName = lastName;
            this.Phone = phone;
            this.CreatedTime = createdTime;
            this.ModifiedTime = modifiedTime;
            this.Group = group;
            this.Login = login;
            this.LastLogin = lastLogin;
            this.BirthDay = birthDay;
            this.Status = status;
            this.NewsLetterSubscription = newsLetterSubscription;
            this.Consents = consents;
            this.Gender = gender;
            this.StoresIds = storesIds;
            this.Website = website;
            this.Fax = fax;
            this.Company = company;
            this.IpAddress = ipAddress;
            this.AddressBook = addressBook;
            this.LangId = langId;
            this.OrdersCount = ordersCount;
            this.LastOrderId = lastOrderId;
            this.AdditionalFields = additionalFields;
            this.CustomFields = customFields;
        }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets Email
        /// </summary>
        [DataMember(Name = "email", EmitDefaultValue = false)]
        public string Email { get; set; }

        /// <summary>
        /// Gets or Sets FirstName
        /// </summary>
        [DataMember(Name = "first_name", EmitDefaultValue = false)]
        public string FirstName { get; set; }

        /// <summary>
        /// Gets or Sets LastName
        /// </summary>
        [DataMember(Name = "last_name", EmitDefaultValue = false)]
        public string LastName { get; set; }

        /// <summary>
        /// Gets or Sets Phone
        /// </summary>
        [DataMember(Name = "phone", EmitDefaultValue = false)]
        public string Phone { get; set; }

        /// <summary>
        /// Gets or Sets CreatedTime
        /// </summary>
        [DataMember(Name = "created_time", EmitDefaultValue = false)]
        public A2CDateTime CreatedTime { get; set; }

        /// <summary>
        /// Gets or Sets ModifiedTime
        /// </summary>
        [DataMember(Name = "modified_time", EmitDefaultValue = false)]
        public A2CDateTime ModifiedTime { get; set; }

        /// <summary>
        /// Gets or Sets Group
        /// </summary>
        [DataMember(Name = "group", EmitDefaultValue = false)]
        public List<CustomerGroup> Group { get; set; }

        /// <summary>
        /// Gets or Sets Login
        /// </summary>
        [DataMember(Name = "login", EmitDefaultValue = false)]
        public string Login { get; set; }

        /// <summary>
        /// Gets or Sets LastLogin
        /// </summary>
        [DataMember(Name = "last_login", EmitDefaultValue = false)]
        public A2CDateTime LastLogin { get; set; }

        /// <summary>
        /// Gets or Sets BirthDay
        /// </summary>
        [DataMember(Name = "birth_day", EmitDefaultValue = false)]
        public A2CDateTime BirthDay { get; set; }

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name = "status", EmitDefaultValue = false)]
        public string Status { get; set; }

        /// <summary>
        /// Gets or Sets NewsLetterSubscription
        /// </summary>
        [DataMember(Name = "news_letter_subscription", EmitDefaultValue = true)]
        public bool NewsLetterSubscription { get; set; }

        /// <summary>
        /// Gets or Sets Consents
        /// </summary>
        [DataMember(Name = "consents", EmitDefaultValue = false)]
        public List<CustomerConsent> Consents { get; set; }

        /// <summary>
        /// Gets or Sets Gender
        /// </summary>
        [DataMember(Name = "gender", EmitDefaultValue = false)]
        public string Gender { get; set; }

        /// <summary>
        /// Gets or Sets StoresIds
        /// </summary>
        [DataMember(Name = "stores_ids", EmitDefaultValue = false)]
        public List<string> StoresIds { get; set; }

        /// <summary>
        /// Gets or Sets Website
        /// </summary>
        [DataMember(Name = "website", EmitDefaultValue = false)]
        public string Website { get; set; }

        /// <summary>
        /// Gets or Sets Fax
        /// </summary>
        [DataMember(Name = "fax", EmitDefaultValue = false)]
        public string Fax { get; set; }

        /// <summary>
        /// Gets or Sets Company
        /// </summary>
        [DataMember(Name = "company", EmitDefaultValue = false)]
        public string Company { get; set; }

        /// <summary>
        /// Gets or Sets IpAddress
        /// </summary>
        [DataMember(Name = "ip_address", EmitDefaultValue = false)]
        public string IpAddress { get; set; }

        /// <summary>
        /// Gets or Sets AddressBook
        /// </summary>
        [DataMember(Name = "address_book", EmitDefaultValue = false)]
        public List<CustomerAddress> AddressBook { get; set; }

        /// <summary>
        /// Gets or Sets LangId
        /// </summary>
        [DataMember(Name = "lang_id", EmitDefaultValue = false)]
        public string LangId { get; set; }

        /// <summary>
        /// Gets or Sets OrdersCount
        /// </summary>
        [DataMember(Name = "orders_count", EmitDefaultValue = false)]
        public int OrdersCount { get; set; }

        /// <summary>
        /// Gets or Sets LastOrderId
        /// </summary>
        [DataMember(Name = "last_order_id", EmitDefaultValue = false)]
        public string LastOrderId { get; set; }

        /// <summary>
        /// Gets or Sets AdditionalFields
        /// </summary>
        [DataMember(Name = "additional_fields", EmitDefaultValue = false)]
        public Object AdditionalFields { get; set; }

        /// <summary>
        /// Gets or Sets CustomFields
        /// </summary>
        [DataMember(Name = "custom_fields", EmitDefaultValue = false)]
        public Object CustomFields { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Customer {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Email: ").Append(Email).Append("\n");
            sb.Append("  FirstName: ").Append(FirstName).Append("\n");
            sb.Append("  LastName: ").Append(LastName).Append("\n");
            sb.Append("  Phone: ").Append(Phone).Append("\n");
            sb.Append("  CreatedTime: ").Append(CreatedTime).Append("\n");
            sb.Append("  ModifiedTime: ").Append(ModifiedTime).Append("\n");
            sb.Append("  Group: ").Append(Group).Append("\n");
            sb.Append("  Login: ").Append(Login).Append("\n");
            sb.Append("  LastLogin: ").Append(LastLogin).Append("\n");
            sb.Append("  BirthDay: ").Append(BirthDay).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  NewsLetterSubscription: ").Append(NewsLetterSubscription).Append("\n");
            sb.Append("  Consents: ").Append(Consents).Append("\n");
            sb.Append("  Gender: ").Append(Gender).Append("\n");
            sb.Append("  StoresIds: ").Append(StoresIds).Append("\n");
            sb.Append("  Website: ").Append(Website).Append("\n");
            sb.Append("  Fax: ").Append(Fax).Append("\n");
            sb.Append("  Company: ").Append(Company).Append("\n");
            sb.Append("  IpAddress: ").Append(IpAddress).Append("\n");
            sb.Append("  AddressBook: ").Append(AddressBook).Append("\n");
            sb.Append("  LangId: ").Append(LangId).Append("\n");
            sb.Append("  OrdersCount: ").Append(OrdersCount).Append("\n");
            sb.Append("  LastOrderId: ").Append(LastOrderId).Append("\n");
            sb.Append("  AdditionalFields: ").Append(AdditionalFields).Append("\n");
            sb.Append("  CustomFields: ").Append(CustomFields).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
